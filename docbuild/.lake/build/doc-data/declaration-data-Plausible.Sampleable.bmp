{"name":"Plausible.Sampleable","instances":[{"typeNames":["Sum"],"name":"Plausible.instShrinkableSum","className":"Plausible.Shrinkable"},{"typeNames":["Unit"],"name":"Plausible.Unit.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Nat"],"name":"Plausible.Nat.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Fin"],"name":"Plausible.Fin.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["BitVec"],"name":"Plausible.BitVec.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["UInt8"],"name":"Plausible.UInt8.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["UInt16"],"name":"Plausible.UInt16.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["UInt32"],"name":"Plausible.UInt32.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["UInt64"],"name":"Plausible.UInt64.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["USize"],"name":"Plausible.USize.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Int"],"name":"Plausible.Int.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Bool"],"name":"Plausible.Bool.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Char"],"name":"Plausible.Char.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Option"],"name":"Plausible.Option.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Prod"],"name":"Plausible.Prod.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Sigma"],"name":"Plausible.Sigma.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["List"],"name":"Plausible.List.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["ULift"],"name":"Plausible.ULift.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["String"],"name":"Plausible.String.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Array"],"name":"Plausible.Array.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Subtype"],"name":"Plausible.Subtype.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Sum"],"name":"Plausible.Sum.SampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Unit"],"name":"Plausible.Unit.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Sigma"],"name":"Plausible.instSampleableExtSigma","className":"Plausible.SampleableExt"},{"typeNames":["Nat"],"name":"Plausible.Nat.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Fin"],"name":"Plausible.Fin.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["BitVec"],"name":"Plausible.BitVec.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["UInt8"],"name":"Plausible.UInt8.SampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["UInt16"],"name":"Plausible.UInt16.SampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["UInt32"],"name":"Plausible.UInt32.SampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["UInt64"],"name":"Plausible.UInt64.SampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["USize"],"name":"Plausible.USize.SampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Int"],"name":"Plausible.Int.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Bool"],"name":"Plausible.Bool.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Char"],"name":"Plausible.Char.sampleableDefault","className":"Plausible.SampleableExt"},{"typeNames":["Option"],"name":"Plausible.Option.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Prod"],"name":"Plausible.Prod.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["_builtin_prop"],"name":"Plausible.Prop.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["List"],"name":"Plausible.List.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["ULift"],"name":"Plausible.ULift.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["String"],"name":"Plausible.String.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Array"],"name":"Plausible.Array.sampleableExt","className":"Plausible.SampleableExt"},{"typeNames":["Plausible.NoShrink"],"name":"Plausible.NoShrink.inhabited","className":"Inhabited"},{"typeNames":["Plausible.NoShrink"],"name":"Plausible.NoShrink.repr","className":"Repr"},{"typeNames":["Plausible.NoShrink"],"name":"Plausible.NoShrink.shrinkable","className":"Plausible.Shrinkable"},{"typeNames":["Plausible.NoShrink"],"name":"Plausible.NoShrink.sampleableExt","className":"Plausible.SampleableExt"}],"imports":["Init","Lean.Elab.Command","Lean.Meta.Eval","Plausible.Gen"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L433-L473","name":"Plausible.«command#sample_»","line":433,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.«command#sample_»","doc":"`#sample type`, where `type` has an instance of `SampleableExt`, prints ten random\nvalues of type `type` using an increasing size parameter.\n\n```lean\n#sample Nat\n-- prints\n-- 0\n-- 0\n-- 2\n-- 24\n-- 64\n-- 76\n-- 5\n-- 132\n-- 8\n-- 449\n-- or some other sequence of numbers\n\n#sample List Int\n-- prints\n-- []\n-- [1, 1]\n-- [-7, 9, -6]\n-- [36]\n-- [-500, 105, 260]\n-- [-290]\n-- [17, 156]\n-- [-2364, -7599, 661, -2411, -3576, 5517, -3823, -968]\n-- [-643]\n-- [11892, 16329, -15095, -15461]\n-- or whatever\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.«command#sample_»\"><span class=\"name\">Plausible</span>.<span class=\"name\">«command#sample_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L390-L404","name":"Plausible.printSamples","line":390,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.printSamples","doc":"Print (at most) 10 samples of a given type to stdout for debugging.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.printSamples\"><span class=\"name\">Plausible</span>.<span class=\"name\">printSamples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">t</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L385-L386","name":"Plausible.NoShrink.sampleableExt","line":385,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L382-L383","name":"Plausible.NoShrink.shrinkable","line":382,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L380-L380","name":"Plausible.NoShrink.repr","line":380,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.repr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.repr\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L379-L379","name":"Plausible.NoShrink.inhabited","line":379,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.inhabited\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L377-L377","name":"Plausible.NoShrink.get","line":377,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.get\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L376-L376","name":"Plausible.NoShrink.mk","line":376,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L371-L372","name":"Plausible.NoShrink","line":371,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink","doc":"An annotation for values that should never get shrunk. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L364-L367","name":"Plausible.Array.sampleableExt","line":364,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Array.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Array.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Array</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L361-L362","name":"Plausible.String.sampleableExt","line":361,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.String.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.String.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">String</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L356-L359","name":"Plausible.ULift.sampleableExt","line":356,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.ULift.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.ULift.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">ULift</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L351-L354","name":"Plausible.List.sampleableExt","line":351,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.List.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.List.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">List</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L344-L349","name":"Plausible.Prop.sampleableExt","line":344,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Prop.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Prop.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prop</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L336-L342","name":"Plausible.Prod.sampleableExt","line":336,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Prod.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Prod.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prod</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L328-L334","name":"Plausible.Option.sampleableExt","line":328,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Option.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Option.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Option</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L325-L326","name":"Plausible.Char.sampleableDefault","line":325,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Char.sampleableDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Char.sampleableDefault\"><span class=\"name\">Plausible</span>.<span class=\"name\">Char</span>.<span class=\"name\">sampleableDefault</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L312-L323","name":"Plausible.Char.sampleable","line":312,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.Char.sampleable","doc":"This can be specialized into customized `SampleableExt Char` instances.\nThe resulting instance has `1 / length` chances of making an unrestricted choice of characters\nand it otherwise chooses a character from `chars` with uniform probabilities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Char.sampleable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Char</span>.<span class=\"name\">sampleable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">length</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">chars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">chars</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L309-L310","name":"Plausible.Bool.sampleableExt","line":309,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Bool.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Bool.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Bool</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L305-L307","name":"Plausible.Int.sampleableExt","line":305,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Int.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Int.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Int</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L300-L303","name":"Plausible.USize.SampleableExt","line":300,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.USize.SampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.USize.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">USize</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L295-L298","name":"Plausible.UInt64.SampleableExt","line":295,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt64.SampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt64.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt64</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L290-L293","name":"Plausible.UInt32.SampleableExt","line":290,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt32.SampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt32.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt32</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L285-L288","name":"Plausible.UInt16.SampleableExt","line":285,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt16.SampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt16.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt16</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L280-L283","name":"Plausible.UInt8.SampleableExt","line":280,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt8.SampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt8.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt8</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L275-L278","name":"Plausible.BitVec.sampleableExt","line":275,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.BitVec.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.BitVec.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L270-L273","name":"Plausible.Fin.sampleableExt","line":270,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Fin.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Fin.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Fin</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L267-L268","name":"Plausible.Nat.sampleableExt","line":267,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Nat.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Nat.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L260-L265","name":"Plausible.instSampleableExtSigma","line":260,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.instSampleableExtSigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.instSampleableExtSigma\"><span class=\"name\">Plausible</span>.<span class=\"name\">instSampleableExtSigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">((_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L257-L258","name":"Plausible.Unit.sampleableExt","line":257,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Unit.sampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Unit.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Unit</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L246-L255","name":"Plausible.Sum.SampleableExt","line":246,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Sum.SampleableExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Sum.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Sum</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L229-L238","name":"Plausible.Subtype.shrinkable","line":229,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Subtype.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Subtype.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Subtype</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L226-L227","name":"Plausible.Array.shrinkable","line":226,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Array.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Array.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Array</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L223-L224","name":"Plausible.String.shrinkable","line":223,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.String.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.String.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">String</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L220-L221","name":"Plausible.ULift.shrinkable","line":220,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.ULift.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.ULift.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">ULift</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L214-L218","name":"Plausible.List.shrinkable","line":214,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.List.shrinkable","doc":"Shrink a list of a shrinkable type, either by discarding an element or shrinking an element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.List.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">List</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L205-L210","name":"Plausible.Sigma.shrinkable","line":205,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Sigma.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Sigma.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Sigma</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrA</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrB</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">((_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L198-L203","name":"Plausible.Prod.shrinkable","line":198,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Prod.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Prod.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prod</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrA</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrB</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L192-L196","name":"Plausible.Option.shrinkable","line":192,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Option.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Option.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Option</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L190-L190","name":"Plausible.Char.shrinkable","line":190,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Char.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Char.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Char</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L189-L189","name":"Plausible.Bool.shrinkable","line":189,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Bool.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Bool.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Bool</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L181-L187","name":"Plausible.Int.shrinkable","line":181,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Int.shrinkable","doc":"`Int.shrinkable` operates like `Nat.shrinkable` but also includes the negative variants. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Int.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Int</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L178-L179","name":"Plausible.USize.shrinkable","line":178,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.USize.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.USize.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">USize</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L175-L176","name":"Plausible.UInt64.shrinkable","line":175,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt64.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt64.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt64</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L172-L173","name":"Plausible.UInt32.shrinkable","line":172,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt32.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt32.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt32</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L169-L170","name":"Plausible.UInt16.shrinkable","line":169,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt16.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt16.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt16</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L166-L167","name":"Plausible.UInt8.shrinkable","line":166,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.UInt8.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt8.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt8</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L163-L164","name":"Plausible.BitVec.shrinkable","line":163,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.BitVec.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.BitVec.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L160-L161","name":"Plausible.Fin.shrinkable","line":160,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Fin.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Fin.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Fin</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L157-L158","name":"Plausible.Nat.shrinkable","line":157,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Nat.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Nat.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Nat</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L148-L155","name":"Plausible.Nat.shrink","line":148,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.Nat.shrink","doc":"`Nat.shrink' n` creates a list of smaller natural numbers by\nsuccessively dividing `n` by 2 . For example, `Nat.shrink 5 = [2, 1, 0]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Nat.shrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">Nat</span>.<span class=\"name\">shrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L145-L146","name":"Plausible.Unit.shrinkable","line":145,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.Unit.shrinkable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Unit.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Unit</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L139-L143","name":"Plausible.instShrinkableSum","line":139,"kind":"instance","docLink":"./Plausible/Sampleable.html#Plausible.instShrinkableSum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.instShrinkableSum\"><span class=\"name\">Plausible</span>.<span class=\"name\">instShrinkableSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L130-L133","name":"Plausible.SampleableExt.interpSample","line":130,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.interpSample","doc":"First samples a proxy value and interprets it. Especially useful if\nthe proxy and target type are the same. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.interpSample\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">interpSample</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L121-L128","name":"Plausible.SampleableExt.mkSelfContained","line":121,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.mkSelfContained","doc":"Use to generate instance whose purpose is to simply generate values\nof a type directly using the `Gen` monad "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.mkSelfContained\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">mkSelfContained</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sample</span> : <span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L114-L114","name":"Plausible.SampleableExt.interp","line":114,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.interp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.interp\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">interp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L113-L113","name":"Plausible.SampleableExt.sample","line":113,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.sample","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.sample\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">sample</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L112-L112","name":"Plausible.SampleableExt.shrink","line":112,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.shrink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.shrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L111-L111","name":"Plausible.SampleableExt.proxyRepr","line":111,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.proxyRepr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxyRepr\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">proxyRepr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L110-L110","name":"Plausible.SampleableExt.proxy","line":110,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">proxy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L109-L109","name":"Plausible.SampleableExt.mk","line":109,"kind":"ctor","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proxy</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">proxyRepr</span> : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">proxy</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrink</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">proxy</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sample</span> : <span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">proxy</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">interp</span> : <span class=\"fn\"><span class=\"fn\">proxy</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L97-L114","name":"Plausible.SampleableExt","line":97,"kind":"class","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt","doc":"`SampleableExt` can be used in two ways. The first (and most common)\nis to simply generate values of a type directly using the `Gen` monad,\nif this is what you want to do then `SampleableExt.mkSelfContained` is\nthe way to go.\n\nFurthermore it makes it possible to express generators for types that\ndo not lend themselves to introspection, such as `Nat → Nat`.\nIf we test a quantification over functions the\ncounter-examples cannot be shrunken or printed meaningfully.\nFor that purpose, `SampleableExt` provides a proxy representation\n`proxy` that can be printed and shrunken as well\nas interpreted (using `interp`) as an object of the right type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Sort</a> (max u (v + 2))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L95-L95","name":"Plausible.Shrinkable.shrink","line":95,"kind":"def","docLink":"./Plausible/Sampleable.html#Plausible.Shrinkable.shrink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Shrinkable.shrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">Shrinkable</span>.<span class=\"name\">shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L94-L94","name":"Plausible.Shrinkable.mk","line":94,"kind":"ctor","docLink":"./Plausible/Sampleable.html#Plausible.Shrinkable.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Shrinkable.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">Shrinkable</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shrink</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/plausible/blob/4dfba8b20a5ce570b9ef8bae969dd163782f9793/Plausible/Sampleable.lean#L92-L95","name":"Plausible.Shrinkable","line":92,"kind":"class","docLink":"./Plausible/Sampleable.html#Plausible.Shrinkable","doc":"Given an example `x : α`, `Shrinkable α` gives us a way to shrink it\nand suggest simpler examples. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Shrinkable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}