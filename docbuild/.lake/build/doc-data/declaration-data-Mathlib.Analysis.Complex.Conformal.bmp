{"name":"Mathlib.Analysis.Complex.Conformal","instances":[],"imports":["Init","Mathlib.Analysis.Calculus.Conformal.NormedSpace","Mathlib.Analysis.Calculus.Deriv.Basic","Mathlib.Analysis.Calculus.FDeriv.Equiv","Mathlib.Analysis.Calculus.FDeriv.RestrictScalars","Mathlib.Analysis.Complex.Isometry","Mathlib.Analysis.Normed.Module.FiniteDimension","Mathlib.Data.Complex.FiniteDimensional"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L143-L159","name":"conformalAt_iff_differentiableAt_or_differentiableAt_comp_conj","line":143,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#conformalAt_iff_differentiableAt_or_differentiableAt_comp_conj","doc":"A complex function is conformal if and only if the function is holomorphic or antiholomorphic\nwith a nonvanishing differential. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#conformalAt_iff_differentiableAt_or_differentiableAt_comp_conj\"><span class=\"name\">conformalAt_iff_differentiableAt_or_differentiableAt_comp_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Conformal/NormedSpace.html#ConformalAt\">ConformalAt</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   (<span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>) <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">z</span>)</span></span>) <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#fderiv\">fderiv</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L134-L141","name":"DifferentiableAt.conformalAt","line":134,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#DifferentiableAt.conformalAt","doc":"A real differentiable function of the complex plane into some complex normed space `E` is\nconformal at a point `z` if it is holomorphic at that point with a nonvanishing differential.\nThis is a version of the Cauchy-Riemann equations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#DifferentiableAt.conformalAt\"><span class=\"name\">DifferentiableAt</span>.<span class=\"name\">conformalAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Conformal/NormedSpace.html#ConformalAt\">ConformalAt</a> <span class=\"fn\">f</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L105-L125","name":"isConformalMap_iff_is_complex_or_conj_linear","line":105,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_iff_is_complex_or_conj_linear","doc":"A real continuous linear map on the complex plane is conformal if and only if the map or its\nconjugate is complex linear, and the map is nonvanishing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_iff_is_complex_or_conj_linear\"><span class=\"name\">isConformalMap_iff_is_complex_or_conj_linear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ConformalLinearMap.html#IsConformalMap\">IsConformalMap</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   (<span class=\"fn\">(∃ (<span class=\"fn\">map</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.restrictScalars\">ContinuousLinearMap.restrictScalars</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">map</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>       <span class=\"fn\">∃ (<span class=\"fn\">map</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.restrictScalars\">ContinuousLinearMap.restrictScalars</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">map</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.comp\">comp</a></span> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjCLE\">Complex.conjCLE</a></span></span></span>) <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L90-L103","name":"IsConformalMap.is_complex_or_conj_linear","line":90,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#IsConformalMap.is_complex_or_conj_linear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#IsConformalMap.is_complex_or_conj_linear\"><span class=\"name\">IsConformalMap</span>.<span class=\"name\">is_complex_or_conj_linear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ConformalLinearMap.html#IsConformalMap\">IsConformalMap</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">map</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.restrictScalars\">ContinuousLinearMap.restrictScalars</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">map</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\">∃ (<span class=\"fn\">map</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.restrictScalars\">ContinuousLinearMap.restrictScalars</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">map</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.comp\">comp</a></span> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjCLE\">Complex.conjCLE</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L78-L80","name":"isConformalMap_complex_linear_conj","line":78,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_complex_linear_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_complex_linear_conj\"><span class=\"name\">isConformalMap_complex_linear_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">map</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ConformalLinearMap.html#IsConformalMap\">IsConformalMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.restrictScalars\">ContinuousLinearMap.restrictScalars</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">map</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.comp\">comp</a></span> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjCLE\">Complex.conjCLE</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L63-L76","name":"isConformalMap_complex_linear","line":63,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_complex_linear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_complex_linear\"><span class=\"name\">isConformalMap_complex_linear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">map</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">map</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ConformalLinearMap.html#IsConformalMap\">IsConformalMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap.restrictScalars\">ContinuousLinearMap.restrictScalars</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">map</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Conformal.lean#L56-L57","name":"isConformalMap_conj","line":56,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Conformal.html#isConformalMap_conj\"><span class=\"name\">isConformalMap_conj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/ConformalLinearMap.html#IsConformalMap\">IsConformalMap</a> <span class=\"fn\">↑<span class=\"fn\">{ <span class=\"fn\">toLinearEquiv</span> := <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjLIE\">Complex.conjLIE</a>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.toLinearEquiv\">toLinearEquiv</a></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">continuous_invFun</span> := <span class=\"fn\">⋯</span> }</span></span></span></div></div>"}]}