{"name":"Mathlib.Tactic.Recover","instances":[],"imports":["Init","Mathlib.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Recover.lean#L56-L68","name":"Mathlib.Tactic.tacticRecover_","line":56,"kind":"def","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.tacticRecover_","doc":"Modifier `recover` for a tactic (sequence) to debug cases where goals are closed incorrectly.\nThe tactic `recover tacs` for a tactic (sequence) `tacs` applies the tactics and then adds goals\nthat are not closed, starting from the original goal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.tacticRecover_\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">tacticRecover_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Recover.lean#L42-L54","name":"Mathlib.Tactic.getUnassignedGoalMVarDependencies.go","line":42,"kind":"opaque","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies.go","doc":"auxiliary function for `getUnassignedGoalMVarDependencies` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies.go\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">getUnassignedGoalMVarDependencies</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Recover.lean#L32-L40","name":"Mathlib.Tactic.getUnassignedGoalMVarDependencies.addMVars","line":32,"kind":"opaque","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies.addMVars","doc":"auxiliary function for `getUnassignedGoalMVarDependencies` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies.addMVars\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">getUnassignedGoalMVarDependencies</span>.<span class=\"name\">addMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Recover.lean#L22-L54","name":"Mathlib.Tactic.getUnassignedGoalMVarDependencies","line":22,"kind":"def","docLink":"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies","doc":"Get all metavariables which `mvarId` depends on. These are the metavariables\nwhich occur in the target or local context or delayed assignment (if any) of\n`mvarId`, plus the metavariables which occur in these metavariables, etc.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Recover.html#Mathlib.Tactic.getUnassignedGoalMVarDependencies\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">getUnassignedGoalMVarDependencies</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span></div></div>"}]}