{"name":"Mathlib.Data.Seq.Parallel","instances":[],"imports":["Init","Mathlib.Data.WSeq.Relation"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L365-L367","name":"Computation.parallel_congr_right","line":365,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_congr_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_congr_right\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel_congr_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Relation.html#Stream'.WSeq.LiftRel\">Stream'.WSeq.LiftRel</a> <a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Equiv\">Equiv</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Equiv\">Equiv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">T</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L342-L363","name":"Computation.parallel_congr_left","line":342,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_congr_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_congr_left\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel_congr_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Relation.html#Stream'.WSeq.LiftRel\">Stream'.WSeq.LiftRel</a> <a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Equiv\">Equiv</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Equiv\">Equiv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">T</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L332-L339","name":"Computation.parallel_congr_lem","line":332,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_congr_lem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_congr_lem\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel_congr_lem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Relation.html#Stream'.WSeq.LiftRel\">Stream'.WSeq.LiftRel</a> <a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Equiv\">Equiv</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">T</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L326-L330","name":"Computation.mem_parallel","line":326,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.mem_parallel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.mem_parallel\"><span class=\"name\">Computation</span>.<span class=\"name\">mem_parallel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ac</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L321-L324","name":"Computation.parallel_promises","line":321,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_promises","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_promises\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel_promises</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L288-L319","name":"Computation.parallelRec","line":288,"kind":"def","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallelRec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallelRec\"><span class=\"name\">Computation</span>.<span class=\"name\">parallelRec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Sort</a> v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> → <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L280-L285","name":"Computation.parallel_empty","line":280,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel_empty\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Promises\">Promises</a></span> <a href=\"./Init/Prelude.html#Option.none\">none</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.empty\">empty</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L254-L278","name":"Computation.map_parallel","line":254,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.map_parallel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.map_parallel\"><span class=\"name\">Computation</span>.<span class=\"name\">map_parallel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">Stream'.WSeq.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L176-L252","name":"Computation.exists_of_mem_parallel","line":176,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.exists_of_mem_parallel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.exists_of_mem_parallel\"><span class=\"name\">Computation</span>.<span class=\"name\">exists_of_mem_parallel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L114-L174","name":"Computation.terminates_parallel","line":114,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.terminates_parallel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.terminates_parallel\"><span class=\"name\">Computation</span>.<span class=\"name\">terminates_parallel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\">parallel</a> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L51-L112","name":"Computation.terminates_parallel.aux","line":51,"kind":"theorem","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.terminates_parallel.aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.terminates_parallel.aux\"><span class=\"name\">Computation</span>.<span class=\"name\">terminates_parallel</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">corec</a> <a href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel.aux1\">parallel.aux1</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">S</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L46-L49","name":"Computation.parallel","line":46,"kind":"def","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel","doc":"Parallel computation of an infinite stream of computations,\ntaking the first result "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L34-L44","name":"Computation.parallel.aux1","line":34,"kind":"def","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel.aux1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel.aux1\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel</span>.<span class=\"name\">aux1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">Stream'.WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Seq/Parallel.lean#L26-L32","name":"Computation.parallel.aux2","line":26,"kind":"def","docLink":"./Mathlib/Data/Seq/Parallel.html#Computation.parallel.aux2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Seq/Parallel.html#Computation.parallel.aux2\"><span class=\"name\">Computation</span>.<span class=\"name\">parallel</span>.<span class=\"name\">aux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">α</span>)</span></span></span></div></div>"}]}