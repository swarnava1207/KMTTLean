{"name":"Mathlib.Tactic.NormNum.OfScientific","instances":[],"imports":["Init","Mathlib.Tactic.NormNum.Basic","Mathlib.Data.Rat.Cast.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/NormNum/OfScientific.lean#L39-L63","name":"Mathlib.Meta.NormNum.evalOfScientific","line":39,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/OfScientific.html#Mathlib.Meta.NormNum.evalOfScientific","doc":"The `norm_num` extension which identifies expressions in scientific notation, normalizing them\nto rat casts if the scientific notation is inherited from the one for rationals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/OfScientific.html#Mathlib.Meta.NormNum.evalOfScientific\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">evalOfScientific</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/NormNum/Core.html#Mathlib.Meta.NormNum.NormNumExt\">NormNumExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/NormNum/OfScientific.lean#L30-L37","name":"Mathlib.Meta.NormNum.isNat_ofScientific_of_false","line":30,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/OfScientific.html#Mathlib.Meta.NormNum.isNat_ofScientific_of_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/OfScientific.html#Mathlib.Meta.NormNum.isNat_ofScientific_of_false\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">isNat_ofScientific_of_false</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">e </span><span class=\"fn\">nm </span><span class=\"fn\">ne </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsNat\">IsNat</a> <span class=\"fn\">m</span> <span class=\"fn\">nm</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsNat\">IsNat</a> <span class=\"fn\">e</span> <span class=\"fn\">ne</span></span> → <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">nm</span>.<a href=\"./Init/Prelude.html#Nat.mul\">mul</a></span> (<span class=\"fn\">10</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">ne</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsNat\">IsNat</a> <span class=\"fn\">(<a href=\"./Init/Data/OfScientific.html#OfScientific.ofScientific\">OfScientific.ofScientific</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a> <span class=\"fn\">e</span>)</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/NormNum/OfScientific.lean#L23-L27","name":"Mathlib.Meta.NormNum.isRat_ofScientific_of_true","line":23,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/OfScientific.html#Mathlib.Meta.NormNum.isRat_ofScientific_of_true","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/OfScientific.html#Mathlib.Meta.NormNum.isRat_ofScientific_of_true\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">isRat_ofScientific_of_true</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">e</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsRat\">IsRat</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Batteries/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\">(↑<span class=\"fn\">m</span>)</span> (<span class=\"fn\">10</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span>))</span>)</span> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsRat\">IsRat</a> <span class=\"fn\">(<a href=\"./Init/Data/OfScientific.html#OfScientific.ofScientific\">OfScientific.ofScientific</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">e</span>)</span> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span></span></div></div>"}]}