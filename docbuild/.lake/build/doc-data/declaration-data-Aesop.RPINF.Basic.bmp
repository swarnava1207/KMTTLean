{"name":"Aesop.RPINF.Basic","instances":[{"typeNames":["Aesop.PINFRaw"],"name":"Aesop.instInhabitedPINFRaw","className":"Inhabited"},{"typeNames":["Aesop.PINFRaw"],"name":"Aesop.instBEqPINFRaw","className":"BEq"},{"typeNames":["Aesop.PINFRaw"],"name":"Aesop.instHashablePINFRaw","className":"Hashable"},{"typeNames":["Aesop.PINFRaw"],"name":"Aesop.instToStringPINFRaw","className":"ToString"},{"typeNames":["Aesop.PINFRaw"],"name":"Aesop.instToFormatPINFRaw","className":"Std.ToFormat"},{"typeNames":["Aesop.PINFRaw"],"name":"Aesop.instToMessageDataPINFRaw","className":"Lean.ToMessageData"},{"typeNames":["Aesop.RPINFCache"],"name":"Aesop.instInhabitedRPINFCache","className":"Inhabited"},{"typeNames":["Aesop.RPINFCache"],"name":"Aesop.instEmptyCollectionRPINFCache","className":"EmptyCollection"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instInhabitedPINF","className":"Inhabited"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instBEqPINF","className":"BEq"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instHashablePINF","className":"Hashable"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instOrdPINF","className":"Ord"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instToStringPINF","className":"ToString"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instToFormatPINF","className":"Std.ToFormat"},{"typeNames":["Aesop.PINF"],"name":"Aesop.instToMessageDataPINF","className":"Lean.ToMessageData"}],"imports":["Init","Lean"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L142-L143","name":"Aesop.RPINF","line":142,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINF","doc":"An expression in RPINF together with its RPINF hash. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINF</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L139-L140","name":"Aesop.instToMessageDataPINF","line":139,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToMessageDataPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L136-L137","name":"Aesop.instToFormatPINF","line":136,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToFormatPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Std.ToFormat</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L133-L134","name":"Aesop.instToStringPINF","line":133,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToStringPINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToStringPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToStringPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L129-L131","name":"Aesop.instOrdPINF","line":129,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instOrdPINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instOrdPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instOrdPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L126-L127","name":"Aesop.instHashablePINF","line":126,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instHashablePINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instHashablePINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashablePINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L123-L124","name":"Aesop.instBEqPINF","line":123,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instBEqPINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instBEqPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L121-L121","name":"Aesop.instInhabitedPINF","line":121,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L120-L120","name":"Aesop.PINF.hash","line":120,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF.hash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF.hash\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span>.<span class=\"name\">hash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L119-L119","name":"Aesop.PINF.toExpr","line":119,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF.toExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L118-L118","name":"Aesop.PINF.mk","line":118,"kind":"ctor","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L116-L121","name":"Aesop.PINF","line":116,"kind":"structure","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF","doc":"An expression in PINF at transparency `md`, together with its PINF hash as\ncomputed by `pinfHash`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L112-L113","name":"Aesop.instEmptyCollectionRPINFCache","line":112,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instEmptyCollectionRPINFCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instEmptyCollectionRPINFCache\"><span class=\"name\">Aesop</span>.<span class=\"name\">instEmptyCollectionRPINFCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L110-L110","name":"Aesop.instInhabitedRPINFCache","line":110,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedRPINFCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedRPINFCache\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRPINFCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L109-L109","name":"Aesop.RPINFCache.map","line":109,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.map\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFCache</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw\">RPINFRaw</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L108-L108","name":"Aesop.RPINFCache.mk","line":108,"kind":"ctor","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFCache</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw\">RPINFRaw</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L107-L110","name":"Aesop.RPINFCache","line":107,"kind":"structure","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFCache","doc":"Cache for `rpinf`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L103-L104","name":"Aesop.RPINFRaw","line":103,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw","doc":"An expression in PINF at `reducible` transparency. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFRaw</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L100-L101","name":"Aesop.instToMessageDataPINFRaw","line":100,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINFRaw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToMessageDataPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L97-L98","name":"Aesop.instToFormatPINFRaw","line":97,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINFRaw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToFormatPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Std.ToFormat</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L94-L95","name":"Aesop.instToStringPINFRaw","line":94,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToStringPINFRaw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToStringPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToStringPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L91-L92","name":"Aesop.instHashablePINFRaw","line":91,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instHashablePINFRaw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instHashablePINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashablePINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L88-L89","name":"Aesop.instBEqPINFRaw","line":88,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instBEqPINFRaw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instBEqPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L86-L86","name":"Aesop.instInhabitedPINFRaw","line":86,"kind":"instance","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINFRaw","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L85-L85","name":"Aesop.PINFRaw.toExpr","line":85,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.toExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINFRaw</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L84-L84","name":"Aesop.PINFRaw.mk","line":84,"kind":"ctor","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINFRaw</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L83-L86","name":"Aesop.PINFRaw","line":83,"kind":"structure","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINFRaw","doc":"An expression in PINF at transparency `md`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINFRaw</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L78-L80","name":"Aesop.pinfHash","line":78,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfHash","doc":"Compute the PINF hash of an expression in PINF. The hash ignores binder\nnames, binder info and proofs marked by `mdataPINFIsProofName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfHash\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L52-L76","name":"Aesop.pinfHashCore","line":52,"kind":"opaque","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfHashCore","doc":"Compute the PINF hash of an expression in PINF. The hash ignores binder\nnames, binder info and proofs marked by `mdataPINFIsProofName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfHashCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfHashCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <span class=\"fn\">s</span> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L47-L49","name":"Aesop.pinfEq","line":47,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfEq","doc":"Check whether two expressions in PINF are equal. We assume that the two\nexpressions are type-correct, in PINF and have defeq types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfEq\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L28-L45","name":"Aesop.pinfEqCore","line":28,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfEqCore","doc":"Check whether two expressions in PINF are equal. We assume that the two\nexpressions are type-correct, in PINF and have defeq types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfEqCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfEqCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L23-L25","name":"Aesop.mdataIsProof","line":23,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.mdataIsProof","doc":"Check whether `d` indicates that the enclosed expression is a proof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.mdataIsProof\"><span class=\"name\">Aesop</span>.<span class=\"name\">mdataIsProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L19-L21","name":"Aesop.mdataSetIsProof","line":19,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.mdataSetIsProof","doc":"Modify `d` to indicate that the enclosed expression is a proof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.mdataSetIsProof\"><span class=\"name\">Aesop</span>.<span class=\"name\">mdataSetIsProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RPINF/Basic.lean#L15-L17","name":"Aesop.mdataPINFIsProofName","line":15,"kind":"def","docLink":"./Aesop/RPINF/Basic.html#Aesop.mdataPINFIsProofName","doc":"`MData` tag for expressions that are proofs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.mdataPINFIsProofName\"><span class=\"name\">Aesop</span>.<span class=\"name\">mdataPINFIsProofName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"}]}