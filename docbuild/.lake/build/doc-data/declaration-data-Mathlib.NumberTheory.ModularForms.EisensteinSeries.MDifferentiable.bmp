{"name":"Mathlib.NumberTheory.ModularForms.EisensteinSeries.MDifferentiable","instances":[],"imports":["Init","Mathlib.NumberTheory.ModularForms.EisensteinSeries.UniformConvergence","Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","Mathlib.Analysis.Complex.LocallyUniformLimit","Mathlib.Geometry.Manifold.MFDeriv.FDeriv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.lean#L48-L60","name":"EisensteinSeries.eisensteinSeries_SIF_MDifferentiable","line":48,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.html#EisensteinSeries.eisensteinSeries_SIF_MDifferentiable","doc":"Eisenstein series are MDifferentiable (i.e. holomorphic functions from `ℍ → ℂ`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.html#EisensteinSeries.eisensteinSeries_SIF_MDifferentiable\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">eisensteinSeries_SIF_MDifferentiable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiable\">MDifferentiable</a> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisensteinSeries_SIF\">eisensteinSeries_SIF</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.lean#L39-L46","name":"EisensteinSeries.eisSummand_extension_differentiableOn","line":39,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.html#EisensteinSeries.eisSummand_extension_differentiableOn","doc":"Auxiliary lemma showing that for any `k : ℤ` and `(a : Fin 2 → ℤ)`\nthe extension of `eisSummand` is differentiable on `{z : ℂ | 0 < z.im}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.html#EisensteinSeries.eisSummand_extension_differentiableOn\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">eisSummand_extension_differentiableOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisSummand\">eisSummand</a> <span class=\"fn\">k</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Topology.html#UpperHalfPlane.ofComplex\">UpperHalfPlane.ofComplex</a></span>) <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">z</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.lean#L26-L37","name":"EisensteinSeries.div_linear_zpow_differentiableOn","line":26,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.html#EisensteinSeries.div_linear_zpow_differentiableOn","doc":"Auxiliary lemma showing that for any `k : ℤ` the function `z → 1/(c*z+d)^k` is\ndifferentiable on `{z : ℂ | 0 < z.im}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/MDifferentiable.html#EisensteinSeries.div_linear_zpow_differentiableOn\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">div_linear_zpow_differentiableOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(fun (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">a</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">a</span> <span class=\"fn\">1</span>)</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>))</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">z</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"}]}