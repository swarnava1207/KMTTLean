{"name":"Mathlib.Algebra.Group.Ext","instances":[],"imports":["Init","Mathlib.Algebra.Group.Hom.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L151-L151","name":"CommGroup.ext_iff","line":151,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext_iff\"><span class=\"name\">CommGroup</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L151-L151","name":"AddCommGroup.ext_iff","line":151,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext_iff\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Add.add\">Add.add</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Add.add\">Add.add</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L151-L151","name":"AddCommGroup.ext","line":151,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#Add.add\">Add.add</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Add.add\">Add.add</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L151-L153","name":"CommGroup.ext","line":151,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext\"><span class=\"name\">CommGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L147-L147","name":"AddCommGroup.toAddGroup_injective","line":147,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.toAddGroup_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.toAddGroup_injective\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">toAddGroup_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.toAddGroup\">toAddGroup</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L147-L149","name":"CommGroup.toGroup_injective","line":147,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.toGroup_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.toGroup_injective\"><span class=\"name\">CommGroup</span>.<span class=\"name\">toGroup_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup.toGroup\">toGroup</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L136-L136","name":"AddGroup.ext_iff","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext_iff\"><span class=\"name\">AddGroup</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Add.add\">Add.add</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Add.add\">Add.add</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L136-L136","name":"Group.ext_iff","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.ext_iff\"><span class=\"name\">Group</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L136-L136","name":"AddGroup.ext","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext\"><span class=\"name\">AddGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#Add.add\">Add.add</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Add.add\">Add.add</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L136-L145","name":"Group.ext","line":136,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.ext\"><span class=\"name\">Group</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Mul.mul\">Mul.mul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L132-L132","name":"AddGroup.toSubNegAddMonoid_injective","line":132,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.toSubNegAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.toSubNegAddMonoid_injective\"><span class=\"name\">AddGroup</span>.<span class=\"name\">toSubNegAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubNegMonoid\">toSubNegMonoid</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L132-L134","name":"Group.toDivInvMonoid_injective","line":132,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.toDivInvMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.toDivInvMonoid_injective\"><span class=\"name\">Group</span>.<span class=\"name\">toDivInvMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#Group.toDivInvMonoid\">toDivInvMonoid</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L111-L111","name":"DivInvMonoid.ext_iff","line":111,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext_iff\"><span class=\"name\">DivInvMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">Inv.inv</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">Inv.inv</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L111-L111","name":"SubNegMonoid.ext_iff","line":111,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext_iff\"><span class=\"name\">SubNegMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#Neg.neg\">Neg.neg</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">Neg.neg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L111-L111","name":"SubNegMonoid.ext","line":111,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext\"><span class=\"name\">SubNegMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_inv</span> : <a href=\"./Init/Prelude.html#Neg.neg\">Neg.neg</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">Neg.neg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L111-L130","name":"DivInvMonoid.ext","line":111,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext\"><span class=\"name\">DivInvMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_inv</span> : <a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">Inv.inv</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">Inv.inv</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L105-L105","name":"CancelCommMonoid.ext_iff","line":105,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext_iff\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L105-L105","name":"AddCancelCommMonoid.ext_iff","line":105,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext_iff\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L105-L105","name":"AddCancelCommMonoid.ext","line":105,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L105-L109","name":"CancelCommMonoid.ext","line":105,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L97-L97","name":"AddCancelCommMonoid.toAddCommMonoid_injective","line":97,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.toAddCommMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.toAddCommMonoid_injective\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">toAddCommMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.toAddCommMonoid\">toAddCommMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L97-L103","name":"CancelCommMonoid.toCommMonoid_injective","line":97,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.toCommMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.toCommMonoid_injective\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">toCommMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid.toCommMonoid\">toCommMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L91-L91","name":"CancelMonoid.ext_iff","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext_iff\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L91-L91","name":"AddCancelMonoid.ext_iff","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext_iff\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L91-L91","name":"AddCancelMonoid.ext","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L91-L95","name":"CancelMonoid.ext","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L85-L85","name":"AddCancelMonoid.toAddLeftCancelMonoid_injective","line":85,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.toAddLeftCancelMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.toAddLeftCancelMonoid_injective\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">toAddLeftCancelMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid.toAddLeftCancelMonoid\">toAddLeftCancelMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L85-L89","name":"CancelMonoid.toLeftCancelMonoid_injective","line":85,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.toLeftCancelMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.toLeftCancelMonoid_injective\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">toLeftCancelMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid.toLeftCancelMonoid\">toLeftCancelMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L79-L79","name":"AddRightCancelMonoid.ext_iff","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext_iff\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L79-L79","name":"RightCancelMonoid.ext_iff","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext_iff\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L79-L79","name":"AddRightCancelMonoid.ext","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L79-L83","name":"RightCancelMonoid.ext","line":79,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L73-L73","name":"AddRightCancelMonoid.toAddMonoid_injective","line":73,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.toAddMonoid_injective\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid.toAddMonoid\">toAddMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L73-L77","name":"RightCancelMonoid.toMonoid_injective","line":73,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.toMonoid_injective\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid.toMonoid\">toMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L67-L67","name":"AddLeftCancelMonoid.ext_iff","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext_iff\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L67-L67","name":"LeftCancelMonoid.ext_iff","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext_iff\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L67-L67","name":"AddLeftCancelMonoid.ext","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L67-L71","name":"LeftCancelMonoid.ext","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L61-L61","name":"AddLeftCancelMonoid.toAddMonoid_injective","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.toAddMonoid_injective\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid.toAddMonoid\">toAddMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L61-L65","name":"LeftCancelMonoid.toMonoid_injective","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.toMonoid_injective\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid.toMonoid\">toMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L56-L56","name":"CommMonoid.ext_iff","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext_iff\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L56-L56","name":"AddCommMonoid.ext_iff","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext_iff\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L56-L56","name":"AddCommMonoid.ext","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L56-L59","name":"CommMonoid.ext","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L50-L50","name":"AddCommMonoid.toAddMonoid_injective","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.toAddMonoid_injective\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid.toAddMonoid\">toAddMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L50-L54","name":"CommMonoid.toMonoid_injective","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.toMonoid_injective\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid.toMonoid\">toMonoid</a> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L34-L34","name":"AddMonoid.ext_iff","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext_iff\"><span class=\"name\">AddMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L34-L34","name":"Monoid.ext_iff","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Monoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Monoid.ext_iff\"><span class=\"name\">Monoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L34-L34","name":"AddMonoid.ext","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext\"><span class=\"name\">AddMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Group/Ext.lean#L34-L48","name":"Monoid.ext","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Monoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Monoid.ext\"><span class=\"name\">Monoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"}]}