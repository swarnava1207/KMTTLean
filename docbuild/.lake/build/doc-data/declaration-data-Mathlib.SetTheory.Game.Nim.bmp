{"name":"Mathlib.SetTheory.Game.Nim","instances":[{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.isEmpty_nim_zero_leftMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.isEmpty_nim_zero_rightMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.uniqueNimOneLeftMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.uniqueNimOneRightMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.nim"],"name":"SetTheory.PGame.impartial_nim","className":"SetTheory.PGame.Impartial"}],"imports":["Init","Mathlib.SetTheory.Game.Birthday","Mathlib.SetTheory.Game.Impartial","Mathlib.SetTheory.Nimber.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L358-L363","name":"SetTheory.PGame.grundyValue_add","line":358,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_add\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G </span><span class=\"fn\">H</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">H</span>).<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L354-L356","name":"SetTheory.PGame.nim_add_nim_equiv","line":354,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_nim_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_nim_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_add_nim_equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber.toOrdinal\">Nimber.toOrdinal</a> (<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Ordinal.toNimber\">Ordinal.toNimber</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Ordinal.toNimber\">Ordinal.toNimber</a> <span class=\"fn\">y</span></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L337-L352","name":"SetTheory.PGame.grundyValue_nim_add_nim","line":337,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_nim_add_nim","doc":"The Grundy value of the sum of two nim games equals their nimber addition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_nim_add_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_nim_add_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">y</span></span>).<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Ordinal.toNimber\">Ordinal.toNimber</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Ordinal.toNimber\">Ordinal.toNimber</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L332-L335","name":"SetTheory.PGame.grundyValue_le_of_forall_moveRight","line":332,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_le_of_forall_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_le_of_forall_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_le_of_forall_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L325-L330","name":"SetTheory.PGame.exists_grundyValue_moveRight_of_lt","line":325,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.exists_grundyValue_moveRight_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.exists_grundyValue_moveRight_of_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">exists_grundyValue_moveRight_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L319-L323","name":"SetTheory.PGame.le_grundyValue_of_Iio_subset_moveRight","line":319,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.le_grundyValue_of_Iio_subset_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.le_grundyValue_of_Iio_subset_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">le_grundyValue_of_Iio_subset_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L315-L317","name":"SetTheory.PGame.grundyValue_ne_moveRight","line":315,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_ne_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_ne_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_ne_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L307-L313","name":"SetTheory.PGame.grundyValue_eq_sInf_moveRight","line":307,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_sInf_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_sInf_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_sInf_moveRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span>))</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L303-L305","name":"SetTheory.PGame.grundyValue_neg","line":303,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_neg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">G</span>).<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L299-L301","name":"SetTheory.PGame.grundyValue_star","line":299,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_star\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_star</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Algebra.html#SetTheory.PGame.star\">star</a>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L296-L297","name":"SetTheory.PGame.grundyValue_iff_equiv_zero","line":296,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_iff_equiv_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_iff_equiv_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L292-L294","name":"SetTheory.PGame.grundyValue_zero","line":292,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L288-L290","name":"SetTheory.PGame.grundyValue_eq_iff_equiv","line":288,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_iff_equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G </span><span class=\"fn\">H</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">H</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L284-L286","name":"SetTheory.PGame.nim_grundyValue","line":284,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_grundyValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_grundyValue\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_grundyValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Ordinal.toNimber\">Ordinal.toNimber</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L279-L282","name":"SetTheory.PGame.grundyValue_eq_iff_equiv_nim","line":279,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_iff_equiv_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_iff_equiv_nim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber.toOrdinal\">Nimber.toOrdinal</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L260-L277","name":"SetTheory.PGame.equiv_nim_grundyValue","line":260,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.equiv_nim_grundyValue","doc":"The **Sprague-Grundy theorem** states that every impartial game is equivalent to a game of nim,\nnamely the game of nim corresponding to the game's Grundy value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.equiv_nim_grundyValue\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">equiv_nim_grundyValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber.toOrdinal\">Nimber.toOrdinal</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L255-L258","name":"SetTheory.PGame.grundyValue_le_of_forall_moveLeft","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_le_of_forall_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_le_of_forall_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_le_of_forall_moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L249-L253","name":"SetTheory.PGame.exists_grundyValue_moveLeft_of_lt","line":249,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.exists_grundyValue_moveLeft_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.exists_grundyValue_moveLeft_of_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">exists_grundyValue_moveLeft_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L243-L247","name":"SetTheory.PGame.le_grundyValue_of_Iio_subset_moveLeft","line":243,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.le_grundyValue_of_Iio_subset_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.le_grundyValue_of_Iio_subset_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">le_grundyValue_of_Iio_subset_moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L235-L241","name":"SetTheory.PGame.grundyValue_ne_moveLeft","line":235,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_ne_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_ne_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_ne_moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L231-L233","name":"SetTheory.PGame.grundyValue_eq_sInf_moveLeft","line":231,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_sInf_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue_eq_sInf_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue_eq_sInf_moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\">grundyValue</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span>))</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L219-L229","name":"SetTheory.PGame.grundyValue","line":219,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue","doc":"The Grundy value of an impartial game is recursively defined as the minimum excluded value\n(the infimum of the complement) of the Grundy values of either its left or right options.\n\nThis is the ordinal which corresponds to the game of nim that the game is equivalent to.\n\nThis function takes a value in `Nimber`. This is a type synonym for the ordinals which has the same\nordering, but addition in `Nimber` is such that it corresponds to the grundy value of the addition\nof games. See that file for more information on nimbers and their arithmetic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.grundyValue\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">grundyValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Nimber/Basic.html#Nimber\">Nimber</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L215-L217","name":"SetTheory.PGame.nim_equiv_iff_eq","line":215,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_equiv_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_equiv_iff_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_equiv_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L211-L213","name":"SetTheory.PGame.nim_add_fuzzy_zero_iff","line":211,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_fuzzy_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_fuzzy_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_add_fuzzy_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o₂</span></span>).<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L199-L209","name":"SetTheory.PGame.nim_add_equiv_zero_iff","line":199,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_equiv_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_add_equiv_zero_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_add_equiv_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L194-L197","name":"SetTheory.PGame.nim_fuzzy_zero_of_ne_zero","line":194,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_fuzzy_zero_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_fuzzy_zero_of_ne_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_fuzzy_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L189-L192","name":"SetTheory.PGame.impartial_nim","line":189,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.impartial_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.impartial_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">impartial_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Impartial.html#SetTheory.PGame.Impartial\">Impartial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L184-L187","name":"SetTheory.PGame.neg_nim","line":184,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.neg_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.neg_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">neg_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L175-L182","name":"SetTheory.PGame.nim_birthday","line":175,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_birthday","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_birthday\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_birthday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Birthday.html#SetTheory.PGame.birthday\">birthday</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L172-L173","name":"SetTheory.PGame.nim_one_equiv","line":172,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_one_equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <a href=\"./Mathlib/SetTheory/PGame/Algebra.html#SetTheory.PGame.star\">star</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L165-L170","name":"SetTheory.PGame.nimOneRelabelling","line":165,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimOneRelabelling","doc":"`nim 1` has exactly the same moves as `star`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimOneRelabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nimOneRelabelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <a href=\"./Mathlib/SetTheory/PGame/Algebra.html#SetTheory.PGame.star\">star</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L163-L163","name":"SetTheory.PGame.nim_one_moveRight","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_one_moveRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L161-L161","name":"SetTheory.PGame.nim_one_moveLeft","line":161,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_one_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_one_moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L156-L159","name":"SetTheory.PGame.toRightMovesNim_one_symm","line":156,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_one_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_one_symm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toRightMovesNim_one_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">0</span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L151-L154","name":"SetTheory.PGame.toLeftMovesNim_one_symm","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_one_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_one_symm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toLeftMovesNim_one_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">0</span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L146-L149","name":"SetTheory.PGame.default_nim_one_rightMoves_eq","line":146,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_rightMoves_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_rightMoves_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">default_nim_one_rightMoves_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Inhabited.default\">default</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a> <span class=\"fn\">⟨<span class=\"fn\">0</span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L141-L144","name":"SetTheory.PGame.default_nim_one_leftMoves_eq","line":141,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_leftMoves_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.default_nim_one_leftMoves_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">default_nim_one_leftMoves_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Inhabited.default\">default</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a> <span class=\"fn\">⟨<span class=\"fn\">0</span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L138-L139","name":"SetTheory.PGame.uniqueNimOneRightMoves","line":138,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneRightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneRightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniqueNimOneRightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L135-L136","name":"SetTheory.PGame.uniqueNimOneLeftMoves","line":135,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneLeftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.uniqueNimOneLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniqueNimOneLeftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L132-L133","name":"SetTheory.PGame.nim_zero_equiv","line":132,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_zero_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_zero_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_zero_equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L128-L130","name":"SetTheory.PGame.nimZeroRelabelling","line":128,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimZeroRelabelling","doc":"`nim 0` has exactly the same moves as `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nimZeroRelabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nimZeroRelabelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L124-L126","name":"SetTheory.PGame.isEmpty_nim_zero_rightMoves","line":124,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_nim_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L120-L122","name":"SetTheory.PGame.isEmpty_nim_zero_leftMoves","line":120,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.isEmpty_nim_zero_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_nim_zero_leftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L114-L118","name":"SetTheory.PGame.rightMovesNimRecOn","line":114,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMovesNimRecOn","doc":"A recursion principle for right moves of a nim game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMovesNimRecOn\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">rightMovesNimRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>) → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a> <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">H</span>⟩</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L108-L112","name":"SetTheory.PGame.leftMovesNimRecOn","line":108,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMovesNimRecOn","doc":"A recursion principle for left moves of a nim game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMovesNimRecOn\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leftMovesNimRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_2}</a>) → <span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>) → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a> <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">H</span>⟩</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L104-L106","name":"SetTheory.PGame.moveRight_toRightMovesNim","line":104,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_toRightMovesNim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_toRightMovesNim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_toRightMovesNim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L101-L102","name":"SetTheory.PGame.moveRight_nim'","line":101,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim'","doc":"**Alias** of `SetTheory.PGame.moveRight_nim`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_nim'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L97-L99","name":"SetTheory.PGame.moveRight_nim","line":97,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_nim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L93-L95","name":"SetTheory.PGame.moveLeft_toLeftMovesNim","line":93,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_toLeftMovesNim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_toLeftMovesNim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_toLeftMovesNim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L90-L91","name":"SetTheory.PGame.moveLeft_nim'","line":90,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim'","doc":"**Alias** of `SetTheory.PGame.moveLeft_nim`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_nim'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L86-L88","name":"SetTheory.PGame.moveLeft_nim","line":86,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_nim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L81-L84","name":"SetTheory.PGame.toRightMovesNim_symm_lt","line":81,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_symm_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim_symm_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toRightMovesNim_symm_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\">toRightMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L76-L79","name":"SetTheory.PGame.toLeftMovesNim_symm_lt","line":76,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_symm_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim_symm_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toLeftMovesNim_symm_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\">toLeftMovesNim</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L72-L74","name":"SetTheory.PGame.toRightMovesNim","line":72,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim","doc":"Turns an ordinal less than `o` into a right move for `nim o` and vice versa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toRightMovesNim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toRightMovesNim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L68-L70","name":"SetTheory.PGame.toLeftMovesNim","line":68,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim","doc":"Turns an ordinal less than `o` into a left move for `nim o` and vice versa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.toLeftMovesNim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toLeftMovesNim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L65-L66","name":"SetTheory.PGame.moveRight_nim_hEq","line":65,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim_hEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveRight_nim_hEq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_nim_hEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.enumIsoToType\">enumIsoToType</a></span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L62-L63","name":"SetTheory.PGame.moveLeft_nim_hEq","line":62,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim_hEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.moveLeft_nim_hEq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_nim_hEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.enumIsoToType\">enumIsoToType</a></span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L60-L60","name":"SetTheory.PGame.rightMoves_nim","line":60,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMoves_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.rightMoves_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">rightMoves_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L59-L59","name":"SetTheory.PGame.leftMoves_nim","line":59,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMoves_nim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.leftMoves_nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leftMoves_nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L52-L57","name":"SetTheory.PGame.nim_def","line":52,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.enumIsoToType\">enumIsoToType</a></span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <span class=\"fn\">x</span>)</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\">nim</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.enumIsoToType\">enumIsoToType</a></span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <span class=\"fn\">x</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Nim.lean#L43-L50","name":"SetTheory.PGame.nim","line":43,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim","doc":"The definition of single-heap nim, which can be viewed as a pile of stones where each player can\ntake a positive number of stones from it on their turn. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Nim.html#SetTheory.PGame.nim\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">nim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></div></div>"}]}