{"name":"Mathlib.SetTheory.Game.Short","instances":[{"typeNames":["SetTheory.PGame.Short"],"name":"SetTheory.PGame.subsingleton_short","className":"Subsingleton"},{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.fintypeLeftMoves","className":"Fintype"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.fintypeRightMoves","className":"Fintype"},{"typeNames":["SetTheory.PGame.moveLeft"],"name":"SetTheory.PGame.moveLeftShort","className":"SetTheory.PGame.Short"},{"typeNames":["SetTheory.PGame.moveRight"],"name":"SetTheory.PGame.moveRightShort","className":"SetTheory.PGame.Short"},{"typeNames":["OfNat.ofNat"],"name":"SetTheory.PGame.short0","className":"SetTheory.PGame.Short"},{"typeNames":["OfNat.ofNat"],"name":"SetTheory.PGame.short1","className":"SetTheory.PGame.Short"},{"typeNames":["List.cons"],"name":"SetTheory.PGame.ListShort.cons","className":"SetTheory.PGame.ListShort"},{"typeNames":["GetElem.getElem"],"name":"SetTheory.PGame.listShortGet","className":"SetTheory.PGame.Short"},{"typeNames":["SetTheory.PGame.ofLists"],"name":"SetTheory.PGame.shortOfLists","className":"SetTheory.PGame.Short"},{"typeNames":["Neg.neg"],"name":"SetTheory.PGame.shortNeg","className":"SetTheory.PGame.Short"},{"typeNames":["HAdd.hAdd"],"name":"SetTheory.PGame.shortAdd","className":"SetTheory.PGame.Short"},{"typeNames":["Nat.cast"],"name":"SetTheory.PGame.shortNat","className":"SetTheory.PGame.Short"},{"typeNames":[],"name":"SetTheory.PGame.shortOfNat","className":"SetTheory.PGame.Short"},{"typeNames":["HAdd.hAdd"],"name":"SetTheory.PGame.shortBit0","className":"SetTheory.PGame.Short"},{"typeNames":["HAdd.hAdd"],"name":"SetTheory.PGame.shortBit1","className":"SetTheory.PGame.Short"},{"typeNames":["LE.le"],"name":"SetTheory.PGame.leDecidable","className":"Decidable"},{"typeNames":["SetTheory.PGame.LF"],"name":"SetTheory.PGame.lfDecidable","className":"Decidable"},{"typeNames":["LT.lt"],"name":"SetTheory.PGame.ltDecidable","className":"Decidable"},{"typeNames":["HasEquiv.Equiv"],"name":"SetTheory.PGame.equivDecidable","className":"Decidable"}],"imports":["Init","Mathlib.Data.Fintype.Basic","Mathlib.SetTheory.Cardinal.Regular","Mathlib.SetTheory.Game.Birthday"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L256-L257","name":"SetTheory.PGame.equivDecidable","line":256,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.equivDecidable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.equivDecidable\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">equivDecidable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L253-L254","name":"SetTheory.PGame.ltDecidable","line":253,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ltDecidable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ltDecidable\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ltDecidable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L250-L251","name":"SetTheory.PGame.lfDecidable","line":250,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.lfDecidable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.lfDecidable\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lfDecidable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L247-L248","name":"SetTheory.PGame.leDecidable","line":247,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.leDecidable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.leDecidable\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leDecidable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L218-L245","name":"SetTheory.PGame.leLFDecidable","line":218,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.leLFDecidable","doc":"Auxiliary construction of decidability instances.\nWe build `Decidable (x ≤ y)` and `Decidable (x ⧏ y)` in a simultaneous induction.\nInstances for the two projections separately are provided below.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.leLFDecidable\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leLFDecidable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L216-L216","name":"SetTheory.PGame.shortBit1","line":216,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortBit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortBit1\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortBit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L214-L214","name":"SetTheory.PGame.shortBit0","line":214,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortBit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortBit0\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortBit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L212-L212","name":"SetTheory.PGame.shortOfNat","line":212,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortOfNat\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortOfNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L208-L210","name":"SetTheory.PGame.shortNat","line":208,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortNat\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L199-L206","name":"SetTheory.PGame.shortAdd","line":199,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortAdd\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortAdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>).<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L195-L197","name":"SetTheory.PGame.shortNeg","line":195,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortNeg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortNeg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L185-L193","name":"SetTheory.PGame.shortOfRelabelling","line":185,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortOfRelabelling","doc":"If `x` is a short game, and `y` is a relabelling of `x`, then `y` is also short. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortOfRelabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortOfRelabelling</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L181-L183","name":"SetTheory.PGame.shortOfLists","line":181,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortOfLists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.shortOfLists\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">shortOfLists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L175-L179","name":"SetTheory.PGame.listShortGet","line":175,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.listShortGet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.listShortGet\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">listShortGet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">L</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L170-L173","name":"SetTheory.PGame.ListShort.cons","line":170,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort.cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort.cons\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ListShort</span>.<span class=\"name\">cons</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">short_hd</span> : <span class=\"fn\"><span class=\"fn\">hd</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tl</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">short_tl</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> <span class=\"fn\">tl</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> (<span class=\"fn\">hd</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">tl</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L166-L166","name":"SetTheory.PGame.ListShort.cons'","line":166,"kind":"ctor","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort.cons'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort.cons'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ListShort</span>.<span class=\"name\">cons'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hd</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">tl</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hd</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> <span class=\"fn\">tl</span></span> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> (<span class=\"fn\">hd</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">tl</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L162-L162","name":"SetTheory.PGame.ListShort.nil","line":162,"kind":"ctor","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort.nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort.nil\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ListShort</span>.<span class=\"name\">nil</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\">ListShort</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L160-L166","name":"SetTheory.PGame.ListShort","line":160,"kind":"class","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort","doc":"Evidence that every `PGame` in a list is `Short`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.ListShort\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ListShort</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span> → <a href=\"./foundational_types.html\">Type</a> (u + 1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L157-L158","name":"SetTheory.PGame.short1","line":157,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.short1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.short1\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">short1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L154-L155","name":"SetTheory.PGame.short0","line":154,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.short0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.short0\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">short0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L148-L152","name":"SetTheory.PGame.Short.ofIsEmpty","line":148,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short.ofIsEmpty","doc":"This leads to infinite loops if made into an instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short.ofIsEmpty\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Short</span>.<span class=\"name\">ofIsEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">l</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">r</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">PGame.mk</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L131-L146","name":"SetTheory.PGame.short_birthday","line":131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.short_birthday","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.short_birthday\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">short_birthday</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Birthday.html#SetTheory.PGame.birthday\">birthday</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L122-L127","name":"SetTheory.PGame.moveRightShort'","line":122,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveRightShort'","doc":"Extracting the `Short` instance for a move by Right.\nThis would be a dangerous instance potentially introducing new metavariables\nin typeclass search, so we only make it an instance locally.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveRightShort'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRightShort'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">xr</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L119-L120","name":"SetTheory.PGame.moveRightShort","line":119,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveRightShort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveRightShort\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRightShort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L110-L115","name":"SetTheory.PGame.moveLeftShort'","line":110,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveLeftShort'","doc":"Extracting the `Short` instance for a move by Left.\nThis would be a dangerous instance potentially introducing new metavariables\nin typeclass search, so we only make it an instance locally.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveLeftShort'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeftShort'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">xl</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L107-L108","name":"SetTheory.PGame.moveLeftShort","line":107,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveLeftShort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.moveLeftShort\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeftShort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L104-L105","name":"SetTheory.PGame.fintypeRightMoves","line":104,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeRightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeRightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">fintypeRightMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L96-L100","name":"SetTheory.PGame.fintypeRight","line":96,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeRight","doc":"Extracting the `Fintype` instance for the indexing type for Right's moves in a short game.\nThis is an unindexed typeclass, so it can't be made a global instance.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">fintypeRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L93-L94","name":"SetTheory.PGame.fintypeLeftMoves","line":93,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeLeftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">fintypeLeftMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L85-L89","name":"SetTheory.PGame.fintypeLeft","line":85,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeLeft","doc":"Extracting the `Fintype` instance for the indexing type for Left's moves in a short game.\nThis is an unindexed typeclass, so it can't be made a global instance.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.fintypeLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">fintypeLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L74-L81","name":"SetTheory.PGame.Short.mk'","line":74,"kind":"def","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short.mk'","doc":"A synonym for `Short.mk` that specifies the pgame in an implicit argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short.mk'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Short</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sL</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sR</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L51-L72","name":"SetTheory.PGame.subsingleton_short_example","line":51,"kind":"theorem","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.subsingleton_short_example","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.subsingleton_short_example\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">subsingleton_short_example</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L40-L46","name":"SetTheory.PGame.subsingleton_short","line":40,"kind":"instance","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.subsingleton_short","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.subsingleton_short\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">subsingleton_short</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L36-L38","name":"SetTheory.PGame.Short.mk","line":36,"kind":"ctor","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Short</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>)</span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">β</span>) → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span>)</span> → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">β</span></span>] → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">PGame.mk</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\">Short</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Game/Short.lean#L34-L38","name":"SetTheory.PGame.Short","line":34,"kind":"class","docLink":"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short","doc":"A short game is a game with a finite set of moves at every turn. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Game/Short.html#SetTheory.PGame.Short\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Short</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Type</a> (u + 1)</span></div></div>"}]}