{"name":"Mathlib.CategoryTheory.Triangulated.Opposite.Triangle","instances":[],"imports":["Init","Mathlib.CategoryTheory.Triangulated.Basic","Mathlib.CategoryTheory.Triangulated.Opposite.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L102-L102","name":"CategoryTheory.Pretriangulated.triangleOpEquivalence_inverse","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">triangleOpEquivalence_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence\">triangleOpEquivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse\">TriangleOpEquivalence.inverse</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L102-L102","name":"CategoryTheory.Pretriangulated.triangleOpEquivalence_unitIso","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">triangleOpEquivalence_unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence\">triangleOpEquivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso\">TriangleOpEquivalence.unitIso</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L102-L102","name":"CategoryTheory.Pretriangulated.triangleOpEquivalence_counitIso","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">triangleOpEquivalence_counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence\">triangleOpEquivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">TriangleOpEquivalence.counitIso</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L102-L102","name":"CategoryTheory.Pretriangulated.triangleOpEquivalence_functor","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">triangleOpEquivalence_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence\">triangleOpEquivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">TriangleOpEquivalence.functor</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L99-L108","name":"CategoryTheory.Pretriangulated.triangleOpEquivalence","line":99,"kind":"def","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence","doc":"An anti-equivalence between the categories of triangles in `C` and in `Cᵒᵖ`.\nA triangle in `Cᵒᵖ` shall be distinguished iff it correspond to a distinguished\ntriangle in `C` via this equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.triangleOpEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">triangleOpEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L83-L83","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₂","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso_hom_app_hom₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₂\">hom₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₂\">obj₂</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L83-L83","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₃","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso_hom_app_hom₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₃\">hom₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₃\">obj₃</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L83-L83","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₂","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso_inv_app_hom₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₂\">hom₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₂\">obj₂</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L83-L83","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₃","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso_inv_app_hom₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₃\">hom₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₃\">obj₃</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L83-L83","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₁","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_inv_app_hom₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso_inv_app_hom₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₁\">hom₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L83-L83","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₁","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso_hom_app_hom₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso_hom_app_hom₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₁\">hom₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L81-L95","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso","doc":"The counit isomorphism of the\nequivalence `triangleOpEquivalence C : (Triangle C)ᵒᵖ ≌ Triangle Cᵒᵖ` . "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">functor</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L73-L73","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso_hom_app","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">unitIso_hom_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso\">unitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mk\">Triangle.mk</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₁\">mor₁</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₂\">mor₂</a></span>\n          <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a>\n            <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Basic.html#CategoryTheory.Pretriangulated.opShiftFunctorEquivalence\">opShiftFunctorEquivalence</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₃\">obj₃</a></span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span>\n              <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₃\">mor₃</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>\n                <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Basic.html#CategoryTheory.Pretriangulated.opShiftFunctorEquivalence\">opShiftFunctorEquivalence</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>)</span>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.homMk\">homMk</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₂\">obj₂</a></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₃\">obj₃</a></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L73-L73","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso_inv_app","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">unitIso_inv_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso\">unitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.homMk\">homMk</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mk\">Triangle.mk</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₁\">mor₁</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₂\">mor₂</a></span>\n        <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Basic.html#CategoryTheory.Pretriangulated.opShiftFunctorEquivalence\">opShiftFunctorEquivalence</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₃\">obj₃</a></span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>\n          <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span>\n            <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₃\">mor₃</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Basic.html#CategoryTheory.Pretriangulated.opShiftFunctorEquivalence\">opShiftFunctorEquivalence</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>)</span>)</span>)</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₂\">obj₂</a></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₃\">obj₃</a></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L71-L79","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso","line":71,"kind":"def","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso","doc":"The unit isomorphism of the\nequivalence `triangleOpEquivalence C : (Triangle C)ᵒᵖ ≌ Triangle Cᵒᵖ` . "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">functor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse\">inverse</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L55-L55","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse_map","line":55,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">inverse_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">Quiver.Hom.op</a> <span class=\"fn\">{ <span class=\"fn\">hom₁</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₃\">hom₃</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>, <span class=\"fn\">hom₂</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₂\">hom₂</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>, <span class=\"fn\">hom₃</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₁\">hom₁</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>, <span class=\"fn\">comm₁</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">comm₂</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">comm₃</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L55-L55","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse_obj","line":55,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">inverse_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mk\">Triangle.mk</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₂\">mor₂</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₁\">mor₁</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Basic.html#CategoryTheory.Pretriangulated.opShiftFunctorEquivalence\">opShiftFunctorEquivalence</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₃\">mor₃</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L53-L69","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse","line":53,"kind":"def","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse","doc":"The functor which sends a triangle `X ⟶ Y ⟶ Z ⟶ X⟦1⟧` in `Cᵒᵖ` to the triangle\n`Z.unop ⟶ Y.unop ⟶ X.unop ⟶ Z.unop⟦1⟧` in `C` (without introducing signs). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L36-L36","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₁","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">functor_map_hom₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">functor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₁\">hom₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₃\">hom₃</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L36-L36","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_obj","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">functor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">functor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mk\">Triangle.mk</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₂\">mor₂</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₁\">mor₁</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Basic.html#CategoryTheory.Pretriangulated.opShiftFunctorEquivalence\">opShiftFunctorEquivalence</a> <span class=\"fn\">C</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.obj₁\">obj₁</a></span>)</span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle.mor₃\">mor₃</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L36-L36","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₃","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">functor_map_hom₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">functor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₃\">hom₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₁\">hom₁</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L36-L36","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₂","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor_map_hom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">functor_map_hom₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T₁ </span><span class=\"fn\">T₂</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">T₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\">functor</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₂\">hom₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.TriangleMorphism.hom₂\">hom₂</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.lean#L34-L51","name":"CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor","doc":"The functor which sends a triangle `X ⟶ Y ⟶ Z ⟶ X⟦1⟧` in `C` to the triangle\n`op Z ⟶ op Y ⟶ op X ⟶ (op Z)⟦1⟧` in `Cᵒᵖ` (without introducing signs). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Triangulated/Opposite/Triangle.html#CategoryTheory.Pretriangulated.TriangleOpEquivalence.functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Pretriangulated</span>.<span class=\"name\">TriangleOpEquivalence</span>.<span class=\"name\">functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.HasShift\">HasShift</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Triangulated/Basic.html#CategoryTheory.Pretriangulated.Triangle\">Triangle</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span></div></div>"}]}