{"name":"Aesop.Index.Forward","instances":[{"typeNames":["Aesop.ForwardIndex"],"name":"Aesop.instInhabitedForwardIndex","className":"Inhabited"},{"typeNames":["Aesop.ForwardIndex"],"name":"Aesop.ForwardIndex.instEmptyCollection","className":"EmptyCollection"}],"imports":["Init","Aesop.Forward.Match.Types","Aesop.Rule.Forward","Aesop.Index.Basic","Batteries.Lean.Meta.DiscrTree"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L81-L86","name":"Aesop.ForwardIndex.getConstRuleMatches","line":81,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.getConstRuleMatches","doc":"Get forward rule matches for the constant forward rules (i.e., those with no\npremises and no rule pattern). Accordingly, the returned matches contain no\nhypotheses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.getConstRuleMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">getConstRuleMatches</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L77-L79","name":"Aesop.ForwardIndex.getRuleWithName?","line":77,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.getRuleWithName?","doc":"Get the forward rule with the given rule name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.getRuleWithName?\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">getRuleWithName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L70-L75","name":"Aesop.ForwardIndex.get","line":70,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.get","doc":"Get the forward rules whose maximal premises likely unify with `e`.\nEach returned pair `(r, i)` contains a rule `r` and the index `i` of the premise\nof `r` that likely unifies with `e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.get\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L52-L68","name":"Aesop.ForwardIndex.insert","line":52,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.insert","doc":"Insert a forward rule into the `ForwardIndex`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.insert\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L46-L50","name":"Aesop.ForwardIndex.merge","line":46,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.merge","doc":"Merge two indices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.merge\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx₁ </span><span class=\"fn\">idx₂</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L36-L44","name":"Aesop.ForwardIndex.trace","line":36,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.trace","doc":"Trace the rules contained in `idx` if `traceOpt` is enabled. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.trace\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceOpt</span> : <a href=\"./Aesop/Tracing.html#Aesop.TraceOption\">TraceOption</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L33-L34","name":"Aesop.ForwardIndex.instEmptyCollection","line":33,"kind":"instance","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L29-L29","name":"Aesop.instInhabitedForwardIndex","line":29,"kind":"instance","docLink":"./Aesop/Index/Forward.html#Aesop.instInhabitedForwardIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.instInhabitedForwardIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedForwardIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L28-L28","name":"Aesop.ForwardIndex.constRules","line":28,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.constRules","doc":"Constant forward rules, i.e. forward rules that have no premises and no\nrule pattern. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.constRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">constRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L25-L25","name":"Aesop.ForwardIndex.nameToRule","line":25,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.nameToRule","doc":"Indexes the forward rules contained in `tree` by name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.nameToRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">nameToRule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L23-L23","name":"Aesop.ForwardIndex.tree","line":23,"kind":"def","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.tree","doc":"Maps expressions `T` to all tuples `(r, i)` where `r : ForwardRule`,\n`i : PremiseIndex` and the `i`-th argument of the type of `r.expr` (counting\nfrom zero) likely unifies with `T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.tree\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">tree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> (<a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L19-L19","name":"Aesop.ForwardIndex.mk","line":19,"kind":"ctor","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> (<a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nameToRule</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constRules</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\">ForwardIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/Forward.lean#L18-L29","name":"Aesop.ForwardIndex","line":18,"kind":"structure","docLink":"./Aesop/Index/Forward.html#Aesop.ForwardIndex","doc":"Index for forward rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/Forward.html#Aesop.ForwardIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}