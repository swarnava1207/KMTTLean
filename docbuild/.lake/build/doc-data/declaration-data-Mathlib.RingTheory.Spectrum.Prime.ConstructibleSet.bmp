{"name":"Mathlib.RingTheory.Spectrum.Prime.ConstructibleSet","instances":[{"typeNames":["Eq"],"name":"PrimeSpectrum.BasicConstructibleSetData.instDecidableEq","className":"Decidable"}],"imports":["Init","Mathlib.Order.SuccPred.WithBot","Mathlib.RingTheory.Spectrum.Prime.Topology"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L163-L168","name":"PrimeSpectrum.isOpen_of_stableUnderGeneralization_of_isConstructible","line":163,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.isOpen_of_stableUnderGeneralization_of_isConstructible","doc":"[Stacks Tag 00I0](https://stacks.math.columbia.edu/tag/00I0) ((1))"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.isOpen_of_stableUnderGeneralization_of_isConstructible\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">isOpen_of_stableUnderGeneralization_of_isConstructible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Inseparable.html#StableUnderGeneralization\">StableUnderGeneralization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Constructible.html#Topology.IsConstructible\">Topology.IsConstructible</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L156-L161","name":"PrimeSpectrum.isClosed_of_stableUnderSpecialization_of_isConstructible","line":156,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.isClosed_of_stableUnderSpecialization_of_isConstructible","doc":"[Stacks Tag 00I0](https://stacks.math.columbia.edu/tag/00I0) ((1))"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.isClosed_of_stableUnderSpecialization_of_isConstructible\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">isClosed_of_stableUnderSpecialization_of_isConstructible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Inseparable.html#StableUnderSpecialization\">StableUnderSpecialization</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Constructible.html#Topology.IsConstructible\">Topology.IsConstructible</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L136-L154","name":"PrimeSpectrum.exists_range_eq_of_isConstructible","line":136,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.exists_range_eq_of_isConstructible","doc":"[Stacks Tag 00F8](https://stacks.math.columbia.edu/tag/00F8) (without the finite presentation part)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.exists_range_eq_of_isConstructible\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">exists_range_eq_of_isConstructible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Constructible.html#Topology.IsConstructible\">Topology.IsConstructible</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Topology.html#PrimeSpectrum.comap\">comap</a> <span class=\"fn\">f</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L114-L133","name":"PrimeSpectrum.exists_constructibleSetData_iff","line":114,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.exists_constructibleSetData_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.exists_constructibleSetData_iff\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">exists_constructibleSetData_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet\">toSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Constructible.html#Topology.IsConstructible\">Topology.IsConstructible</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L102-L110","name":"PrimeSpectrum.ConstructibleSetData.isConstructible_toSet","line":102,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.isConstructible_toSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.isConstructible_toSet\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">isConstructible_toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Constructible.html#Topology.IsConstructible\">Topology.IsConstructible</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet\">toSet</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L99-L100","name":"PrimeSpectrum.ConstructibleSetData.degBound","line":99,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.degBound","doc":"The degree bound on a constructible set for Chevalley's theorem for the inclusion `R ↪ R[X]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.degBound\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">degBound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L92-L97","name":"PrimeSpectrum.ConstructibleSetData.toSet_map","line":92,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet_map\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">toSet_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet\">toSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Topology.html#PrimeSpectrum.comap\">comap</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet\">toSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L88-L90","name":"PrimeSpectrum.ConstructibleSetData.toSet","line":88,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet","doc":"Given the data of a constructible set `s`, namely finitely many tuples `(f, g₁, ..., gₙ)` such\nthat `s = ⋃ (f, g₁, ..., gₙ), V(g₁, ..., gₙ) \\ V(f)`, return `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.toSet\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L84-L86","name":"PrimeSpectrum.ConstructibleSetData.map_comp","line":84,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map_comp\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L81-L82","name":"PrimeSpectrum.ConstructibleSetData.map_id","line":81,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map_id\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.id\">RingHom.id</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L76-L79","name":"PrimeSpectrum.ConstructibleSetData.map","line":76,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map","doc":"Given the data of the constructible set `s`, build the data of the constructible set\n`{I | {x | f x ∈ I} ∈ s}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData.map\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\">ConstructibleSetData</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L68-L72","name":"PrimeSpectrum.ConstructibleSetData","line":68,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData","doc":"The data of a constructible set `s` in the prime spectrum of a ring is finitely many tuples\n`(f, g₁, ..., gₙ)` such that `s = ⋃ (f, g₁, ..., gₙ), V(g₁, ..., gₙ) \\ V(f)`.\n\nTo obtain `s` from its data, use `PrimeSpectrum.ConstructibleSetData.toSet`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.ConstructibleSetData\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">ConstructibleSetData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L61-L63","name":"PrimeSpectrum.BasicConstructibleSetData.toSet_map","line":61,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.toSet_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.toSet_map\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">toSet_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.toSet\">toSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Topology.html#PrimeSpectrum.comap\">comap</a> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.toSet\">toSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L56-L59","name":"PrimeSpectrum.BasicConstructibleSetData.toSet","line":56,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.toSet","doc":"Given the data of a basic constructible set `s`, namely a tuple `(f, g₁, ..., gₙ)` such that\n`s = V(g₁, ..., gₙ) \\ V(f)`, return `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.toSet\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Defs.html#PrimeSpectrum\">PrimeSpectrum</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L53-L54","name":"PrimeSpectrum.BasicConstructibleSetData.map_comp'","line":53,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_comp'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_comp'\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_comp'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">ψ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">ψ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L50-L51","name":"PrimeSpectrum.BasicConstructibleSetData.map_comp","line":50,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_comp\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">ψ</span>)</span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">ψ</span> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L48-L48","name":"PrimeSpectrum.BasicConstructibleSetData.map_id'","line":48,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_id'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_id'\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_id'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.id\">RingHom.id</a> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L46-L46","name":"PrimeSpectrum.BasicConstructibleSetData.map_id","line":46,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_id\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.id\">RingHom.id</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L39-L39","name":"PrimeSpectrum.BasicConstructibleSetData.map_f","line":39,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_f\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\">f</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L39-L39","name":"PrimeSpectrum.BasicConstructibleSetData.map_g","line":39,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_g","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_g\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_g</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\">g</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\">g</a></span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L39-L39","name":"PrimeSpectrum.BasicConstructibleSetData.map_n","line":39,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_n","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map_n\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L37-L44","name":"PrimeSpectrum.BasicConstructibleSetData.map","line":37,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map","doc":"Given the data of the constructible set `s`, build the data of the constructible set\n`{I | {x | φ x ∈ I} ∈ s}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.map\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L35-L35","name":"PrimeSpectrum.BasicConstructibleSetData.instDecidableEq","line":35,"kind":"instance","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.instDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.instDecidableEq\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">instDecidableEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L31-L31","name":"PrimeSpectrum.BasicConstructibleSetData.g","line":31,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g","doc":"Given the data of a basic constructible set `s = V(g₁, ..., gₙ) \\ V(f)`, return `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">g</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span></span> → <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L29-L29","name":"PrimeSpectrum.BasicConstructibleSetData.n","line":29,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n","doc":"Given the data of a basic constructible set `s = V(g₁, ..., gₙ) \\ V(f)`, return `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L27-L27","name":"PrimeSpectrum.BasicConstructibleSetData.f","line":27,"kind":"def","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f","doc":"Given the data of a basic constructible set `s = V(g₁, ..., gₙ) \\ V(f)`, return `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L25-L25","name":"PrimeSpectrum.BasicConstructibleSetData.mk","line":25,"kind":"ctor","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.mk\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L24-L24","name":"PrimeSpectrum.BasicConstructibleSetData.ext_iff","line":24,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.ext_iff\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\">f</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\">g</a></span> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\">g</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L24-L24","name":"PrimeSpectrum.BasicConstructibleSetData.ext","line":24,"kind":"theorem","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.ext\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\">BasicConstructibleSetData</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.f\">f</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.n\">n</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\">g</a></span> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData.g\">g</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.lean#L23-L31","name":"PrimeSpectrum.BasicConstructibleSetData","line":23,"kind":"structure","docLink":"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData","doc":"The data of a basic constructible set `s` is a tuple `(f, g₁, ..., gₙ)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Spectrum/Prime/ConstructibleSet.html#PrimeSpectrum.BasicConstructibleSetData\"><span class=\"name\">PrimeSpectrum</span>.<span class=\"name\">BasicConstructibleSetData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}