{"name":"Mathlib.Topology.Metrizable.CompletelyMetrizable","instances":[{"typeNames":[],"name":"MetricSpace.toIsCompletelyMetrizableSpace","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":[],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.of_completeSpace_metrizable","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":[],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.MetrizableSpace","className":"TopologicalSpace.MetrizableSpace"},{"typeNames":[],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.pi_countable","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":["Sigma"],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.sigma","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":["Prod"],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.prod","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":["Sum"],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.sum","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":[],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.discrete","className":"TopologicalSpace.IsCompletelyMetrizableSpace"},{"typeNames":["Set.Elem"],"name":"TopologicalSpace.IsCompletelyMetrizableSpace.univ","className":"TopologicalSpace.IsCompletelyMetrizableSpace"}],"imports":["Init","Mathlib.Topology.MetricSpace.Gluing","Mathlib.Topology.Metrizable.Uniformity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L170-L172","name":"TopologicalSpace.IsCompletelyMetrizableSpace.univ","line":170,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.univ\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L164-L168","name":"IsClosed.isCompletelyMetrizableSpace","line":164,"kind":"theorem","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#IsClosed.isCompletelyMetrizableSpace","doc":"A closed subset of a completely metrizable space is also completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#IsClosed.isCompletelyMetrizableSpace\"><span class=\"name\">IsClosed</span>.<span class=\"name\">isCompletelyMetrizableSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">TopologicalSpace.IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">TopologicalSpace.IsCompletelyMetrizableSpace</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L130-L162","name":"TopologicalSpace.IsCompletelyMetrizableSpace.discrete","line":130,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.discrete","doc":"Any discrete space is completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.discrete\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">discrete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L118-L128","name":"Topology.IsClosedEmbedding.IsCompletelyMetrizableSpace","line":118,"kind":"theorem","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#Topology.IsClosedEmbedding.IsCompletelyMetrizableSpace","doc":"Given a closed embedding into a completely metrizable space,\nthe source space is also completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#Topology.IsClosedEmbedding.IsCompletelyMetrizableSpace\"><span class=\"name\">Topology</span>.<span class=\"name\">IsClosedEmbedding</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">TopologicalSpace.IsCompletelyMetrizableSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsClosedEmbedding\">IsClosedEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">TopologicalSpace.IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L111-L116","name":"TopologicalSpace.IsCompletelyMetrizableSpace.sum","line":111,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.sum","doc":"The disjoint union of two completely metrizable spaces is completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.sum\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">Y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L104-L109","name":"TopologicalSpace.IsCompletelyMetrizableSpace.prod","line":104,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.prod","doc":"The product of two completely metrizable spaces is completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.prod\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> (<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L96-L102","name":"TopologicalSpace.IsCompletelyMetrizableSpace.sigma","line":96,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.sigma","doc":"A disjoint union of completely metrizable spaces is completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.sigma\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">sigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">n</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">n</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">((<span class=\"fn\">n</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L90-L94","name":"TopologicalSpace.IsCompletelyMetrizableSpace.pi_countable","line":90,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.pi_countable","doc":"A countable product of completely metrizable spaces is completely metrizable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.pi_countable\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">pi_countable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L85-L88","name":"TopologicalSpace.IsCompletelyMetrizableSpace.MetrizableSpace","line":85,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.MetrizableSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.MetrizableSpace\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">MetrizableSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/Basic.html#TopologicalSpace.MetrizableSpace\">TopologicalSpace.MetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L75-L81","name":"TopologicalSpace.upgradeIsCompletelyMetrizable","line":75,"kind":"def","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.upgradeIsCompletelyMetrizable","doc":"This definition endows a completely metrizable space with a complete metric. Use it as:\n`letI := upgradeIsCompletelyMetrizable X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.upgradeIsCompletelyMetrizable\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">upgradeIsCompletelyMetrizable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace\">UpgradedIsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L69-L73","name":"TopologicalSpace.complete_completelyMetrizableMetric","line":69,"kind":"theorem","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.complete_completelyMetrizableMetric","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.complete_completelyMetrizableMetric\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">complete_completelyMetrizableMetric</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L63-L67","name":"TopologicalSpace.completelyMetrizableMetric","line":63,"kind":"def","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.completelyMetrizableMetric","doc":"Construct on a completely metrizable space a metric (compatible with the topology)\nwhich is complete. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.completelyMetrizableMetric\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">completelyMetrizableMetric</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L58-L61","name":"TopologicalSpace.IsCompletelyMetrizableSpace.of_completeSpace_metrizable","line":58,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.of_completeSpace_metrizable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.of_completeSpace_metrizable\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">of_completeSpace_metrizable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L55-L55","name":"TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.mk","line":55,"kind":"ctor","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.mk\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">UpgradedIsCompletelyMetrizableSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toMetricSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toCompleteSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace\">UpgradedIsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L55-L55","name":"TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.toCompleteSpace","line":55,"kind":"theorem","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.toCompleteSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.toCompleteSpace\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">UpgradedIsCompletelyMetrizableSpace</span>.<span class=\"name\">toCompleteSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace\">UpgradedIsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L55-L55","name":"TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.toMetricSpace","line":55,"kind":"def","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.toMetricSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace.toMetricSpace\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">UpgradedIsCompletelyMetrizableSpace</span>.<span class=\"name\">toMetricSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace\">UpgradedIsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L51-L55","name":"TopologicalSpace.UpgradedIsCompletelyMetrizableSpace","line":51,"kind":"class","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace","doc":"A convenience class, for a completely metrizable space endowed with a complete metric.\nNo instance of this class should be registered: It should be used as\n`letI := upgradeIsCompletelyMetrizable X` to endow a completely metrizable\nspace with a complete metric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.UpgradedIsCompletelyMetrizableSpace\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">UpgradedIsCompletelyMetrizableSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_3</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L47-L49","name":"MetricSpace.toIsCompletelyMetrizableSpace","line":47,"kind":"instance","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#MetricSpace.toIsCompletelyMetrizableSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#MetricSpace.toIsCompletelyMetrizableSpace\"><span class=\"name\">MetricSpace</span>.<span class=\"name\">toIsCompletelyMetrizableSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">TopologicalSpace.IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L44-L44","name":"TopologicalSpace.IsCompletelyMetrizableSpace.complete","line":44,"kind":"theorem","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.complete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.complete\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span>), <a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace.toTopologicalSpace\">UniformSpace.toTopologicalSpace</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L43-L43","name":"TopologicalSpace.IsCompletelyMetrizableSpace.mk","line":43,"kind":"ctor","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace.mk\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">complete</span> : <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">X</span></span>), <a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace.toTopologicalSpace\">UniformSpace.toTopologicalSpace</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\">IsCompletelyMetrizableSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Metrizable/CompletelyMetrizable.lean#L39-L45","name":"TopologicalSpace.IsCompletelyMetrizableSpace","line":39,"kind":"class","docLink":"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace","doc":"A topological space is completely metrizable if there exists a metric space structure\ncompatible with the topology which makes the space complete.\nTo endow such a space with a compatible distance, use\n`letI := upgradeIsCompletelyMetrizable X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Metrizable/CompletelyMetrizable.html#TopologicalSpace.IsCompletelyMetrizableSpace\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">IsCompletelyMetrizableSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}