{"name":"Mathlib.NumberTheory.MulChar.Duality","instances":[{"typeNames":["MulChar"],"name":"MulChar.finite","className":"Finite"}],"imports":["Init","Mathlib.GroupTheory.FiniteAbelian.Duality","Mathlib.NumberTheory.MulChar.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/MulChar/Duality.lean#L69-L73","name":"MulChar.card_eq_card_units_of_hasEnoughRootsOfUnity","line":69,"kind":"theorem","docLink":"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.card_eq_card_units_of_hasEnoughRootsOfUnity","doc":"The cardinality of the group of `R`-valued multiplicative characters on a finite commutative\nmonoid `M` is the same as that of its unit group `Mˣ` when `R` is a ring that has enough roots\nof unity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.card_eq_card_units_of_hasEnoughRootsOfUnity\"><span class=\"name\">MulChar</span>.<span class=\"name\">card_eq_card_units_of_hasEnoughRootsOfUnity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/MulChar/Basic.html#MulChar\">MulChar</a> <span class=\"fn\">M</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/MulChar/Duality.lean#L62-L67","name":"MulChar.mulEquiv_units","line":62,"kind":"theorem","docLink":"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.mulEquiv_units","doc":"The group of `R`-valued multiplicative characters on a finite commutative monoid `M` is\n(noncanonically) isomorphic to its unit group `Mˣ` when `R` is a ring that has enough roots\nof unity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.mulEquiv_units\"><span class=\"name\">MulChar</span>.<span class=\"name\">mulEquiv_units</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/MulChar/Basic.html#MulChar\">MulChar</a> <span class=\"fn\">M</span> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/MulChar/Duality.lean#L50-L60","name":"MulChar.exists_apply_ne_one_of_hasEnoughRootsOfUnity","line":50,"kind":"theorem","docLink":"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.exists_apply_ne_one_of_hasEnoughRootsOfUnity","doc":"If `M` is a finite commutative monoid and `R` is a ring that has enough roots of unity,\nthen for each `a ≠ 1` in `M`, there exists a multiplicative character `χ : M → R` such that\n`χ a ≠ 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.exists_apply_ne_one_of_hasEnoughRootsOfUnity\"><span class=\"name\">MulChar</span>.<span class=\"name\">exists_apply_ne_one_of_hasEnoughRootsOfUnity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/MulChar/Basic.html#MulChar\">MulChar</a> <span class=\"fn\">M</span> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/MulChar/Duality.lean#L39-L45","name":"MulChar.exists_apply_ne_one_iff_exists_monoidHom","line":39,"kind":"theorem","docLink":"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.exists_apply_ne_one_iff_exists_monoidHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.exists_apply_ne_one_iff_exists_monoidHom\"><span class=\"name\">MulChar</span>.<span class=\"name\">exists_apply_ne_one_iff_exists_monoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/MulChar/Basic.html#MulChar\">MulChar</a> <span class=\"fn\">M</span> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/MulChar/Duality.lean#L26-L37","name":"MulChar.finite","line":26,"kind":"instance","docLink":"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/MulChar/Duality.html#MulChar.finite\"><span class=\"name\">MulChar</span>.<span class=\"name\">finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/MulChar/Basic.html#MulChar\">MulChar</a> <span class=\"fn\">M</span> <span class=\"fn\">R</span>)</span></span></div></div>"}]}