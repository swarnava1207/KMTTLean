{"name":"Lean.Elab.PreDefinition.WF.Unfold","instances":[],"imports":["Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.Eqns"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/PreDefinition/WF/Unfold.lean#L77-L101","name":"Lean.Elab.WF.mkUnfoldEq","line":77,"kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Unfold.html#Lean.Elab.WF.mkUnfoldEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/WF/Unfold.html#Lean.Elab.WF.mkUnfoldEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">WF</span>.<span class=\"name\">mkUnfoldEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDef</span> : <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unaryPreDefName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wfPreprocessProof</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Result\">Meta.Simp.Result</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}