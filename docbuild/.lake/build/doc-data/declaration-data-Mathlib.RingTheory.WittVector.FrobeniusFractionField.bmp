{"name":"Mathlib.RingTheory.WittVector.FrobeniusFractionField","instances":[],"imports":["Init","Mathlib.Data.Nat.Cast.WithTop","Mathlib.FieldTheory.IsAlgClosed.Basic","Mathlib.RingTheory.WittVector.DiscreteValuationRing"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L250-L264","name":"WittVector.exists_frobenius_solution_fractionRing","line":250,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.exists_frobenius_solution_fractionRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.exists_frobenius_solution_fractionRing\"><span class=\"name\">WittVector</span>.<span class=\"name\">exists_frobenius_solution_fractionRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#FractionRing\">FractionRing</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#FractionRing\">FractionRing</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span></span>),\n  <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#IsFractionRing.ringEquivOfRingEquiv\">IsFractionRing.ringEquivOfRingEquiv</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusEquiv\">frobeniusEquiv</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L224-L248","name":"WittVector.exists_frobenius_solution_fractionRing_aux","line":224,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.exists_frobenius_solution_fractionRing_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.exists_frobenius_solution_fractionRing_aux\"><span class=\"name\">WittVector</span>.<span class=\"name\">exists_frobenius_solution_fractionRing_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r' </span><span class=\"fn\">q'</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r'</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q'</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">b</span> := <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation\">frobeniusRotation</a> <span class=\"fn\">p</span> <span class=\"fn\">hr'</span> <span class=\"fn\">hq'</span></span>;\n<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#IsFractionRing.ringEquivOfRingEquiv\">IsFractionRing.ringEquivOfRingEquiv</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobeniusEquiv\">frobeniusEquiv</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#FractionRing\">FractionRing</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>     <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization/Basic.html#Localization.mk\">Localization.mk</a> (<span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r'</span>) <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q'</span>, <span class=\"fn\">hq</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#FractionRing\">FractionRing</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span>)</span>)</span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L203-L220","name":"WittVector.frobenius_frobeniusRotation","line":203,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobenius_frobeniusRotation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobenius_frobeniusRotation\"><span class=\"name\">WittVector</span>.<span class=\"name\">frobenius_frobeniusRotation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Frobenius.html#WittVector.frobenius\">frobenius</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation\">frobeniusRotation</a> <span class=\"fn\">p</span> <span class=\"fn\">ha₁</span> <span class=\"fn\">ha₂</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation\">frobeniusRotation</a> <span class=\"fn\">p</span> <span class=\"fn\">ha₁</span> <span class=\"fn\">ha₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L197-L201","name":"WittVector.frobeniusRotation_nonzero","line":197,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation_nonzero\"><span class=\"name\">WittVector</span>.<span class=\"name\">frobeniusRotation_nonzero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation\">frobeniusRotation</a> <span class=\"fn\">p</span> <span class=\"fn\">ha₁</span> <span class=\"fn\">ha₂</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L191-L195","name":"WittVector.frobeniusRotation","line":191,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation","doc":"For nonzero `a₁` and `a₂`, `frobeniusRotation a₁ a₂` is a Witt vector that satisfies the\nequation `frobenius (frobeniusRotation a₁ a₂) * a₁ = (frobeniusRotation a₁ a₂) * a₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotation\"><span class=\"name\">WittVector</span>.<span class=\"name\">frobeniusRotation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L182-L189","name":"WittVector.frobeniusRotationCoeff","line":182,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotationCoeff","doc":"Recursively defines the sequence of coefficients for `WittVector.frobeniusRotation`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.frobeniusRotationCoeff\"><span class=\"name\">WittVector</span>.<span class=\"name\">frobeniusRotationCoeff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L159-L170","name":"WittVector.RecursionBase.solution_spec'","line":159,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_spec'\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionBase</span>.<span class=\"name\">solution_spec'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution\">solution</a> <span class=\"fn\">p</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution\">solution</a> <span class=\"fn\">p</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L151-L157","name":"WittVector.RecursionBase.solution_nonzero","line":151,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_nonzero\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionBase</span>.<span class=\"name\">solution_nonzero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution\">solution</a> <span class=\"fn\">p</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L148-L149","name":"WittVector.RecursionBase.solution_spec","line":148,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_spec\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionBase</span>.<span class=\"name\">solution_spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution\">solution</a> <span class=\"fn\">p</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L144-L146","name":"WittVector.RecursionBase.solution","line":144,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution","doc":"The base case (0th coefficient) of our solution vector. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionBase</span>.<span class=\"name\">solution</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L141-L142","name":"WittVector.RecursionBase.solution_pow","line":141,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionBase.solution_pow\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionBase</span>.<span class=\"name\">solution_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">k</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L116-L131","name":"WittVector.RecursionMain.succNthVal_spec'","line":116,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal_spec'\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionMain</span>.<span class=\"name\">succNthVal_spec'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal\">succNthVal</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">bs</span> <span class=\"fn\">ha₁</span> <span class=\"fn\">ha₂</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">bs</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/MulCoeff.html#WittVector.nthRemainder\">nthRemainder</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>) =&gt; <span class=\"fn\"><span class=\"fn\">bs</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Truncated.html#WittVector.truncateFun\">truncateFun</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">a₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal\">succNthVal</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">bs</span> <span class=\"fn\">ha₁</span> <span class=\"fn\">ha₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">bs</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/MulCoeff.html#WittVector.nthRemainder\">nthRemainder</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">bs</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/Truncated.html#WittVector.truncateFun\">truncateFun</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L111-L114","name":"WittVector.RecursionMain.succNthVal_spec","line":111,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal_spec\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionMain</span>.<span class=\"name\">succNthVal_spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly\">succNthDefiningPoly</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">bs</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.IsRoot\">IsRoot</a></span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal\">succNthVal</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">bs</span> <span class=\"fn\">ha₁</span> <span class=\"fn\">ha₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L106-L109","name":"WittVector.RecursionMain.succNthVal","line":106,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal","doc":"This is the `n+1`st coefficient of our solution, projected from `root_exists`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthVal\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionMain</span>.<span class=\"name\">succNthVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L100-L104","name":"WittVector.RecursionMain.root_exists","line":100,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.root_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.root_exists\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionMain</span>.<span class=\"name\">root_exists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">b</span> : <span class=\"fn\">k</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly\">succNthDefiningPoly</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">bs</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.IsRoot\">IsRoot</a></span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L76-L92","name":"WittVector.RecursionMain.succNthDefiningPoly_degree","line":76,"kind":"theorem","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly_degree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly_degree\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionMain</span>.<span class=\"name\">succNthDefiningPoly_degree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₁</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a₂</span>.<a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector.coeff\">coeff</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly\">succNthDefiningPoly</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">bs</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.degree\">degree</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean#L67-L74","name":"WittVector.RecursionMain.succNthDefiningPoly","line":67,"kind":"def","docLink":"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly","doc":"The root of this polynomial determines the `n+1`st coefficient of our solution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/WittVector/FrobeniusFractionField.html#WittVector.RecursionMain.succNthDefiningPoly\"><span class=\"name\">WittVector</span>.<span class=\"name\">RecursionMain</span>.<span class=\"name\">succNthDefiningPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/WittVector/Defs.html#WittVector\">WittVector</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">k</span></span></div></div>"}]}