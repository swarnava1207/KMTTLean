{"name":"Mathlib.Order.Category.NonemptyFinLinOrd","instances":[{"typeNames":["NonemptyFinLinOrd","_builtin_typeu"],"name":"NonemptyFinLinOrd.instCoeSortType","className":"CoeSort"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instConcreteCategoryOrderHomCarrier","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["LinOrd.carrier"],"name":"NonemptyFinLinOrd.instBoundedOrderCarrier","className":"BoundedOrder"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instInhabited","className":"Inhabited"},{"typeNames":["NonemptyFinLinOrd","LinOrd"],"name":"NonemptyFinLinOrd.hasForgetToLinOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["NonemptyFinLinOrd","FinPartOrd"],"name":"NonemptyFinLinOrd.hasForgetToFinPartOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instSplitEpiCategory","className":"CategoryTheory.SplitEpiCategory"},{"typeNames":["NonemptyFinLinOrd"],"name":"NonemptyFinLinOrd.instHasStrongEpiMonoFactorisations","className":"CategoryTheory.Limits.HasStrongEpiMonoFactorisations"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.EpiMono","Mathlib.CategoryTheory.Limits.Shapes.Images","Mathlib.CategoryTheory.Limits.Shapes.RegularMono","Mathlib.Data.Fintype.Order","Mathlib.Data.Set.Subsingleton","Mathlib.Order.Category.FinPartOrd","Mathlib.Order.Category.LinOrd"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L226-L227","name":"Fin.hom_succ","line":226,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#Fin.hom_succ","doc":"The generating arrow `i ⟶ i+1` in the category `Fin n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#Fin.hom_succ\"><span class=\"name\">Fin</span>.<span class=\"name\">hom_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L219-L224","name":"nonemptyFinLinOrdDualCompForgetToFinPartOrd","line":219,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrdDualCompForgetToFinPartOrd","doc":"The forgetful functor `NonemptyFinLinOrd ⥤ FinPartOrd` and `OrderDual` commute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrdDualCompForgetToFinPartOrd\"><span class=\"name\">nonemptyFinLinOrdDualCompForgetToFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L214-L217","name":"nonemptyFinLinOrd_dual_comp_forget_to_linOrd","line":214,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrd_dual_comp_forget_to_linOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#nonemptyFinLinOrd_dual_comp_forget_to_linOrd\"><span class=\"name\">nonemptyFinLinOrd_dual_comp_forget_to_linOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">NonemptyFinLinOrd.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.dual\">LinOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L199-L210","name":"NonemptyFinLinOrd.instHasStrongEpiMonoFactorisations","line":199,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instHasStrongEpiMonoFactorisations","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instHasStrongEpiMonoFactorisations\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instHasStrongEpiMonoFactorisations</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.HasStrongEpiMonoFactorisations\">CategoryTheory.Limits.HasStrongEpiMonoFactorisations</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L175-L197","name":"NonemptyFinLinOrd.instSplitEpiCategory","line":175,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instSplitEpiCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instSplitEpiCategory\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instSplitEpiCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.SplitEpiCategory\">CategoryTheory.SplitEpiCategory</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L135-L173","name":"NonemptyFinLinOrd.epi_iff_surjective","line":135,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.epi_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.epi_iff_surjective\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">epi_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L120-L133","name":"NonemptyFinLinOrd.mono_iff_injective","line":120,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.mono_iff_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.mono_iff_injective\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">mono_iff_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L113-L113","name":"NonemptyFinLinOrd.dualEquiv_inverse","line":113,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_inverse\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L113-L113","name":"NonemptyFinLinOrd.dualEquiv_functor","line":113,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv_functor\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L112-L118","name":"NonemptyFinLinOrd.dualEquiv","line":112,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv","doc":"The equivalence between `NonemptyFinLinOrd` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dualEquiv\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L107-L107","name":"NonemptyFinLinOrd.dual_map","line":107,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual_map\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\">dual</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.dual\">OrderHom.dual</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L106-L110","name":"NonemptyFinLinOrd.dual","line":106,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.dual\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L101-L101","name":"NonemptyFinLinOrd.Iso.mk_inv","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_inv\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom\">ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L101-L101","name":"NonemptyFinLinOrd.Iso.mk_hom","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk_hom\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom\">ofHom</a> <span class=\"fn\">↑<span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L99-L104","name":"NonemptyFinLinOrd.Iso.mk","line":99,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk","doc":"Constructs an equivalence between nonempty finite linear orders from an order isomorphism\nbetween them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.Iso.mk\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L95-L97","name":"NonemptyFinLinOrd.hasForgetToFinPartOrd","line":95,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToFinPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToFinPartOrd\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hasForgetToFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L92-L93","name":"NonemptyFinLinOrd.hasForgetToLinOrd","line":92,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToLinOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hasForgetToLinOrd\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hasForgetToLinOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L89-L90","name":"NonemptyFinLinOrd.instInhabited","line":89,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instInhabited\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L85-L87","name":"NonemptyFinLinOrd.ofHom_hom","line":85,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom_hom\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">ofHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L80-L83","name":"NonemptyFinLinOrd.hom_ofHom","line":80,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_ofHom\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L76-L76","name":"NonemptyFinLinOrd.hom_ext_iff","line":76,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_ext_iff\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L76-L78","name":"NonemptyFinLinOrd.hom_ext","line":76,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_ext\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L73-L74","name":"NonemptyFinLinOrd.comp_apply","line":73,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.comp_apply\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L68-L70","name":"NonemptyFinLinOrd.hom_comp","line":68,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_comp\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L65-L66","name":"NonemptyFinLinOrd.id_apply","line":65,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.id_apply\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L61-L62","name":"NonemptyFinLinOrd.hom_id","line":61,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.hom_id\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd.Hom.hom\">LinOrd.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.id\">OrderHom.id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L55-L59","name":"NonemptyFinLinOrd.ofHom","line":55,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom","doc":"Typecheck a `OrderHom` as a morphism in `NonemptyFinLinOrd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.ofHom\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L52-L53","name":"NonemptyFinLinOrd.coe_of","line":52,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.coe_of\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\">of</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L48-L50","name":"NonemptyFinLinOrd.of","line":48,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of","doc":"Construct a bundled `NonemptyFinLinOrd` from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.of\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L45-L46","name":"NonemptyFinLinOrd.instBoundedOrderCarrier","line":45,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instBoundedOrderCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instBoundedOrderCarrier\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instBoundedOrderCarrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L42-L43","name":"NonemptyFinLinOrd.instConcreteCategoryOrderHomCarrier","line":42,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instConcreteCategoryOrderHomCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instConcreteCategoryOrderHomCarrier\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instConcreteCategoryOrderHomCarrier</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L40-L41","name":"NonemptyFinLinOrd.instLargeCategory","line":40,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instLargeCategory\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L37-L38","name":"NonemptyFinLinOrd.instCoeSortType","line":37,"kind":"instance","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.instCoeSortType\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L31-L31","name":"NonemptyFinLinOrd.fintype","line":31,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.fintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.fintype\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">fintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L30-L30","name":"NonemptyFinLinOrd.nonempty","line":30,"kind":"theorem","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.nonempty\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">nonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\">toLinOrd</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L29-L29","name":"NonemptyFinLinOrd.mk","line":29,"kind":"ctor","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.mk\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toLinOrd</span> : <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">nonempty</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">toLinOrd</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">fintype</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">toLinOrd</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L29-L31","name":"NonemptyFinLinOrd.toLinOrd","line":29,"kind":"def","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd.toLinOrd\"><span class=\"name\">NonemptyFinLinOrd</span>.<span class=\"name\">toLinOrd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\">NonemptyFinLinOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/NonemptyFinLinOrd.lean#L28-L31","name":"NonemptyFinLinOrd","line":28,"kind":"structure","docLink":"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd","doc":"The category of nonempty finite linear orders. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/NonemptyFinLinOrd.html#NonemptyFinLinOrd\"><span class=\"name\">NonemptyFinLinOrd</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Order/Category/LinOrd.html#LinOrd\">LinOrd</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}