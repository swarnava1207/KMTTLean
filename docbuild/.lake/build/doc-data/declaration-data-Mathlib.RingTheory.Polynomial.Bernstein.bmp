{"name":"Mathlib.RingTheory.Polynomial.Bernstein","instances":[],"imports":["Init","Mathlib.Algebra.MvPolynomial.PDeriv","Mathlib.Algebra.Polynomial.AlgebraMap","Mathlib.Algebra.Polynomial.Derivative","Mathlib.Algebra.Polynomial.Eval.SMul","Mathlib.Data.Nat.Choose.Sum","Mathlib.LinearAlgebra.LinearIndependent.Lemmas","Mathlib.RingTheory.Polynomial.Pochhammer"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L356-L385","name":"bernsteinPolynomial.variance","line":356,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.variance","doc":"A certain linear combination of the previous three identities,\nwhich we'll want later.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.variance\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">variance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">ν</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, (<span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">ν</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L314-L354","name":"bernsteinPolynomial.sum_mul_smul","line":314,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.sum_mul_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.sum_mul_smul\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">sum_mul_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">ν</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L278-L312","name":"bernsteinPolynomial.sum_smul","line":278,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.sum_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.sum_smul\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">sum_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">ν</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">ν</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L267-L272","name":"bernsteinPolynomial.sum","line":267,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.sum\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">sum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">ν</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L256-L265","name":"bernsteinPolynomial.linearIndependent","line":256,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.linearIndependent","doc":"The Bernstein polynomials are linearly independent.\n\nWe prove by induction that the collection of `bernsteinPolynomial n ν` for `ν = 0, ..., k`\nare linearly independent.\nThe inductive step relies on the observation that the `(n-k)`-th derivative, evaluated at 1,\nannihilates `bernsteinPolynomial n ν` for `ν < k`, but has a nonzero value at `ν = k`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.linearIndependent\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">linearIndependent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent/Defs.html#LinearIndependent\">LinearIndependent</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">fun (<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L223-L254","name":"bernsteinPolynomial.linearIndependent_aux","line":223,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.linearIndependent_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.linearIndependent_aux\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">linearIndependent_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/LinearIndependent/Defs.html#LinearIndependent\">LinearIndependent</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">fun (<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L215-L219","name":"bernsteinPolynomial.iterate_derivative_at_1_ne_zero","line":215,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_1_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_1_ne_zero\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_at_1_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L203-L213","name":"bernsteinPolynomial.iterate_derivative_at_1","line":203,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_1\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_at_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> (<span class=\"fn\">↑<span class=\"fn\">ν</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Pochhammer.html#ascPochhammer\">ascPochhammer</a> <span class=\"fn\">R</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L197-L201","name":"bernsteinPolynomial.iterate_derivative_at_1_eq_zero_of_lt","line":197,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_1_eq_zero_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_1_eq_zero_of_lt\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_at_1_eq_zero_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ν </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L180-L189","name":"bernsteinPolynomial.iterate_derivative_at_0_ne_zero","line":180,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_0_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_0_ne_zero\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_at_0_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">ν</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L159-L178","name":"bernsteinPolynomial.iterate_derivative_at_0","line":159,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_0\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_at_0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">ν</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(↑(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)))</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Pochhammer.html#ascPochhammer\">ascPochhammer</a> <span class=\"fn\">R</span> <span class=\"fn\">ν</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L152-L155","name":"bernsteinPolynomial.iterate_derivative_succ_at_0_eq_zero","line":152,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_succ_at_0_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_succ_at_0_eq_zero\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_succ_at_0_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">ν</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L135-L150","name":"bernsteinPolynomial.iterate_derivative_at_0_eq_zero_of_lt","line":135,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_0_eq_zero_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.iterate_derivative_at_0_eq_zero_of_lt\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">iterate_derivative_at_0_eq_zero_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ν </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ν</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\">(⇑<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L131-L133","name":"bernsteinPolynomial.derivative_zero","line":131,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.derivative_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.derivative_zero\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">derivative_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L125-L129","name":"bernsteinPolynomial.derivative_succ","line":125,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.derivative_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.derivative_succ\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">derivative_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <span class=\"fn\">ν</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L94-L123","name":"bernsteinPolynomial.derivative_succ_aux","line":94,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.derivative_succ_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.derivative_succ_aux\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">derivative_succ_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> (<span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L86-L92","name":"bernsteinPolynomial.eval_at_1","line":86,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.eval_at_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.eval_at_1\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">eval_at_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L80-L84","name":"bernsteinPolynomial.eval_at_0","line":80,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.eval_at_0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.eval_at_0\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">eval_at_0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L76-L78","name":"bernsteinPolynomial.flip'","line":76,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.flip'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.flip'\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">flip'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span>))</span>.<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.comp\">comp</a></span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L72-L74","name":"bernsteinPolynomial.flip","line":72,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.flip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.flip\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">flip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">ν</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.comp\">comp</a></span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">ν</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L66-L68","name":"bernsteinPolynomial.map","line":66,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.map\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">S</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L59-L60","name":"bernsteinPolynomial.eq_zero_of_lt","line":59,"kind":"theorem","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.eq_zero_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial.eq_zero_of_lt\"><span class=\"name\">bernsteinPolynomial</span>.<span class=\"name\">eq_zero_of_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ν</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\">bernsteinPolynomial</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">ν</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Polynomial/Bernstein.lean#L46-L51","name":"bernsteinPolynomial","line":46,"kind":"def","docLink":"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial","doc":"`bernsteinPolynomial R n ν` is `(choose n ν) * X^ν * (1 - X)^(n - ν)`.\n\nAlthough the coefficients are integers, it is convenient to work over an arbitrary commutative ring.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Polynomial/Bernstein.html#bernsteinPolynomial\"><span class=\"name\">bernsteinPolynomial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">ν</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"}]}