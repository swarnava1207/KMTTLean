{"name":"Mathlib.AlgebraicTopology.SimplexCategory.Defs","instances":[{"typeNames":["SimplexCategory"],"name":"SimplexCategory.smallCategory","className":"CategoryTheory.Category"},{"typeNames":["SimplexCategory.Truncated"],"name":"SimplexCategory.instSmallCategoryTruncated","className":"CategoryTheory.Category"},{"typeNames":["SimplexCategory.Truncated"],"name":"SimplexCategory.Truncated.instInhabited","className":"Inhabited"},{"typeNames":["SimplexCategory.Truncated.inclusion"],"name":"SimplexCategory.Truncated.instFullInclusion","className":"CategoryTheory.Functor.Full"},{"typeNames":["SimplexCategory.Truncated.inclusion"],"name":"SimplexCategory.Truncated.instFaithfulInclusion","className":"CategoryTheory.Functor.Faithful"}],"imports":["Init","Mathlib.CategoryTheory.Opposites","Mathlib.Order.Fin.Basic","Mathlib.Util.Superscript"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L214-L217","name":"SimplexCategory.Truncated.inclCompInclusion","line":214,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclCompInclusion","doc":"For all `n ≤ m`, `inclusion n` factors through `Truncated m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclCompInclusion\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">inclCompInclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.incl\">incl</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion\">inclusion</a> <span class=\"fn\">m</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion\">inclusion</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L209-L212","name":"SimplexCategory.Truncated.incl","line":209,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.incl","doc":"The inclusion of `Truncated n` into `Truncated m` when `n ≤ m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.incl\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">incl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span> := by omega)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L203-L207","name":"SimplexCategory.Truncated.Hom.tr_comp","line":203,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr_comp\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">Hom</span>.<span class=\"name\">tr_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> := by trunc)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> := by trunc)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> := by trunc)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr\">tr</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">ha</span> <span class=\"fn\">hc</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr\">tr</a> <span class=\"fn\">f</span> <span class=\"fn\">ha</span> <span class=\"fn\">hb</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr\">tr</a> <span class=\"fn\">g</span> <span class=\"fn\">hb</span> <span class=\"fn\">hc</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L196-L201","name":"SimplexCategory.Truncated.Hom.tr","line":196,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr","doc":"Make a morphism in `Truncated n` from a morphism in `SimplexCategory`. This\nis equivalent to `@id (⦋a⦌ₙ ⟶ ⦋b⦌ₙ) f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.tr\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">Hom</span>.<span class=\"name\">tr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> := by trunc)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> := by trunc)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">a</span>, <span class=\"fn\">property</span> := <span class=\"fn\">ha</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">b</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hb</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L184-L187","name":"SimplexCategory.Truncated.mkNotation","line":184,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.mkNotation","doc":"For `m ≤ n`, `⦋m⦌ₙ` is the `m`-dimensional simplex in `Truncated n`. The\nproof `p : m ≤ n` can also be provided using the syntax `⦋m, p⦌ₙ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.mkNotation\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">mkNotation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L180-L181","name":"SimplexCategory.Truncated.tacticTrunc","line":180,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.tacticTrunc","doc":"A quick attempt to prove that `⦋m⦌` is `n`-truncated (`⦋m⦌.len ≤ n`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.tacticTrunc\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">tacticTrunc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L175-L175","name":"SimplexCategory.Truncated.Hom.ext_iff","line":175,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.ext_iff\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L175-L177","name":"SimplexCategory.Truncated.Hom.ext","line":175,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.Hom.ext\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">g</span></span> → <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L171-L173","name":"SimplexCategory.Truncated.inclusion.fullyFaithful","line":171,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion.fullyFaithful","doc":"A proof that the full subcategory inclusion is fully faithful "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion.fullyFaithful\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">inclusion</span>.<span class=\"name\">fullyFaithful</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion\">inclusion</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Opposites.html#CategoryTheory.Functor.op\">op</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L169-L169","name":"SimplexCategory.Truncated.instFaithfulInclusion","line":169,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.instFaithfulInclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.instFaithfulInclusion\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">instFaithfulInclusion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion\">inclusion</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L168-L168","name":"SimplexCategory.Truncated.instFullInclusion","line":168,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.instFullInclusion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.instFullInclusion\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">instFullInclusion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion\">inclusion</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L162-L166","name":"SimplexCategory.Truncated.inclusion","line":162,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion","doc":"The fully faithful inclusion of the truncated simplex category into the usual\nsimplex category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.inclusion\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">inclusion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L159-L160","name":"SimplexCategory.Truncated.instInhabited","line":159,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated.instInhabited\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L154-L155","name":"SimplexCategory.instSmallCategoryTruncated","line":154,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.instSmallCategoryTruncated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.instSmallCategoryTruncated\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">instSmallCategoryTruncated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\">Truncated</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L150-L152","name":"SimplexCategory.Truncated","line":150,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated","doc":"The truncated simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Truncated\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Truncated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L145-L145","name":"SimplexCategory.Hom.ext_iff","line":145,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.ext_iff\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L145-L148","name":"SimplexCategory.Hom.ext","line":145,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.ext\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a> <span class=\"fn\">g</span></span> → <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L141-L143","name":"SimplexCategory.comp_toOrderHom","line":141,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.comp_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.comp_toOrderHom\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">comp_toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L137-L139","name":"SimplexCategory.id_toOrderHom","line":137,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.id_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.id_toOrderHom\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">id_toOrderHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">Hom.toOrderHom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.id\">OrderHom.id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L132-L135","name":"SimplexCategory.smallCategory","line":132,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.smallCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.smallCategory\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">smallCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L124-L128","name":"SimplexCategory.Hom.comp","line":124,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.comp","doc":"Composition of morphisms of `SimplexCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.comp\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L119-L122","name":"SimplexCategory.Hom.id","line":119,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.id","doc":"Identity morphisms of `SimplexCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.id\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L115-L117","name":"SimplexCategory.Hom.mk_toOrderHom_apply","line":115,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk_toOrderHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk_toOrderHom_apply\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk_toOrderHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk\">mk</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L110-L113","name":"SimplexCategory.Hom.toOrderHom_mk","line":110,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom_mk\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toOrderHom_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk\">mk</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L106-L108","name":"SimplexCategory.Hom.mk_toOrderHom","line":106,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk_toOrderHom\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk_toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L100-L102","name":"SimplexCategory.Hom.ext'","line":100,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.ext'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.ext'\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\">toOrderHom</a></span> → <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L95-L98","name":"SimplexCategory.Hom.toOrderHom","line":95,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom","doc":"Recover the monotone map from a morphism in the simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.toOrderHom\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L91-L93","name":"SimplexCategory.Hom.mk","line":91,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk","doc":"Make a morphism in `SimplexCategory` from a monotone map of `Fin`'s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom.mk\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\">Hom</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L85-L87","name":"SimplexCategory.Hom","line":85,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom","doc":"Morphisms in the `SimplexCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.Hom\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L81-L83","name":"SimplexCategory.rec","line":81,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.rec","doc":"A recursor for `SimplexCategory`. Use it as `induction Δ using SimplexCategory.rec`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.rec\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">mk</a> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L77-L79","name":"SimplexCategory.mk_len","line":77,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk_len","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk_len\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">mk_len</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L73-L75","name":"SimplexCategory.len_mk","line":73,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len_mk\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">len_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L65-L65","name":"SimplexCategory.ext_iff","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.ext_iff\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L65-L67","name":"SimplexCategory.ext","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.ext\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L61-L63","name":"SimplexCategory.len","line":61,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len","doc":"The length of an object of `SimplexCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">len</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L57-L58","name":"Simplicial.«term⦋_⦌»","line":57,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#Simplicial.«term⦋_⦌»","doc":"the `n`-dimensional simplex can be denoted `⦋n⦌` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#Simplicial.«term⦋_⦌»\"><span class=\"name\">Simplicial</span>.<span class=\"name\">«term⦋_⦌»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L53-L55","name":"SimplexCategory.mk","line":53,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk","doc":"Interpret a natural number as an object of the simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\"><span class=\"name\">SimplexCategory</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/Defs.lean#L43-L48","name":"SimplexCategory","line":43,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory","doc":"The simplex category:\n* objects are natural numbers `n : ℕ`\n* morphisms from `n` to `m` are monotone functions `Fin (n+1) → Fin (m+1)`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\"><span class=\"name\">SimplexCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}