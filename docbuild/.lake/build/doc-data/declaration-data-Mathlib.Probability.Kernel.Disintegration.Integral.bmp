{"name":"Mathlib.Probability.Kernel.Disintegration.Integral","instances":[],"imports":["Init","Mathlib.Probability.Kernel.Composition.IntegralCompProd","Mathlib.Probability.Kernel.Disintegration.StandardBorel"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L261-L263","name":"MeasureTheory.Integrable.integral_condKernel","line":261,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.integral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.integral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">integral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L253-L259","name":"MeasureTheory.Integrable.norm_integral_condKernel","line":253,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.norm_integral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.norm_integral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">norm_integral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">x</span></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a>)</span> <span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L247-L251","name":"MeasureTheory.Integrable.integral_norm_condKernel","line":247,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.integral_norm_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.integral_norm_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">integral_norm_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L241-L245","name":"MeasureTheory.Integrable.condKernel_ae","line":241,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.condKernel_ae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Integrable.condKernel_ae\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Integrable</span>.<span class=\"name\">condKernel_ae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L233-L239","name":"MeasureTheory.AEStronglyMeasurable.ae_integrable_condKernel_iff","line":233,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.AEStronglyMeasurable.ae_integrable_condKernel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.AEStronglyMeasurable.ae_integrable_condKernel_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEStronglyMeasurable</span>.<span class=\"name\">ae_integrable_condKernel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">a</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">a</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L212-L215","name":"MeasureTheory.Measure.setIntegral_condKernel_univ_left","line":212,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setIntegral_condKernel_univ_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setIntegral_condKernel_univ_left\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setIntegral_condKernel_univ_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> (<a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>) <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L207-L210","name":"MeasureTheory.Measure.setIntegral_condKernel_univ_right","line":207,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setIntegral_condKernel_univ_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setIntegral_condKernel_univ_right\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setIntegral_condKernel_univ_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> (<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>) <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L200-L205","name":"MeasureTheory.Measure.setIntegral_condKernel","line":200,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setIntegral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setIntegral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setIntegral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> (<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>) <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L194-L198","name":"MeasureTheory.Measure.integral_condKernel","line":194,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.integral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.integral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">integral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L188-L192","name":"MeasureTheory.AEStronglyMeasurable.integral_condKernel","line":188,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.AEStronglyMeasurable.integral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.AEStronglyMeasurable.integral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEStronglyMeasurable</span>.<span class=\"name\">integral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L175-L179","name":"MeasureTheory.Measure.setLIntegral_condKernel_univ_left","line":175,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel_univ_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel_univ_left\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setLIntegral_condKernel_univ_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L169-L173","name":"MeasureTheory.Measure.setLIntegral_condKernel_univ_right","line":169,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel_univ_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel_univ_right\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setLIntegral_condKernel_univ_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L162-L167","name":"MeasureTheory.Measure.setLIntegral_condKernel","line":162,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setLIntegral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L157-L160","name":"MeasureTheory.Measure.lintegral_condKernel","line":157,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.lintegral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.lintegral_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">lintegral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L143-L155","name":"MeasureTheory.Measure.setLIntegral_condKernel_eq_measure_prod","line":143,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel_eq_measure_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.setLIntegral_condKernel_eq_measure_prod\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">setLIntegral_condKernel_eq_measure_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ρ</span> (<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L137-L141","name":"MeasureTheory.Measure.lintegral_condKernel_mem","line":137,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.lintegral_condKernel_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.Measure.lintegral_condKernel_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Measure</span>.<span class=\"name\">lintegral_condKernel_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">ρ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#MeasureTheory.Measure.condKernel\">condKernel</a></span> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">y</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">ρ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.fst\">fst</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ρ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L117-L121","name":"ProbabilityTheory.setIntegral_condKernel_univ_left","line":117,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setIntegral_condKernel_univ_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setIntegral_condKernel_univ_left\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setIntegral_condKernel_univ_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">f</span> (<a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>) <span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L111-L115","name":"ProbabilityTheory.setIntegral_condKernel_univ_right","line":111,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setIntegral_condKernel_univ_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setIntegral_condKernel_univ_right\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setIntegral_condKernel_univ_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">f</span> (<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>) <span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L103-L109","name":"ProbabilityTheory.setIntegral_condKernel","line":103,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setIntegral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setIntegral_condKernel\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setIntegral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">f</span> (<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>) <span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L97-L101","name":"ProbabilityTheory.integral_condKernel","line":97,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.integral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.integral_condKernel\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L90-L95","name":"MeasureTheory.AEStronglyMeasurable.integral_kernel_condKernel","line":90,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.AEStronglyMeasurable.integral_kernel_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#MeasureTheory.AEStronglyMeasurable.integral_kernel_condKernel\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEStronglyMeasurable</span>.<span class=\"name\">integral_kernel_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">ProbabilityTheory.Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">ProbabilityTheory.IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">y</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L77-L81","name":"ProbabilityTheory.setLIntegral_condKernel_univ_left","line":77,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel_univ_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel_univ_left\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setLIntegral_condKernel_univ_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L71-L75","name":"ProbabilityTheory.setLIntegral_condKernel_univ_right","line":71,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel_univ_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel_univ_right\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setLIntegral_condKernel_univ_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L64-L69","name":"ProbabilityTheory.setLIntegral_condKernel","line":64,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setLIntegral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L59-L62","name":"ProbabilityTheory.lintegral_condKernel","line":59,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.lintegral_condKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.lintegral_condKernel\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">lintegral_condKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">ω</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L45-L57","name":"ProbabilityTheory.setLIntegral_condKernel_eq_measure_prod","line":45,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel_eq_measure_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.setLIntegral_condKernel_eq_measure_prod\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">setLIntegral_condKernel_eq_measure_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">in</a> <span class=\"fn\">s</span><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">t</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span> (<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Disintegration/Integral.lean#L40-L43","name":"ProbabilityTheory.lintegral_condKernel_mem","line":40,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.lintegral_condKernel_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Disintegration/Integral.html#ProbabilityTheory.lintegral_condKernel_mem\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">lintegral_condKernel_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mβ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">α</span> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ω</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Disintegration/StandardBorel.html#ProbabilityTheory.Kernel.condKernel\">condKernel</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MapComap.html#ProbabilityTheory.Kernel.fst\">fst</a></span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">s</span></span></div></div>"}]}