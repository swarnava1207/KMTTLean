{"name":"Mathlib.CategoryTheory.Idempotents.Karoubi","instances":[{"typeNames":["CategoryTheory.Idempotents.Karoubi.Hom"],"name":"CategoryTheory.Idempotents.Karoubi.instInhabitedHomOfPreadditive","className":"Inhabited"},{"typeNames":["CategoryTheory.Idempotents.Karoubi"],"name":"CategoryTheory.Idempotents.Karoubi.instCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Idempotents.Karoubi"],"name":"CategoryTheory.Idempotents.Karoubi.coe","className":"CoeTC"},{"typeNames":["CategoryTheory.Idempotents.toKaroubi"],"name":"CategoryTheory.Idempotents.instFullKaroubiToKaroubi","className":"CategoryTheory.Functor.Full"},{"typeNames":["CategoryTheory.Idempotents.toKaroubi"],"name":"CategoryTheory.Idempotents.instFaithfulKaroubiToKaroubi","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.Idempotents.instAdd","className":"Add"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.Idempotents.instNeg","className":"Neg"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.Idempotents.instZero","className":"Zero"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.Idempotents.instAddCommGroupHom","className":"AddCommGroup"},{"typeNames":["CategoryTheory.Idempotents.Karoubi"],"name":"CategoryTheory.Idempotents.instPreadditiveKaroubi","className":"CategoryTheory.Preadditive"},{"typeNames":["CategoryTheory.Idempotents.toKaroubi"],"name":"CategoryTheory.Idempotents.instAdditiveKaroubiToKaroubi","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Idempotents.Karoubi"],"name":"CategoryTheory.Idempotents.instIsIdempotentCompleteKaroubi","className":"CategoryTheory.IsIdempotentComplete"},{"typeNames":["CategoryTheory.Idempotents.toKaroubi"],"name":"CategoryTheory.Idempotents.instEssSurjKaroubiToKaroubiOfIsIdempotentComplete","className":"CategoryTheory.Functor.EssSurj"},{"typeNames":["CategoryTheory.Idempotents.toKaroubi"],"name":"CategoryTheory.Idempotents.toKaroubi_isEquivalence","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["CategoryTheory.Equivalence.functor"],"name":"CategoryTheory.Idempotents.toKaroubiEquivalence_functor_additive","className":"CategoryTheory.Functor.Additive"}],"imports":["Init","Mathlib.CategoryTheory.Idempotents.Basic","Mathlib.CategoryTheory.Preadditive.AdditiveFunctor","Mathlib.CategoryTheory.Equivalence"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L273-L275","name":"CategoryTheory.Idempotents.Karoubi.zsmul_hom","line":273,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.zsmul_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.zsmul_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">zsmul_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>).<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L269-L271","name":"CategoryTheory.Idempotents.Karoubi.decompId_p_naturality","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_p_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">{ <span class=\"fn\">f</span> := <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>, <span class=\"fn\">comm</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L265-L267","name":"CategoryTheory.Idempotents.Karoubi.decompId_i_naturality","line":265,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_i_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span> <span class=\"fn\">{ <span class=\"fn\">f</span> := <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>, <span class=\"fn\">comm</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L262-L263","name":"CategoryTheory.Idempotents.Karoubi.decompId_p_toKaroubi","line":262,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p_toKaroubi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p_toKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_p_toKaroubi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">{ <span class=\"fn\">X</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>, <span class=\"fn\">p</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span></span>, <span class=\"fn\">idem</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L259-L260","name":"CategoryTheory.Idempotents.Karoubi.decompId_i_toKaroubi","line":259,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i_toKaroubi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i_toKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_i_toKaroubi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L255-L257","name":"CategoryTheory.Idempotents.Karoubi.decomp_p","line":255,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decomp_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decomp_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decomp_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L250-L250","name":"CategoryTheory.Idempotents.Karoubi.decompId_assoc","line":250,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L248-L253","name":"CategoryTheory.Idempotents.Karoubi.decompId","line":248,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId","doc":"The formal direct factor of `P.X` given by the idempotent `P.p` in the category `C`\nis actually a direct factor in the category `Karoubi C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L244-L244","name":"CategoryTheory.Idempotents.Karoubi.decompId_p_f","line":244,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_p_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\">decompId_p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L243-L246","name":"CategoryTheory.Idempotents.Karoubi.decompId_p","line":243,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p","doc":"The split epi which appears in the factorisation `decompId P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">X</span> := <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>, <span class=\"fn\">p</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span></span>, <span class=\"fn\">idem</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L239-L239","name":"CategoryTheory.Idempotents.Karoubi.decompId_i_f","line":239,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_i_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\">decompId_i</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L238-L241","name":"CategoryTheory.Idempotents.Karoubi.decompId_i","line":238,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i","doc":"The split mono which appears in the factorisation `decompId P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.decompId_i\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">decompId_i</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">X</span> := <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>, <span class=\"fn\">p</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span></span>, <span class=\"fn\">idem</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L230-L232","name":"CategoryTheory.Idempotents.toKaroubiEquivalence_functor_additive","line":230,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence_functor_additive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence_functor_additive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubiEquivalence_functor_additive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence\">toKaroubiEquivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L226-L228","name":"CategoryTheory.Idempotents.toKaroubiEquivalence","line":226,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence","doc":"The equivalence `C ≅ Karoubi C` when `C` is idempotent complete. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubiEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubiEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L223-L224","name":"CategoryTheory.Idempotents.toKaroubi_isEquivalence","line":223,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_isEquivalence","doc":"If `C` is idempotent complete, the functor `toKaroubi : C ⥤ Karoubi C` is an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_isEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubi_isEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Functor.IsEquivalence\">IsEquivalence</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L214-L221","name":"CategoryTheory.Idempotents.instEssSurjKaroubiToKaroubiOfIsIdempotentComplete","line":214,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instEssSurjKaroubiToKaroubiOfIsIdempotentComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instEssSurjKaroubiToKaroubiOfIsIdempotentComplete\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instEssSurjKaroubiToKaroubiOfIsIdempotentComplete</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/EssentialImage.html#CategoryTheory.Functor.EssSurj\">EssSurj</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L205-L212","name":"CategoryTheory.Idempotents.instIsIdempotentCompleteKaroubi","line":205,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instIsIdempotentCompleteKaroubi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instIsIdempotentCompleteKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instIsIdempotentCompleteKaroubi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L199-L199","name":"CategoryTheory.Idempotents.instAdditiveKaroubiToKaroubi","line":199,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAdditiveKaroubiToKaroubi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAdditiveKaroubiToKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instAdditiveKaroubiToKaroubi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L195-L197","name":"CategoryTheory.Idempotents.instPreadditiveKaroubi","line":195,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instPreadditiveKaroubi","doc":"The category `Karoubi C` is preadditive if `C` is. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instPreadditiveKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instPreadditiveKaroubi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L188-L191","name":"CategoryTheory.Idempotents.Karoubi.sum_hom","line":188,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.sum_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.sum_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">sum_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → (<span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L182-L182","name":"CategoryTheory.Idempotents.Karoubi.inclusionHom_apply","line":182,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.inclusionHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.inclusionHom_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">inclusionHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.inclusionHom\">inclusionHom</a></span> <span class=\"fn\">Q</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L181-L186","name":"CategoryTheory.Idempotents.Karoubi.inclusionHom","line":181,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.inclusionHom","doc":"The map sending `f : P ⟶ Q` to `f.f : P.X ⟶ Q.X` is additive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.inclusionHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">inclusionHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>) <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> (<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L178-L179","name":"CategoryTheory.Idempotents.Karoubi.hom_eq_zero_iff","line":178,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.hom_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.hom_eq_zero_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">hom_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L157-L174","name":"CategoryTheory.Idempotents.instAddCommGroupHom","line":157,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAddCommGroupHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAddCommGroupHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instAddCommGroupHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> (<span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L153-L153","name":"CategoryTheory.Idempotents.instZero_zero","line":153,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instZero_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instZero_zero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instZero_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">f</span> := <span class=\"fn\">0</span>, <span class=\"fn\">comm</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L153-L155","name":"CategoryTheory.Idempotents.instZero","line":153,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instZero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> (<span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L149-L149","name":"CategoryTheory.Idempotents.instNeg_neg","line":149,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instNeg_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instNeg_neg\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instNeg_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">f</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>, <span class=\"fn\">comm</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L149-L151","name":"CategoryTheory.Idempotents.instNeg","line":149,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instNeg\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> (<span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L145-L145","name":"CategoryTheory.Idempotents.instAdd_add","line":145,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAdd_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAdd_add\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instAdd_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">f</span> := <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>, <span class=\"fn\">comm</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L145-L147","name":"CategoryTheory.Idempotents.instAdd","line":145,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instAdd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> (<span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L140-L141","name":"CategoryTheory.Idempotents.instFaithfulKaroubiToKaroubi","line":140,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instFaithfulKaroubiToKaroubi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instFaithfulKaroubiToKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instFaithfulKaroubiToKaroubi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L138-L138","name":"CategoryTheory.Idempotents.instFullKaroubiToKaroubi","line":138,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instFullKaroubiToKaroubi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.instFullKaroubiToKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instFullKaroubiToKaroubi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L133-L133","name":"CategoryTheory.Idempotents.toKaroubi_obj_X","line":133,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_obj_X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubi_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L133-L133","name":"CategoryTheory.Idempotents.toKaroubi_obj_p","line":133,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_obj_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_obj_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubi_obj_p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L133-L133","name":"CategoryTheory.Idempotents.toKaroubi_map_f","line":133,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi_map_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubi_map_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L131-L136","name":"CategoryTheory.Idempotents.toKaroubi","line":131,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi","doc":"The obvious fully faithful functor `toKaroubi` sends an object `X : C` to the obvious\nformal direct factor of `X` given by `𝟙 X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">toKaroubi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L123-L127","name":"CategoryTheory.Idempotents.Karoubi.eqToHom_f","line":123,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.eqToHom_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.eqToHom_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">eqToHom_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L120-L121","name":"CategoryTheory.Idempotents.Karoubi.coe_p","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.coe_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.coe_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">coe_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">X</span> := <span class=\"fn\">X</span>, <span class=\"fn\">p</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span>, <span class=\"fn\">idem</span> := <span class=\"fn\">⋯</span> }</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L118-L118","name":"CategoryTheory.Idempotents.Karoubi.coe_X","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.coe_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.coe_X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">coe_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">X</span> := <span class=\"fn\">X</span>, <span class=\"fn\">p</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span></span>, <span class=\"fn\">idem</span> := <span class=\"fn\">⋯</span> }</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L113-L116","name":"CategoryTheory.Idempotents.Karoubi.coe","line":113,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.coe","doc":"It is possible to coerce an object of `C` into an object of `Karoubi C`.\nSee also the functor `toKaroubi`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L110-L111","name":"CategoryTheory.Idempotents.Karoubi.id_f","line":110,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.id_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.id_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">id_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L107-L108","name":"CategoryTheory.Idempotents.Karoubi.comp_f","line":107,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">comp_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Q</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L103-L105","name":"CategoryTheory.Idempotents.Karoubi.hom_ext","line":103,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L96-L101","name":"CategoryTheory.Idempotents.Karoubi.hom_ext_iff","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.hom_ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L90-L94","name":"CategoryTheory.Idempotents.Karoubi.instCategory","line":90,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.instCategory","doc":"The category structure on the karoubi envelope of a category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.instCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">instCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, max u_2 u_1}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L87-L88","name":"CategoryTheory.Idempotents.Karoubi.comp_proof","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_proof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_proof\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">comp_proof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>)</span> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L84-L84","name":"CategoryTheory.Idempotents.Karoubi.p_comm_assoc","line":84,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comm_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comm_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">p_comm_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L84-L85","name":"CategoryTheory.Idempotents.Karoubi.p_comm","line":84,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">p_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L80-L80","name":"CategoryTheory.Idempotents.Karoubi.comp_p_assoc","line":80,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_p_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_p_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">comp_p_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L80-L82","name":"CategoryTheory.Idempotents.Karoubi.comp_p","line":80,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.comp_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">comp_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L77-L77","name":"CategoryTheory.Idempotents.Karoubi.p_comp_assoc","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comp_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">p_comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L77-L78","name":"CategoryTheory.Idempotents.Karoubi.p_comp","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">p_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L74-L75","name":"CategoryTheory.Idempotents.Karoubi.instInhabitedHomOfPreadditive","line":74,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.instInhabitedHomOfPreadditive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.instInhabitedHomOfPreadditive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">instInhabitedHomOfPreadditive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L72-L72","name":"CategoryTheory.Idempotents.Karoubi.Hom.comm","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.comm","doc":"compatibility of the given morphism with the given idempotents "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.comm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L70-L70","name":"CategoryTheory.Idempotents.Karoubi.Hom.f","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f","doc":"a morphism between the underlying objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">Hom</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L68-L68","name":"CategoryTheory.Idempotents.Karoubi.Hom.mk","line":68,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comm</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>)</span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L67-L67","name":"CategoryTheory.Idempotents.Karoubi.Hom.ext","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L67-L67","name":"CategoryTheory.Idempotents.Karoubi.Hom.ext_iff","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\">Hom</a></span> <span class=\"fn\">Q</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L63-L72","name":"CategoryTheory.Idempotents.Karoubi.Hom","line":63,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom","doc":"A morphism `P ⟶ Q` in the category `Karoubi C` is a morphism in the underlying category\n`C` which satisfies a relation, which in the preadditive case, expresses that it induces a\nmap between the corresponding \"formal direct factors\" and that it vanishes on the complement\nformal direct factor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L54-L61","name":"CategoryTheory.Idempotents.Karoubi.ext","line":54,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_X</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_p</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">h_X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">h_X</span>)</span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L52-L52","name":"CategoryTheory.Idempotents.Karoubi.idem_assoc","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.idem_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.idem_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">idem_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L46-L46","name":"CategoryTheory.Idempotents.Karoubi.idem","line":46,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.idem","doc":"the condition that the given endomorphism is an idempotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.idem\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L44-L44","name":"CategoryTheory.Idempotents.Karoubi.p","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p","doc":"an endomorphism of the object "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L42-L42","name":"CategoryTheory.Idempotents.Karoubi.X","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X","doc":"an object of the underlying category "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L40-L40","name":"CategoryTheory.Idempotents.Karoubi.mk","line":40,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idem</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/Karoubi.lean#L34-L46","name":"CategoryTheory.Idempotents.Karoubi","line":34,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi","doc":"In a preadditive category `C`, when an object `X` decomposes as `X ≅ P ⨿ Q`, one may\nconsider `P` as a direct factor of `X` and up to unique isomorphism, it is determined by the\nobvious idempotent `X ⟶ P ⟶ X` which is the projection onto `P` with kernel `Q`. More generally,\none may define a formal direct factor of an object `X : C` : it consists of an idempotent\n`p : X ⟶ X` which is thought as the \"formal image\" of `p`. The type `Karoubi C` shall be the\ntype of the objects of the karoubi envelope of `C`. It makes sense for any category `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">Karoubi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}