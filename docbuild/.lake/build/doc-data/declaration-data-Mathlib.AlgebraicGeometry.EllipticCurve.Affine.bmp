{"name":"Mathlib.AlgebraicGeometry.EllipticCurve.Affine","instances":[{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instInhabited","className":"Inhabited"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instZero","className":"Zero"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instNeg","className":"Neg"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instInvolutiveNeg","className":"InvolutiveNeg"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instAdd","className":"Add"},{"typeNames":["WeierstrassCurve.Affine.Point"],"name":"WeierstrassCurve.Affine.Point.instAddZeroClass","className":"AddZeroClass"}],"imports":["Init","Mathlib.Algebra.Polynomial.Bivariate","Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","Mathlib.AlgebraicGeometry.EllipticCurve.VariableChange"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L938-L941","name":"WeierstrassCurve.Affine.Point.map_baseChange","line":938,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">F</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange\">baseChange</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange\">baseChange</a> <span class=\"fn\">F</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L933-L936","name":"WeierstrassCurve.Affine.Point.baseChange","line":933,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange","doc":"The group homomorphism from `W⟮F⟯` to `W⟮K⟯` induced by the base change from `F` to `K`, where\n`W` is defined over a subring of a ring `S`, and `F` and `K` are field extensions of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L926-L930","name":"WeierstrassCurve.Affine.Point.map_injective","line":926,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_injective\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L923-L924","name":"WeierstrassCurve.Affine.Point.map_map","line":923,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L920-L921","name":"WeierstrassCurve.Affine.Point.map_id","line":920,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_id\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Hom.html#Algebra.ofId\">Algebra.ofId</a> <span class=\"fn\">F</span> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L916-L918","name":"WeierstrassCurve.Affine.Point.map_some","line":916,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L913-L914","name":"WeierstrassCurve.Affine.Point.map_zero","line":913,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L911-L911","name":"WeierstrassCurve.Affine.Point.mapFun","line":911,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.mapFun","doc":"**Alias** of `WeierstrassCurve.Affine.Point.map`.\n\n---\n\nThe group homomorphism from `W⟮F⟯` to `W⟮K⟯` induced by an algebra homomorphism `f : F →ₐ[S] K`,\nwhere `W` is defined over a subring of a ring `S`, and `F` and `K` are field extensions of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.mapFun\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">mapFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L895-L909","name":"WeierstrassCurve.Affine.Point.map","line":895,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map","doc":"The group homomorphism from `W⟮F⟯` to `W⟮K⟯` induced by an algebra homomorphism `f : F →ₐ[S] K`,\nwhere `W` is defined over a subring of a ring `S`, and `F` and `K` are field extensions of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L881-L885","name":"WeierstrassCurve.Affine.baseChange_slope","line":881,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L877-L879","name":"WeierstrassCurve.Affine.baseChange_addY","line":877,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">y₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L873-L875","name":"WeierstrassCurve.Affine.baseChange_negAddY","line":873,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negAddY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negAddY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negAddY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">y₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L869-L871","name":"WeierstrassCurve.Affine.baseChange_addX","line":869,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L865-L867","name":"WeierstrassCurve.Affine.baseChange_addPolynomial","line":865,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(↑<span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L861-L863","name":"WeierstrassCurve.Affine.baseChange_negY","line":861,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L857-L859","name":"WeierstrassCurve.Affine.baseChange_negPolynomial","line":857,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L852-L855","name":"WeierstrassCurve.Affine.baseChange_nonsingular","line":852,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L847-L849","name":"WeierstrassCurve.Affine.baseChange_polynomialY","line":847,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L843-L845","name":"WeierstrassCurve.Affine.baseChange_polynomialX","line":843,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L839-L841","name":"WeierstrassCurve.Affine.baseChange_equation","line":839,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_equation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L833-L836","name":"WeierstrassCurve.Affine.Equation.baseChange","line":833,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation.baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation.baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Equation</span>.<span class=\"name\">baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L828-L830","name":"WeierstrassCurve.Affine.baseChange_polynomial","line":828,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.baseChange_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">baseChange_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L808-L817","name":"WeierstrassCurve.Affine.map_slope","line":808,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L804-L806","name":"WeierstrassCurve.Affine.map_addY","line":804,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">y₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L799-L802","name":"WeierstrassCurve.Affine.map_negAddY","line":799,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negAddY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negAddY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_negAddY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">y₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L795-L797","name":"WeierstrassCurve.Affine.map_addX","line":795,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₂</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L789-L793","name":"WeierstrassCurve.Affine.map_addPolynomial","line":789,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L785-L787","name":"WeierstrassCurve.Affine.map_linePolynomial","line":785,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_linePolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_linePolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_linePolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">linePolynomial</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">linePolynomial</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L781-L783","name":"WeierstrassCurve.Affine.map_negY","line":781,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L776-L779","name":"WeierstrassCurve.Affine.map_negPolynomial","line":776,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L771-L774","name":"WeierstrassCurve.Affine.map_nonsingular","line":771,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L766-L768","name":"WeierstrassCurve.Affine.map_polynomialY","line":766,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L762-L764","name":"WeierstrassCurve.Affine.map_polynomialX","line":762,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L758-L760","name":"WeierstrassCurve.Affine.map_equation","line":758,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_equation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L754-L755","name":"WeierstrassCurve.Affine.Equation.map","line":754,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation.map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Equation</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L750-L751","name":"WeierstrassCurve.Affine.evalEval_baseChange_polynomial_X_Y","line":750,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_baseChange_polynomial_X_Y","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_baseChange_polynomial`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_baseChange_polynomial_X_Y\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_baseChange_polynomial_X_Y</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>)</span> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L746-L748","name":"WeierstrassCurve.Affine.evalEval_baseChange_polynomial","line":746,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_baseChange_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_baseChange_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_baseChange_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>)</span> <a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a>\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L742-L744","name":"WeierstrassCurve.Affine.map_polynomial","line":742,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.map_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">map_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.mapRingHom\">Polynomial.mapRingHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L728-L730","name":"WeierstrassCurve.Affine.Point.add_of_X_ne'","line":728,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_X_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L723-L726","name":"WeierstrassCurve.Affine.Point.add_of_X_ne","line":723,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_X_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_X_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L719-L721","name":"WeierstrassCurve.Affine.Point.add_self_of_Y_ne'","line":719,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_self_of_Y_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">y₁</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L714-L717","name":"WeierstrassCurve.Affine.Point.add_self_of_Y_ne","line":714,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_self_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">y₁</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L709-L712","name":"WeierstrassCurve.Affine.Point.add_of_Y_ne'","line":709,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_Y_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L703-L707","name":"WeierstrassCurve.Affine.Point.add_of_Y_ne","line":703,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L698-L701","name":"WeierstrassCurve.Affine.Point.add_self_of_Y_eq","line":698,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_self_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_self_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">y₁</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L693-L696","name":"WeierstrassCurve.Affine.Point.add_of_Y_eq","line":693,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L691-L691","name":"WeierstrassCurve.Affine.Point.add_of_imp","line":691,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_imp","doc":"**Alias** of `WeierstrassCurve.Affine.Point.add_some`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_of_imp\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_of_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L687-L689","name":"WeierstrassCurve.Affine.Point.add_some","line":687,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L684-L685","name":"WeierstrassCurve.Affine.Point.add_def","line":684,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add\">add</a></span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L681-L682","name":"WeierstrassCurve.Affine.Point.instAddZeroClass","line":681,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddZeroClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAddZeroClass\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAddZeroClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L678-L679","name":"WeierstrassCurve.Affine.Point.instAdd","line":678,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instAdd\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L669-L676","name":"WeierstrassCurve.Affine.Point.add","line":669,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add","doc":"The addition of two nonsingular points on a Weierstrass curve in affine coordinates.\n\nGiven two nonsingular points `P` and `Q` in affine coordinates, use `P + Q` instead of `add P Q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span> → <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span> → <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L662-L666","name":"WeierstrassCurve.Affine.Point.instInvolutiveNeg","line":662,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInvolutiveNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInvolutiveNeg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instInvolutiveNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#InvolutiveNeg\">InvolutiveNeg</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L658-L660","name":"WeierstrassCurve.Affine.Point.neg_some","line":658,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L654-L656","name":"WeierstrassCurve.Affine.Point.neg_zero","line":654,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">-<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L651-L652","name":"WeierstrassCurve.Affine.Point.neg_def","line":651,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg\">neg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L648-L649","name":"WeierstrassCurve.Affine.Point.instNeg","line":648,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instNeg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L641-L646","name":"WeierstrassCurve.Affine.Point.neg","line":641,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg","doc":"The negation of a nonsingular point on a Weierstrass curve in affine coordinates.\n\nGiven a nonsingular point `P` in affine coordinates, use `-P` instead of `neg P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span> → <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L638-L639","name":"WeierstrassCurve.Affine.Point.some_ne_zero","line":638,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">some</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L635-L636","name":"WeierstrassCurve.Affine.Point.zero_def","line":635,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero\">zero</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L632-L633","name":"WeierstrassCurve.Affine.Point.instZero","line":632,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instZero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L629-L630","name":"WeierstrassCurve.Affine.Point.instInhabited","line":629,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.instInhabited\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L621-L623","name":"WeierstrassCurve.Affine.«term_⟮_⟯»","line":621,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯»","doc":"For an algebraic extension `S` of a ring `R`, the type of nonsingular `S`-points on a\nWeierstrass curve `W` over `R` in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯»\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">«term_⟮_⟯»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L621-L623","name":"WeierstrassCurve.Affine.«term_⟮_⟯».«delab_app.WeierstrassCurve.Affine.Point»","line":621,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯».«delab_app.WeierstrassCurve.Affine.Point»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.«term_⟮_⟯».«delab_app.WeierstrassCurve.Affine.Point»\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">«term_⟮_⟯»</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L619-L619","name":"WeierstrassCurve.Affine.Point.some","line":619,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L618-L618","name":"WeierstrassCurve.Affine.Point.zero","line":618,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L614-L619","name":"WeierstrassCurve.Affine.Point","line":614,"kind":"inductive","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point","doc":"A nonsingular point on a Weierstrass curve `W` in affine coordinates. This is either the unique\npoint at infinity `WeierstrassCurve.Affine.Point.zero` or a nonsingular affine point\n`WeierstrassCurve.Affine.Point.some (x, y)` satisfying the Weierstrass equation of `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> r</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L597-L605","name":"WeierstrassCurve.Affine.addY_sub_negY_addY","line":597,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY_sub_negY_addY","doc":"The formula `ψ(P₁ + P₂) = (ψ(P₂)(x(P₁) - x(P₃)) - ψ(P₁)(x(P₂) - x(P₃))) / (x(P₂) - x(P₁))`,\nwhere `ψ(x,y) = 2y + a₁x + a₃`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY_sub_negY_addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY_sub_negY_addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">x₃</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span>;\n<span class=\"fn\">let <span class=\"fn\">y₃</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span>;\n<span class=\"fn\">y₃</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₃</span> <span class=\"fn\">y₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> ((<span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₃</span>) <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₃</span>)) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L588-L595","name":"WeierstrassCurve.Affine.cyclic_sum_Y_mul_X_sub_X","line":588,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.cyclic_sum_Y_mul_X_sub_X","doc":"The formula `y(P₁)(x(P₂) - x(P₃)) + y(P₂)(x(P₃) - x(P₁)) + y(P₃)(x(P₁) - x(P₂)) = 0`,\nassuming that `P₁ + P₂ + P₃ = O`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.cyclic_sum_Y_mul_X_sub_X\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">cyclic_sum_Y_mul_X_sub_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">x₃</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span>;\n<span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₃</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x₃</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₁</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L579-L586","name":"WeierstrassCurve.Affine.addX_eq_addX_negY_sub","line":579,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX_eq_addX_negY_sub","doc":"The formula `x(P₁ + P₂) = x(P₁ - P₂) - ψ(P₁)ψ(P₂) / (x(P₂) - x(P₁))²`,\nwhere `ψ(x,y) = 2y + a₁x + a₃`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX_eq_addX_negY_sub\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addX_eq_addX_negY_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₁</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L573-L577","name":"WeierstrassCurve.Affine.nonsingular_add","line":573,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add","doc":"The addition of two nonsingular affine points in `W` on a sloped line is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L555-L571","name":"WeierstrassCurve.Affine.nonsingular_negAdd","line":555,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd","doc":"The negated addition of two nonsingular affine points in `W` on a sloped line is nonsingular. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_negAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L546-L553","name":"WeierstrassCurve.Affine.derivative_addPolynomial_slope","line":546,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.derivative_addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.derivative_addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">derivative_addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a>((<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₁</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₂</span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>         (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₁</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₂</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span>))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L540-L544","name":"WeierstrassCurve.Affine.C_addPolynomial_slope","line":540,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">C_addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a>(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₁</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₂</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span>)</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L534-L538","name":"WeierstrassCurve.Affine.equation_add","line":534,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add","doc":"The addition of two affine points in `W` on a sloped line lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L526-L532","name":"WeierstrassCurve.Affine.equation_negAdd","line":526,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_negAdd","doc":"The negated addition of two affine points in `W` on a sloped line lies in `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_negAdd\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_negAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L497-L524","name":"WeierstrassCurve.Affine.addPolynomial_slope","line":497,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_slope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial_slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a>((<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₁</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">x₂</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span>)</span>)</span></span>))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L493-L495","name":"WeierstrassCurve.Affine.Y_eq_of_Y_ne","line":493,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_eq_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L487-L491","name":"WeierstrassCurve.Affine.Y_eq_of_X_eq","line":487,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_X_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_eq_of_X_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_eq_of_X_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L485-L485","name":"WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval","line":485,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval","doc":"**Alias** of `WeierstrassCurve.Affine.slope_of_Y_ne_eq_evalEval`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne_eq_eval\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_ne_eq_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L478-L483","name":"WeierstrassCurve.Affine.slope_of_Y_ne_eq_evalEval","line":478,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne_eq_evalEval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne_eq_evalEval\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_ne_eq_evalEval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L473-L476","name":"WeierstrassCurve.Affine.slope_of_X_ne","line":473,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_X_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_X_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_X_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y₂</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L467-L471","name":"WeierstrassCurve.Affine.slope_of_Y_ne","line":467,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y₁</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L462-L465","name":"WeierstrassCurve.Affine.slope_of_Y_eq","line":462,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L448-L460","name":"WeierstrassCurve.Affine.slope","line":448,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope","doc":"The slope of the line through two nonsingular affine points `(x₁, y₁)` and `(x₂, y₂)` on a\nWeierstrass curve `W`.\n\nIf `x₁ ≠ x₂`, then this line is the secant of `W` through `(x₁, y₁)` and `(x₂, y₂)`, and has slope\n`(y₁ - y₂) / (x₁ - x₂)`. Otherwise, if `y₁ ≠ -y₁ - a₁x₁ - a₃`, then this line is the tangent of `W`\nat `(x₁, y₁) = (x₂, y₂)`, and has slope `(3x₁² + 2a₂x₁ + a₄ - a₁y₁) / (2y₁ + a₁x₁ + a₃)`. Otherwise,\nthis line is vertical, in which case this returns the value `0`.\n\nThis depends on `W`, and has argument order: `x₁`, `x₂`, `y₁`, `y₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">slope</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L426-L438","name":"WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero","line":426,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_negAdd_of_eval_derivative_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_negAdd_of_eval_derivative_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">Polynomial.derivative</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L421-L424","name":"WeierstrassCurve.Affine.equation_add_iff","line":421,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_add_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_add_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\">negAddY</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span> <span class=\"fn\">ℓ</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L419-L419","name":"WeierstrassCurve.Affine.nonsingular_neg_iff","line":419,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_iff","doc":"**Alias** of `WeierstrassCurve.Affine.nonsingular_neg`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L418-L418","name":"WeierstrassCurve.Affine.nonsingular_neg_of","line":418,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_of","doc":"**Alias** of `WeierstrassCurve.Affine.nonsingular_neg`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg_of\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L413-L416","name":"WeierstrassCurve.Affine.nonsingular_neg","line":413,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L411-L411","name":"WeierstrassCurve.Affine.equation_neg_iff","line":411,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_iff","doc":"**Alias** of `WeierstrassCurve.Affine.equation_neg`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L410-L410","name":"WeierstrassCurve.Affine.equation_neg_of","line":410,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_of","doc":"**Alias** of `WeierstrassCurve.Affine.equation_neg`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg_of\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L405-L408","name":"WeierstrassCurve.Affine.equation_neg","line":405,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L397-L403","name":"WeierstrassCurve.Affine.addY","line":397,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY","doc":"The `Y`-coordinate of `(x₁, y₁) + (x₂, y₂)` for two nonsingular affine points `(x₁, y₁)` and\n`(x₂, y₂)` on a Weierstrass curve `W`, where the line through them has a slope of `ℓ`.\n\nThis depends on `W`, and has argument order: `x₁`, `x₂`, `y₁`, `ℓ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L388-L394","name":"WeierstrassCurve.Affine.negAddY","line":388,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY","doc":"The `Y`-coordinate of `-((x₁, y₁) + (x₂, y₂))` for two nonsingular affine points `(x₁, y₁)` and\n`(x₂, y₂)` on a Weierstrass curve `W`, where the line through them has a slope of `ℓ`.\n\nThis depends on `W`, and has argument order: `x₁`, `x₂`, `y₁`, `ℓ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negAddY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negAddY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L379-L385","name":"WeierstrassCurve.Affine.addX","line":379,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX","doc":"The `X`-coordinate of `(x₁, y₁) + (x₂, y₂)` for two nonsingular affine points `(x₁, y₁)` and\n`(x₂, y₂)` on a Weierstrass curve `W`, where the line through them has a slope of `ℓ`.\n\nThis depends on `W`, and has argument order: `x₁`, `x₂`, `ℓ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L369-L376","name":"WeierstrassCurve.Affine.addPolynomial_eq","line":369,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">1</span>, <span class=\"fn\">b</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">ℓ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ℓ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span>,\n        <span class=\"fn\">c</span> := <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ℓ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ℓ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span>),\n        <span class=\"fn\">d</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ℓ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ℓ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span>) }</span>.<a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">toPoly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L361-L367","name":"WeierstrassCurve.Affine.C_addPolynomial","line":361,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.C_addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">C_addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\">addPolynomial</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">linePolynomial</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span>)</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.C\">Polynomial.C</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\">linePolynomial</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">ℓ</span>)</span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L352-L359","name":"WeierstrassCurve.Affine.addPolynomial","line":352,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial","doc":"The addition polynomial obtained by substituting the line `Y = ℓ(X - x) + y` into the polynomial\n`W(X, Y)` associated to a Weierstrass curve `W`. If such a line intersects `W` at another\nnonsingular affine point `(x', y')` on `W`, then the roots of this polynomial are precisely `x`,\n`x'`, and the `X`-coordinate of the addition of `(x, y)` and `(x', y')`.\n\nThis depends on `W`, and has argument order: `x`, `y`, `ℓ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">addPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L344-L349","name":"WeierstrassCurve.Affine.linePolynomial","line":344,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial","doc":"The line polynomial `ℓ(X - x) + y` associated to the line `Y = ℓ(X - x) + y` that passes through\na nonsingular affine point `(x, y)` on a Weierstrass curve `W` with a slope of `ℓ`.\n\nThis does not depend on `W`, and has argument order: `x`, `y`, `ℓ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.linePolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">linePolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">ℓ</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L342-L342","name":"WeierstrassCurve.Affine.eval_negPolynomial","line":342,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_negPolynomial","doc":"**Alias** of `WeierstrassCurve.Affine.evalEval_negPolynomial`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.eval_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">eval_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L338-L340","name":"WeierstrassCurve.Affine.evalEval_negPolynomial","line":338,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L334-L336","name":"WeierstrassCurve.Affine.negY_negY","line":334,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY_negY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY_negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negY_negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L326-L332","name":"WeierstrassCurve.Affine.negY","line":326,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY","doc":"The `Y`-coordinate of `-(x, y)` for a nonsingular affine point `(x, y)` on a Weierstrass curve\n`W`.\n\nThis depends on `W`, and has argument order: `x`, `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L322-L323","name":"WeierstrassCurve.Affine.Y_sub_negPolynomial","line":322,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_negPolynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_sub_negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L317-L320","name":"WeierstrassCurve.Affine.Y_sub_polynomialY","line":317,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Y_sub_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Y_sub_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.X\">Polynomial.X</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\">negPolynomial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L312-L315","name":"WeierstrassCurve.Affine.negPolynomial","line":312,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial","doc":"The negation polynomial `-Y - a₁X - a₃` associated to the negation of a nonsingular affine point\non a Weierstrass curve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negPolynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">negPolynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L303-L303","name":"WeierstrassCurve.Affine.nonsingular","line":303,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular","doc":"**Alias** of `WeierstrassCurve.Affine.equation_iff_nonsingular`.\n\n---\n\nAn elliptic curve is nonsingular at every point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.IsElliptic\">WeierstrassCurve.IsElliptic</a> <span class=\"fn\">W'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L301-L302","name":"WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero","line":301,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero","doc":"**Alias** of `WeierstrassCurve.Affine.equation_iff_nonsingular_of_Δ_ne_zero`.\n\n---\n\nA Weierstrass curve is nonsingular at every point if its discriminant is non-zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hΔ</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.Δ\">Δ</a> <span class=\"fn\">W'</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L299-L300","name":"WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero","line":299,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero","doc":"**Alias** of `WeierstrassCurve.Affine.equation_iff_nonsingular_of_Δ_ne_zero`.\n\n---\n\nA Weierstrass curve is nonsingular at every point if its discriminant is non-zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_zero_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hΔ</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.Δ\">Δ</a> <span class=\"fn\">W'</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L294-L297","name":"WeierstrassCurve.Affine.equation_iff_nonsingular","line":294,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_nonsingular","doc":"An elliptic curve is nonsingular at every point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.IsElliptic\">WeierstrassCurve.IsElliptic</a> <span class=\"fn\">W'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L287-L292","name":"WeierstrassCurve.Affine.equation_iff_nonsingular_of_Δ_ne_zero","line":287,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_nonsingular_of_Δ_ne_zero","doc":"A Weierstrass curve is nonsingular at every point if its discriminant is non-zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_nonsingular_of_Δ_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_nonsingular_of_Δ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hΔ</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.Δ\">Δ</a> <span class=\"fn\">W'</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L273-L278","name":"WeierstrassCurve.Affine.nonsingular_iff_variableChange","line":273,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_variableChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff_variableChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff_variableChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/VariableChange.html#WeierstrassCurve.variableChange\">variableChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">{ <span class=\"fn\">u</span> := <span class=\"fn\">1</span>, <span class=\"fn\">r</span> := <span class=\"fn\">x</span>, <span class=\"fn\">s</span> := <span class=\"fn\">0</span>, <span class=\"fn\">t</span> := <span class=\"fn\">y</span> }</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L268-L271","name":"WeierstrassCurve.Affine.nonsingular_zero","line":268,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L262-L266","name":"WeierstrassCurve.Affine.nonsingular_iff","line":262,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L258-L260","name":"WeierstrassCurve.Affine.nonsingular_iff'","line":258,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.nonsingular_iff'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">nonsingular_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span>) <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L249-L256","name":"WeierstrassCurve.Affine.Nonsingular","line":249,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular","doc":"The proposition that an affine point `(x, y)` on a Weierstrass curve `W` is nonsingular.\n\nIn other words, either `W_X(x, y) ≠ 0` or `W_Y(x, y) ≠ 0`.\n\nNote that this definition is only mathematically accurate for fields. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L244-L246","name":"WeierstrassCurve.Affine.evalEval_polynomialY_zero","line":244,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialY_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L239-L242","name":"WeierstrassCurve.Affine.evalEval_polynomialY","line":239,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L233-L237","name":"WeierstrassCurve.Affine.polynomialY","line":233,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY","doc":"The partial derivative `W_Y(X, Y)` with respect to `Y` of the polynomial `W(X, Y)` associated to\na Weierstrass curve `W` in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L228-L230","name":"WeierstrassCurve.Affine.evalEval_polynomialX_zero","line":228,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialX_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L223-L226","name":"WeierstrassCurve.Affine.evalEval_polynomialX","line":223,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L217-L221","name":"WeierstrassCurve.Affine.polynomialX","line":217,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX","doc":"The partial derivative `W_X(X, Y)` with respect to `X` of the polynomial `W(X, Y)` associated to\na Weierstrass curve `W` in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L204-L208","name":"WeierstrassCurve.Affine.equation_iff_variableChange","line":204,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_variableChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff_variableChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff_variableChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/VariableChange.html#WeierstrassCurve.variableChange\">variableChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">{ <span class=\"fn\">u</span> := <span class=\"fn\">1</span>, <span class=\"fn\">r</span> := <span class=\"fn\">x</span>, <span class=\"fn\">s</span> := <span class=\"fn\">0</span>, <span class=\"fn\">t</span> := <span class=\"fn\">y</span> }</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\">toAffine</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L200-L202","name":"WeierstrassCurve.Affine.equation_zero","line":200,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L196-L198","name":"WeierstrassCurve.Affine.equation_iff","line":196,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L192-L194","name":"WeierstrassCurve.Affine.equation_iff'","line":192,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.equation_iff'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">equation_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L186-L190","name":"WeierstrassCurve.Affine.Equation","line":186,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation","doc":"The proposition that an affine point `(x, y)` lies in a Weierstrass curve `W`.\n\nIn other words, it satisfies the Weierstrass equation `W(X, Y) = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L181-L183","name":"WeierstrassCurve.Affine.evalEval_polynomial_zero","line":181,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomial_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L175-L179","name":"WeierstrassCurve.Affine.evalEval_polynomial","line":175,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.evalEval_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">evalEval_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L163-L173","name":"WeierstrassCurve.Affine.irreducible_polynomial","line":163,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.irreducible_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.irreducible_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">irreducible_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Prime/Defs.html#Irreducible\">Irreducible</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L159-L161","name":"WeierstrassCurve.Affine.monic_polynomial","line":159,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.monic_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.monic_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">monic_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Monic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L154-L157","name":"WeierstrassCurve.Affine.natDegree_polynomial","line":154,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.natDegree_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.natDegree_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">natDegree_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L149-L152","name":"WeierstrassCurve.Affine.degree_polynomial","line":149,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.degree_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.degree_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">degree_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.degree\">degree</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L145-L147","name":"WeierstrassCurve.Affine.polynomial_ne_zero","line":145,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L139-L143","name":"WeierstrassCurve.Affine.polynomial_eq","line":139,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">0</span>, <span class=\"fn\">b</span> := <span class=\"fn\">1</span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">0</span>, <span class=\"fn\">b</span> := <span class=\"fn\">0</span>, <span class=\"fn\">c</span> := <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span>, <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> }</span>.<a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">toPoly</a></span>,\n      <span class=\"fn\">d</span> := <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\">-<span class=\"fn\">1</span></span>, <span class=\"fn\">b</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span>, <span class=\"fn\">c</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span>, <span class=\"fn\">d</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> }</span>.<a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">toPoly</a></span> }</span>.<a href=\"./Mathlib/Algebra/CubicDiscriminant.html#Cubic.toPoly\">toPoly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L129-L137","name":"WeierstrassCurve.Affine.polynomial","line":129,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial","doc":"The polynomial `W(X, Y) := Y² + a₁XY + a₃Y - (X³ + a₂X² + a₄X + a₆)` associated to a Weierstrass\ncurve `W` over a ring `R` in affine coordinates.\n\nFor ease of polynomial manipulation, this is represented as a term of type `R[X][X]`, where the\ninner variable represents `X` and the outer variable represents `Y`. For clarity, the alternative\nnotations `Y` and `R[X][Y]` are provided in the `Polynomial.Bivariate` scope to represent the outer\nvariable and the bivariate polynomial ring `R[X][X]` respectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L115-L117","name":"WeierstrassCurve.toAffine","line":115,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine","doc":"The conversion from a Weierstrass curve to affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.toAffine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve\">WeierstrassCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Affine.lean#L111-L113","name":"WeierstrassCurve.Affine","line":111,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine","doc":"An abbreviation for a Weierstrass curve in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> r</div></div>"}]}