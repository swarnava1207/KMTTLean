{"name":"Aesop.Frontend.Tactic","instances":[],"imports":["Init","Aesop.Frontend.RuleExpr","Aesop.Options","Batteries.Linter.UnreachableTactic","Aesop.Frontend.Extension"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L183-L187","name":"Aesop.Frontend.TacticConfig.getRuleSet","line":183,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.getRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.getRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">getRuleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L165-L181","name":"Aesop.Frontend.TacticConfig.updateRuleSet","line":165,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.updateRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.updateRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">updateRuleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L128-L163","name":"Aesop.Frontend.TacticConfig.parse.addClause","line":128,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.parse.addClause","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.parse.addClause\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">parse</span>.<span class=\"name\">addClause</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceScript</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Aesop.tactic_clause</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L104-L126","name":"Aesop.Frontend.TacticConfig.parse.go","line":104,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.parse.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.parse.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">parse</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceScript</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clauses</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Aesop.tactic_clause</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L95-L163","name":"Aesop.Frontend.TacticConfig.parse","line":95,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.parse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.parse\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L91-L91","name":"Aesop.Frontend.TacticConfig.simpConfigSyntax?","line":91,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.simpConfigSyntax?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.simpConfigSyntax?\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">simpConfigSyntax?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L90-L90","name":"Aesop.Frontend.TacticConfig.simpConfig","line":90,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.simpConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.simpConfig\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">simpConfig</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L89-L89","name":"Aesop.Frontend.TacticConfig.options","line":89,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.options","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.options\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Options/Public.html#Aesop.Options\">Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L88-L88","name":"Aesop.Frontend.TacticConfig.enabledRuleSets","line":88,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.enabledRuleSets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.enabledRuleSets\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">enabledRuleSets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/RuleSet/Name.html#Aesop.RuleSetName\">RuleSetName</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L87-L87","name":"Aesop.Frontend.TacticConfig.erasedRules","line":87,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.erasedRules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.erasedRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">erasedRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Frontend/RuleExpr.html#Aesop.Frontend.RuleExpr\">RuleExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L86-L86","name":"Aesop.Frontend.TacticConfig.additionalRules","line":86,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.additionalRules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.additionalRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">additionalRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Frontend/RuleExpr.html#Aesop.Frontend.RuleExpr\">RuleExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L85-L85","name":"Aesop.Frontend.TacticConfig.mk","line":85,"kind":"ctor","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">additionalRules </span><span class=\"fn\">erasedRules</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Frontend/RuleExpr.html#Aesop.Frontend.RuleExpr\">RuleExpr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enabledRuleSets</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/RuleSet/Name.html#Aesop.RuleSetName\">RuleSetName</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Public.html#Aesop.Options\">Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpConfig</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpConfigSyntax?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\">TacticConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L85-L91","name":"Aesop.Frontend.TacticConfig","line":85,"kind":"structure","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.TacticConfig\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L82-L83","name":"Aesop.Frontend.elabSimpConfigCtx","line":82,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabSimpConfigCtx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabSimpConfigCtx\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">elabSimpConfigCtx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.ConfigCtx\">Lean.Meta.Simp.ConfigCtx</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L79-L80","name":"Aesop.Frontend.elabSimpConfig","line":79,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabSimpConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabSimpConfig\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">elabSimpConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L76-L77","name":"Aesop.Frontend.elabOptions","line":76,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabOptions\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">elabOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Aesop/Options/Public.html#Aesop.Options\">Options</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L68-L74","name":"Aesop.Frontend.elabConfigUnsafe","line":68,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabConfigUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.elabConfigUnsafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">elabConfigUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L58-L59","name":"Aesop.Frontend.Parser.aesopTactic?","line":58,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.aesopTactic?","doc":"`aesop <clause>*` tries to solve the current goal by applying a set of rules\nregistered with the `@[aesop]` attribute. See [its\nREADME](https://github.com/JLimperg/aesop#readme) for a tutorial and a\nreference.\n\nThe variant `aesop?` prints the proof it found as a `Try this` suggestion.\n\nClauses can be used to customise the behaviour of an Aesop call. Available\nclauses are:\n\n- `(add <phase> <priority> <builder> <rule>)` adds a rule. `<phase>` is\n  `unsafe`, `safe` or `norm`. `<priority>` is a percentage for unsafe rules and\n  an integer for safe and norm rules. `<rule>` is the name of a declaration or\n  local hypothesis. `<builder>` is the rule builder used to turn `<rule>` into\n  an Aesop rule. Example: `(add unsafe 50% apply Or.inl)`.\n- `(erase <rule>)` disables a globally registered Aesop rule. Example: `(erase\n  Aesop.BuiltinRules.assumption)`.\n- `(rule_sets := [<ruleset>,*])` enables or disables named sets of rules for\n  this Aesop call. Example: `(rule_sets := [-builtin, MyRuleSet])`.\n- `(config { <opt> := <value> })` adjusts Aesop's search options. See\n  `Aesop.Options`.\n- `(simp_config { <opt> := <value> })` adjusts options for Aesop's built-in\n  `simp` rule. The given options are directly passed to `simp`. For example,\n  `(simp_config := { zeta := false })` makes Aesop use\n  `simp (config := { zeta := false })`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.aesopTactic?\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">aesopTactic?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L29-L56","name":"Aesop.Frontend.Parser.aesopTactic","line":29,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.aesopTactic","doc":"`aesop <clause>*` tries to solve the current goal by applying a set of rules\nregistered with the `@[aesop]` attribute. See [its\nREADME](https://github.com/JLimperg/aesop#readme) for a tutorial and a\nreference.\n\nThe variant `aesop?` prints the proof it found as a `Try this` suggestion.\n\nClauses can be used to customise the behaviour of an Aesop call. Available\nclauses are:\n\n- `(add <phase> <priority> <builder> <rule>)` adds a rule. `<phase>` is\n  `unsafe`, `safe` or `norm`. `<priority>` is a percentage for unsafe rules and\n  an integer for safe and norm rules. `<rule>` is the name of a declaration or\n  local hypothesis. `<builder>` is the rule builder used to turn `<rule>` into\n  an Aesop rule. Example: `(add unsafe 50% apply Or.inl)`.\n- `(erase <rule>)` disables a globally registered Aesop rule. Example: `(erase\n  Aesop.BuiltinRules.assumption)`.\n- `(rule_sets := [<ruleset>,*])` enables or disables named sets of rules for\n  this Aesop call. Example: `(rule_sets := [-builtin, MyRuleSet])`.\n- `(config { <opt> := <value> })` adjusts Aesop's search options. See\n  `Aesop.Options`.\n- `(simp_config { <opt> := <value> })` adjusts options for Aesop's built-in\n  `simp` rule. The given options are directly passed to `simp`. For example,\n  `(simp_config := { zeta := false })` makes Aesop use\n  `simp (config := { zeta := false })`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.aesopTactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">aesopTactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L27-L27","name":"Aesop.Frontend.Parser.«tactic_clause(Simp_config:=_)»","line":27,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Simp_config:=_)»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Simp_config:=_)»\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">«tactic_clause(Simp_config:=_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L26-L26","name":"Aesop.Frontend.Parser.«tactic_clause(Config:=_)»","line":26,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Config:=_)»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Config:=_)»\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">«tactic_clause(Config:=_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L25-L25","name":"Aesop.Frontend.Parser.«tactic_clause(Rule_sets:=[_])»","line":25,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Rule_sets:=[_])»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Rule_sets:=[_])»\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">«tactic_clause(Rule_sets:=[_])»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L24-L24","name":"Aesop.Frontend.Parser.«tactic_clause(Erase_)»","line":24,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Erase_)»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Erase_)»\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">«tactic_clause(Erase_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L23-L23","name":"Aesop.Frontend.Parser.«tactic_clause(Add_)»","line":23,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Add_)»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.«tactic_clause(Add_)»\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">«tactic_clause(Add_)»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L21-L21","name":"Aesop.Frontend.Parser.ruleSetSpec","line":21,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.ruleSetSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.ruleSetSpec\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ruleSetSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L19-L19","name":"Lean.Parser.Category.Aesop.tactic_clause","line":19,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Lean.Parser.Category.Aesop.tactic_clause","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Lean.Parser.Category.Aesop.tactic_clause\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">Aesop</span>.<span class=\"name\">tactic_clause</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Frontend/Tactic.lean#L19-L19","name":"Aesop.Frontend.Parser.Aesop.tactic_clause.quot","line":19,"kind":"def","docLink":"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.Aesop.tactic_clause.quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Tactic.html#Aesop.Frontend.Parser.Aesop.tactic_clause.quot\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Aesop</span>.<span class=\"name\">tactic_clause</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}