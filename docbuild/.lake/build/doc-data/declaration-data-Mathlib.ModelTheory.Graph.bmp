{"name":"Mathlib.ModelTheory.Graph","instances":[{"typeNames":["Eq"],"name":"FirstOrder.Language.instDecidableEqGraphRel","className":"Decidable"},{"typeNames":["FirstOrder.Language.Functions"],"name":"FirstOrder.Language.instgraphIsRelational","className":"IsEmpty"},{"typeNames":["FirstOrder.Language.Relations"],"name":"FirstOrder.Language.graph.instSubsingleton","className":"Subsingleton"},{"typeNames":["FirstOrder.Language.Theory.simpleGraph"],"name":"FirstOrder.Language.simpleGraph_model","className":"FirstOrder.Language.Theory.Model"}],"imports":["Init","Mathlib.ModelTheory.Satisfiability","Mathlib.Combinatorics.SimpleGraph.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L113-L114","name":"FirstOrder.Language.Theory.simpleGraph_isSatisfiable","line":113,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph_isSatisfiable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph_isSatisfiable\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">simpleGraph_isSatisfiable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\">Theory.simpleGraph</a>.<a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsSatisfiable\">IsSatisfiable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L99-L111","name":"FirstOrder.Language.structure_simpleGraphOfStructure","line":99,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.structure_simpleGraphOfStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.structure_simpleGraphOfStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">structure_simpleGraphOfStructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">V</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\">Theory.simpleGraph</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure\">simpleGraphOfStructure</a> <span class=\"fn\">V</span>)</span>.<a href=\"./Mathlib/ModelTheory/Graph.html#SimpleGraph.structure\">structure</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L93-L97","name":"SimpleGraph.simpleGraphOfStructure","line":93,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Graph.html#SimpleGraph.simpleGraphOfStructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#SimpleGraph.simpleGraphOfStructure\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">simpleGraphOfStructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure\">FirstOrder.Language.simpleGraphOfStructure</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L81-L81","name":"FirstOrder.Language.simpleGraphOfStructure_adj","line":81,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure_adj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure_adj\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">simpleGraphOfStructure_adj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">V</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\">Theory.simpleGraph</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure\">simpleGraphOfStructure</a> <span class=\"fn\">V</span>)</span>.<a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">Adj</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.adj\">adj</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L80-L91","name":"FirstOrder.Language.simpleGraphOfStructure","line":80,"kind":"def","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure","doc":"Any model of the theory of simple graphs represents a simple graph. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraphOfStructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">simpleGraphOfStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">V</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\">Theory.simpleGraph</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L73-L77","name":"FirstOrder.Language.simpleGraph_model","line":73,"kind":"instance","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraph_model","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.simpleGraph_model\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">simpleGraph_model</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\">Theory.simpleGraph</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L66-L71","name":"FirstOrder.Language.Theory.simpleGraph_model_iff","line":66,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph_model_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph_model_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">simpleGraph_model_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\">Theory.simpleGraph</a> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(<a href=\"./Mathlib/Order/Defs/Unbundled.html#Irreflexive\">Irreflexive</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">y</span> : <span class=\"fn\">V</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.adj\">adj</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#Symmetric\">Symmetric</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">y</span> : <span class=\"fn\">V</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure.RelMap\">Structure.RelMap</a> <a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.adj\">adj</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L62-L64","name":"FirstOrder.Language.Theory.simpleGraph","line":62,"kind":"def","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph","doc":"The theory of simple graphs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.Theory.simpleGraph\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">simpleGraph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L57-L58","name":"FirstOrder.Language.graph.instSubsingleton","line":57,"kind":"instance","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph.instSubsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph.instSubsingleton\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">graph</span>.<span class=\"name\">instSubsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L51-L53","name":"SimpleGraph.structure","line":51,"kind":"def","docLink":"./Mathlib/ModelTheory/Graph.html#SimpleGraph.structure","doc":"Any simple graph can be thought of as a structure in the language of graphs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#SimpleGraph.structure\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">structure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">FirstOrder.Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L48-L49","name":"FirstOrder.Language.adj","line":48,"kind":"def","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.adj","doc":"The symbol representing the adjacency relation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.adj\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Relations\">Relations</a></span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L46-L46","name":"FirstOrder.Language.instgraphIsRelational","line":46,"kind":"instance","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.instgraphIsRelational","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.instgraphIsRelational\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">instgraphIsRelational</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\">Language.graph</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.IsRelational\">IsRelational</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L44-L46","name":"FirstOrder.Language.graph","line":44,"kind":"def","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph","doc":"The language consisting of a single relation representing adjacency. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graph\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">graph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L42-L42","name":"FirstOrder.Language.instDecidableEqGraphRel","line":42,"kind":"instance","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.instDecidableEqGraphRel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.instDecidableEqGraphRel\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">instDecidableEqGraphRel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graphRel\">graphRel</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L41-L41","name":"FirstOrder.Language.graphRel.adj","line":41,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graphRel.adj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graphRel.adj\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">graphRel</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graphRel\">graphRel</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Graph.lean#L38-L42","name":"FirstOrder.Language.graphRel","line":38,"kind":"inductive","docLink":"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graphRel","doc":"The type of relations for the language of graphs, consisting of a single binary relation `adj`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Graph.html#FirstOrder.Language.graphRel\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">graphRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"}]}