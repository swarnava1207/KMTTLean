{"name":"Mathlib.MeasureTheory.Measure.ProbabilityMeasure","instances":[{"typeNames":["MeasureTheory.ProbabilityMeasure"],"name":"MeasureTheory.ProbabilityMeasure.instInhabited","className":"Inhabited"},{"typeNames":["MeasureTheory.ProbabilityMeasure","MeasureTheory.Measure"],"name":"MeasureTheory.ProbabilityMeasure.instCoeMeasure","className":"Coe"},{"typeNames":["MeasureTheory.ProbabilityMeasure.toMeasure"],"name":"MeasureTheory.ProbabilityMeasure.instIsProbabilityMeasureToMeasure","className":"MeasureTheory.IsProbabilityMeasure"},{"typeNames":["MeasureTheory.ProbabilityMeasure","Set","NNReal"],"name":"MeasureTheory.ProbabilityMeasure.instFunLike","className":"DFunLike"},{"typeNames":["MeasureTheory.ProbabilityMeasure"],"name":"MeasureTheory.ProbabilityMeasure.instMeasurableSpace","className":"MeasurableSpace"},{"typeNames":["MeasureTheory.ProbabilityMeasure"],"name":"MeasureTheory.ProbabilityMeasure.instTopologicalSpace","className":"TopologicalSpace"},{"typeNames":["MeasureTheory.ProbabilityMeasure"],"name":"MeasureTheory.ProbabilityMeasure.t2Space","className":"T2Space"}],"imports":["Init","Mathlib.MeasureTheory.Measure.FiniteMeasure","Mathlib.MeasureTheory.Integral.Average","Mathlib.MeasureTheory.Measure.Prod"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L574-L580","name":"MeasureTheory.ProbabilityMeasure.continuous_map","line":574,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.continuous_map","doc":"If `f : X → Y` is continuous and `Y` is equipped with the Borel sigma algebra, then\nthe push-forward of probability measures `f* : ProbabilityMeasure X → ProbabilityMeasure Y`\nis continuous (in the topologies of convergence in distribution). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.continuous_map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">continuous_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_cont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L559-L572","name":"MeasureTheory.ProbabilityMeasure.tendsto_map_of_tendsto_of_continuous","line":559,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_map_of_tendsto_of_continuous","doc":"If `f : X → Y` is continuous and `Y` is equipped with the Borel sigma algebra, then\nconvergence (in distribution) of `ProbabilityMeasure`s on `X` implies convergence (in\ndistribution) of the push-forwards of these measures by `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_map_of_tendsto_of_continuous\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">tendsto_map_of_tendsto_of_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">νs</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">νs</span> <span class=\"fn\">L</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">ν</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_cont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">νs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">⋯</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L551-L554","name":"MeasureTheory.ProbabilityMeasure.map_apply","line":551,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_aemble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A_mble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">f_aemble</span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ν</span> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L545-L549","name":"MeasureTheory.ProbabilityMeasure.map_apply_of_aemeasurable","line":545,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map_apply_of_aemeasurable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map_apply_of_aemeasurable\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">map_apply_of_aemeasurable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_aemble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A_mble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">f_aemble</span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ν</span> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L538-L543","name":"MeasureTheory.ProbabilityMeasure.map_apply'","line":538,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map_apply'","doc":"Note that this is an equality of elements of `ℝ≥0∞`. See also\n`MeasureTheory.ProbabilityMeasure.map_apply` for the corresponding equality as elements of `ℝ≥0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map_apply'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">map_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_aemble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A_mble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">f_aemble</span>)</span></span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ν</span></span> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L535-L536","name":"MeasureTheory.ProbabilityMeasure.toMeasure_map","line":535,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure_map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toMeasure_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\">map</a></span> <span class=\"fn\">hf</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L528-L533","name":"MeasureTheory.ProbabilityMeasure.map","line":528,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map","doc":"The push-forward of a probability measure by a measurable function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_aemble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L505-L516","name":"MeasureTheory.FiniteMeasure.tendsto_normalize_iff_tendsto","line":505,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_normalize_iff_tendsto","doc":"The weak convergence of finite measures to a nonzero limit can be characterized by the weak\nconvergence of both their normalized versions (probability measures) and their total masses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_normalize_iff_tendsto\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">tendsto_normalize_iff_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L496-L503","name":"MeasureTheory.FiniteMeasure.tendsto_normalize_of_tendsto","line":496,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_normalize_of_tendsto","doc":"If finite measures themselves converge weakly to a nonzero limit measure, then their\nnormalized versions also converge weakly. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_normalize_of_tendsto\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">tendsto_normalize_of_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μs_lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L487-L494","name":"MeasureTheory.FiniteMeasure.tendsto_of_tendsto_normalize_testAgainstNN_of_tendsto_mass","line":487,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_of_tendsto_normalize_testAgainstNN_of_tendsto_mass","doc":"If the normalized versions of finite measures converge weakly and their total masses\nalso converge, then the finite measures themselves converge weakly. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_of_tendsto_normalize_testAgainstNN_of_tendsto_mass\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">tendsto_of_tendsto_normalize_testAgainstNN_of_tendsto_mass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μs_lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mass_lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L462-L485","name":"MeasureTheory.FiniteMeasure.tendsto_normalize_testAgainstNN_of_tendsto","line":462,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_normalize_testAgainstNN_of_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_normalize_testAgainstNN_of_tendsto\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">tendsto_normalize_testAgainstNN_of_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μs_lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">F</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L444-L460","name":"MeasureTheory.FiniteMeasure.tendsto_testAgainstNN_of_tendsto_normalize_testAgainstNN_of_tendsto_mass","line":444,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_testAgainstNN_of_tendsto_normalize_testAgainstNN_of_tendsto_mass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.tendsto_testAgainstNN_of_tendsto_normalize_testAgainstNN_of_tendsto_mass\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">tendsto_testAgainstNN_of_tendsto_normalize_testAgainstNN_of_tendsto_mass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μs_lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mass_lim</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L437-L439","name":"MeasureTheory.FiniteMeasure.normalize_testAgainstNN","line":437,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize_testAgainstNN","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize_testAgainstNN\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">normalize_testAgainstNN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L432-L435","name":"MeasureTheory.FiniteMeasure.testAgainstNN_eq_mass_mul","line":432,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN_eq_mass_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN_eq_mass_mul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">testAgainstNN_eq_mass_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L421-L428","name":"MeasureTheory.FiniteMeasure.average_eq_integral_normalize","line":421,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.average_eq_integral_normalize","doc":"Averaging with respect to a finite measure is the same as integrating against\n`MeasureTheory.FiniteMeasure.normalize`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.average_eq_integral_normalize\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">average_eq_integral_normalize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Average.html#MeasureTheory.average\">average</a> <span class=\"fn\">(↑<span class=\"fn\">μ</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">ω</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L413-L419","name":"ProbabilityMeasure.toFiniteMeasure_normalize_eq_self","line":413,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#ProbabilityMeasure.toFiniteMeasure_normalize_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#ProbabilityMeasure.toFiniteMeasure_normalize_eq_self\"><span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_normalize_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">MeasureTheory.ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L406-L411","name":"MeasureTheory.FiniteMeasure.toMeasure_normalize_eq_of_nonzero","line":406,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.toMeasure_normalize_eq_of_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.toMeasure_normalize_eq_of_nonzero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">toMeasure_normalize_eq_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L399-L404","name":"MeasureTheory.FiniteMeasure.normalize_eq_inv_mass_smul_of_nonzero","line":399,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize_eq_inv_mass_smul_of_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize_eq_inv_mass_smul_of_nonzero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">normalize_eq_inv_mass_smul_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L395-L397","name":"MeasureTheory.FiniteMeasure.normalize_eq_of_nonzero","line":395,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize_eq_of_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize_eq_of_nonzero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">normalize_eq_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonzero</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L389-L393","name":"MeasureTheory.FiniteMeasure.self_eq_mass_smul_normalize","line":389,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.self_eq_mass_smul_normalize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.self_eq_mass_smul_normalize\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">self_eq_mass_smul_normalize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L381-L387","name":"MeasureTheory.FiniteMeasure.self_eq_mass_mul_normalize","line":381,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.self_eq_mass_mul_normalize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.self_eq_mass_mul_normalize\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">self_eq_mass_mul_normalize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\">normalize</a></span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L368-L379","name":"MeasureTheory.FiniteMeasure.normalize","line":368,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize","doc":"Normalize a finite measure so that it becomes a probability measure, i.e., divide by the\ntotal mass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.FiniteMeasure.normalize\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">FiniteMeasure</span>.<span class=\"name\">normalize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L340-L343","name":"MeasureTheory.ProbabilityMeasure.t2Space","line":340,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.t2Space","doc":"On topological spaces where indicators of closed sets have decreasing approximating sequences of\ncontinuous functions (`HasOuterApproxClosed`), the topology of convergence in distribution of Borel\nprobability measures is Hausdorff (`T2Space`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.t2Space\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">t2Space</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/HasOuterApproxClosed.html#HasOuterApproxClosed\">HasOuterApproxClosed</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L325-L331","name":"MeasureTheory.ProbabilityMeasure.continuous_integral_boundedContinuousFunction","line":325,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.continuous_integral_boundedContinuousFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.continuous_integral_boundedContinuousFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">continuous_integral_boundedContinuousFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">↑<span class=\"fn\">μ</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L313-L323","name":"MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_integral_tendsto","line":313,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_integral_tendsto","doc":"The characterization of weak convergence of probability measures by the usual (defining)\ncondition that the integrals of every continuous bounded function converge to the integral of the\nfunction against the limit measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_integral_tendsto\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">tendsto_iff_forall_integral_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">ω</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span></span></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">ω</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">↑<span class=\"fn\">μ</span></span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L302-L311","name":"MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_lintegral_tendsto","line":302,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_lintegral_tendsto","doc":"A characterization of weak convergence of probability measures by the condition that the\nintegrals of every continuous bounded nonnegative function converge to the integral of the function\nagainst the limit measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_iff_forall_lintegral_tendsto\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">tendsto_iff_forall_lintegral_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ω</span>)</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">μs</span> <span class=\"fn\">i</span>)</span></span></span>)</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ω</span>)</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">↑<span class=\"fn\">μ</span></span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L297-L300","name":"MeasureTheory.ProbabilityMeasure.tendsto_nhds_iff_toFiniteMeasure_tendsto_nhds","line":297,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_nhds_iff_toFiniteMeasure_tendsto_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_nhds_iff_toFiniteMeasure_tendsto_nhds\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">tendsto_nhds_iff_toFiniteMeasure_tendsto_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μs</span> : <span class=\"fn\"><span class=\"fn\">δ</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ₀</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">μs</span> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">μ₀</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">μs</span>) <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">μ₀</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L294-L295","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure_embedding","line":294,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_embedding","doc":"**Alias** of `MeasureTheory.ProbabilityMeasure.toFiniteMeasure_isEmbedding`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_embedding\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_embedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L288-L292","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure_isEmbedding","line":288,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_isEmbedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_isEmbedding\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_isEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L283-L285","name":"MeasureTheory.ProbabilityMeasure.continuous_testAgainstNN_eval","line":283,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.continuous_testAgainstNN_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.continuous_testAgainstNN_eval\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">continuous_testAgainstNN_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L278-L279","name":"MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_continuous","line":278,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_continuous\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toWeakDualBCNN_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN\">toWeakDualBCNN</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L274-L276","name":"MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_apply","line":274,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toWeakDualBCNN_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN\">toWeakDualBCNN</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∫⁻</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">,</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ω</span>)</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Lebesgue.html#MeasureTheory.lintegral\">∂</a><span class=\"fn\">↑<span class=\"fn\">μ</span></span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toNNReal\">toNNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L270-L272","name":"MeasureTheory.ProbabilityMeasure.coe_toWeakDualBCNN","line":270,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coe_toWeakDualBCNN","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coe_toWeakDualBCNN\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coe_toWeakDualBCNN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN\">toWeakDualBCNN</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L265-L268","name":"MeasureTheory.ProbabilityMeasure.toWeakDualBCNN","line":265,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN","doc":"Probability measures yield elements of the `WeakDual` of bounded continuous nonnegative\nfunctions via `MeasureTheory.FiniteMeasure.testAgainstNN`, i.e., integration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toWeakDualBCNN\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toWeakDualBCNN</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/WeakDual.html#WeakDual\">WeakDual</a> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L261-L263","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure_continuous","line":261,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_continuous\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L255-L259","name":"MeasureTheory.ProbabilityMeasure.instTopologicalSpace","line":255,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instTopologicalSpace","doc":"The topology of weak convergence on `MeasureTheory.ProbabilityMeasure Ω`. This is inherited\n(induced) from the topology of weak convergence of finite measures via the inclusion\n`MeasureTheory.ProbabilityMeasure.toFiniteMeasure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instTopologicalSpace\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">instTopologicalSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L251-L253","name":"MeasureTheory.ProbabilityMeasure.testAgainstNN_lipschitz","line":251,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.testAgainstNN_lipschitz","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.testAgainstNN_lipschitz\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">testAgainstNN_lipschitz</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#OpensMeasurableSpace\">OpensMeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Bounded/Basic.html#BoundedContinuousFunction\">BoundedContinuousFunction</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.testAgainstNN\">testAgainstNN</a></span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L232-L245","name":"MeasureTheory.ProbabilityMeasure.measurable_prod","line":232,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.measurable_prod","doc":"The monoidal product is a measurable function from the product of probability spaces over\n`α` and `β` into the type of probability spaces over `α × β`. Lemma 4.1 of [A synthetic approach to\nMarkov kernels, conditional independence and theorems on sufficient statistics][fritz2020]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.measurable_prod\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">measurable_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">fun (<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">μ</span>.1</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.prod\">prod</a></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">μ</span>.2</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L224-L230","name":"MeasureTheory.ProbabilityMeasure.measurableSet_isProbabilityMeasure","line":224,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.measurableSet_isProbabilityMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.measurableSet_isProbabilityMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">measurableSet_isProbabilityMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Ω</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L221-L222","name":"MeasureTheory.ProbabilityMeasure.instMeasurableSpace","line":221,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instMeasurableSpace","doc":"The type of probability measures is a measurable space when equipped with the Giry monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instMeasurableSpace\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">instMeasurableSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L218-L219","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure_nonzero","line":218,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_nonzero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L214-L216","name":"MeasureTheory.ProbabilityMeasure.mass_toFiniteMeasure","line":214,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.mass_toFiniteMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.mass_toFiniteMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">mass_toFiniteMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span>.<a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure.mass\">mass</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L209-L212","name":"MeasureTheory.ProbabilityMeasure.eq_of_forall_apply_eq","line":209,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.eq_of_forall_apply_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.eq_of_forall_apply_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">eq_of_forall_apply_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ </span><span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ν</span> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ν</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L202-L202","name":"MeasureTheory.ProbabilityMeasure.eq_of_forall_toMeasure_apply_eq_iff","line":202,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.eq_of_forall_toMeasure_apply_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.eq_of_forall_toMeasure_apply_eq_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">eq_of_forall_toMeasure_apply_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ </span><span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ν</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ν</span></span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L202-L207","name":"MeasureTheory.ProbabilityMeasure.eq_of_forall_toMeasure_apply_eq","line":202,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.eq_of_forall_toMeasure_apply_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.eq_of_forall_toMeasure_apply_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">eq_of_forall_toMeasure_apply_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ </span><span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ν</span></span> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ν</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L195-L200","name":"MeasureTheory.ProbabilityMeasure.nonempty","line":195,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.nonempty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L192-L193","name":"MeasureTheory.ProbabilityMeasure.apply_le_one","line":192,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.apply_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.apply_le_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">apply_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L184-L190","name":"MeasureTheory.ProbabilityMeasure.tendsto_measure_iUnion_accumulate","line":184,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_measure_iUnion_accumulate","doc":"Continuity from below: the measure of the union of a sequence of (not necessarily measurable)\nsets is the limit of the measures of the partial unions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.tendsto_measure_iUnion_accumulate\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">tendsto_measure_iUnion_accumulate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Accumulate.html#Set.Accumulate\">Set.Accumulate</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">(⋃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L180-L182","name":"MeasureTheory.ProbabilityMeasure.apply_mono","line":180,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.apply_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.apply_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">apply_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L174-L178","name":"MeasureTheory.ProbabilityMeasure.null_iff_toMeasure_null","line":174,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.null_iff_toMeasure_null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.null_iff_toMeasure_null\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">null_iff_toMeasure_null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ν</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ν</span></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L168-L172","name":"MeasureTheory.ProbabilityMeasure.ennreal_coeFn_eq_coeFn_toMeasure","line":168,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.ennreal_coeFn_eq_coeFn_toMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.ennreal_coeFn_eq_coeFn_toMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">ennreal_coeFn_eq_coeFn_toMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">ν</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ν</span></span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L164-L166","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure_apply_eq_apply","line":164,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_apply_eq_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_apply_eq_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_apply_eq_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ν</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L160-L162","name":"MeasureTheory.ProbabilityMeasure.coeFn_comp_toFiniteMeasure_eq_coeFn","line":160,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_comp_toFiniteMeasure_eq_coeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_comp_toFiniteMeasure_eq_coeFn\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coeFn_comp_toFiniteMeasure_eq_coeFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">ν</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L156-L158","name":"MeasureTheory.ProbabilityMeasure.toMeasure_comp_toFiniteMeasure_eq_toMeasure","line":156,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure_comp_toFiniteMeasure_eq_toMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure_comp_toFiniteMeasure_eq_toMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toMeasure_comp_toFiniteMeasure_eq_toMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">ν</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L153-L154","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure_apply","line":153,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L152-L152","name":"MeasureTheory.ProbabilityMeasure.coeFn_toFiniteMeasure","line":152,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_toFiniteMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_toFiniteMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coeFn_toFiniteMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\">toFiniteMeasure</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L149-L150","name":"MeasureTheory.ProbabilityMeasure.toFiniteMeasure","line":149,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure","doc":"A probability measure can be interpreted as a finite measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toFiniteMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toFiniteMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/FiniteMeasure.html#MeasureTheory.FiniteMeasure\">FiniteMeasure</a> <span class=\"fn\">Ω</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L146-L147","name":"MeasureTheory.ProbabilityMeasure.coeFn_univ_ne_zero","line":146,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_univ_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_univ_ne_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coeFn_univ_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ν</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L142-L144","name":"MeasureTheory.ProbabilityMeasure.coeFn_univ","line":142,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_univ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coeFn_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ν</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L138-L140","name":"MeasureTheory.ProbabilityMeasure.mk_apply","line":138,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.mk_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.mk_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">mk_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⟨<span class=\"fn\">μ</span>, <span class=\"fn\">hμ</span>⟩</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toNNReal\">toNNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L135-L136","name":"MeasureTheory.ProbabilityMeasure.coeFn_mk","line":135,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_mk\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coeFn_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">⟨<span class=\"fn\">μ</span>, <span class=\"fn\">hμ</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toNNReal\">toNNReal</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L133-L133","name":"MeasureTheory.ProbabilityMeasure.coeFn_def","line":133,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coeFn_def\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coeFn_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">μ</span></span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toNNReal\">toNNReal</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L128-L131","name":"MeasureTheory.ProbabilityMeasure.instFunLike","line":128,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instFunLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instFunLike\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">instFunLike</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Ω</span>)</span> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L125-L126","name":"MeasureTheory.ProbabilityMeasure.toMeasure_injective","line":125,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure_injective\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toMeasure_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure\">toMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L122-L123","name":"MeasureTheory.ProbabilityMeasure.val_eq_to_measure","line":122,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.val_eq_to_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.val_eq_to_measure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">val_eq_to_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">ν</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">ν</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L120-L120","name":"MeasureTheory.ProbabilityMeasure.coe_mk","line":120,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.coe_mk\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">⟨<span class=\"fn\">μ</span>, <span class=\"fn\">hμ</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L117-L118","name":"MeasureTheory.ProbabilityMeasure.instIsProbabilityMeasureToMeasure","line":117,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instIsProbabilityMeasureToMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instIsProbabilityMeasureToMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">instIsProbabilityMeasureToMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">↑<span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L114-L115","name":"MeasureTheory.ProbabilityMeasure.instCoeMeasure","line":114,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instCoeMeasure","doc":"A probability measure can be interpreted as a measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instCoeMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">instCoeMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Ω</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L110-L112","name":"MeasureTheory.ProbabilityMeasure.toMeasure","line":110,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure","doc":"Coercion from `MeasureTheory.ProbabilityMeasure Ω` to `MeasureTheory.Measure Ω`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.toMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">toMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span></span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L107-L108","name":"MeasureTheory.ProbabilityMeasure.instInhabited","line":107,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure.instInhabited\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\">ProbabilityMeasure</a> <span class=\"fn\">Ω</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean#L98-L101","name":"MeasureTheory.ProbabilityMeasure","line":98,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure","doc":"Probability measures are defined as the subtype of measures that have the property of being\nprobability measures (i.e., their total mass is one). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/ProbabilityMeasure.html#MeasureTheory.ProbabilityMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ProbabilityMeasure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}