{"name":"Aesop.Tree.Data.ForwardRuleMatches","instances":[{"typeNames":["Aesop.ForwardRuleMatches"],"name":"Aesop.instInhabitedForwardRuleMatches","className":"Inhabited"},{"typeNames":["Aesop.ForwardRuleMatches"],"name":"Aesop.ForwardRuleMatches.instEmptyCollection","className":"EmptyCollection"}],"imports":["Init","Aesop.Forward.Match","Aesop.Rule"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L134-L138","name":"Aesop.ForwardRuleMatches.size","line":134,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.size","doc":"`O(n)` Number of matches in `ms`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.size\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L130-L132","name":"Aesop.ForwardRuleMatches.unsafeRules","line":130,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.unsafeRules","doc":"Get the unsafe rules corresponding to the unsafe rule matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.unsafeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">unsafeRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">UnsafeRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L125-L128","name":"Aesop.ForwardRuleMatches.foldUnsafeRules","line":125,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.foldUnsafeRules","doc":"Fold over the unsafe rules corresponding to the unsafe rule matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.foldUnsafeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">foldUnsafeRules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">UnsafeRule</a> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L121-L123","name":"Aesop.ForwardRuleMatches.safeRules","line":121,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.safeRules","doc":"Get the safe rules corresponding to the safe rule matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.safeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">safeRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRule\">SafeRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L116-L119","name":"Aesop.ForwardRuleMatches.foldSafeRules","line":116,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.foldSafeRules","doc":"Fold over the safe rules corresponding to the safe rule matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.foldSafeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">foldSafeRules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Aesop/Rule.html#Aesop.SafeRule\">SafeRule</a> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L112-L114","name":"Aesop.ForwardRuleMatches.normRules","line":112,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.normRules","doc":"Get the norm rules corresponding to the norm rule matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.normRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">normRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Rule.html#Aesop.NormRule\">NormRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L107-L110","name":"Aesop.ForwardRuleMatches.foldNormRules","line":107,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.foldNormRules","doc":"Fold over the norm rules corresponding to the norm rule matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.foldNormRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">foldNormRules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Aesop/Rule.html#Aesop.NormRule\">NormRule</a> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L83-L97","name":"Aesop.ForwardRuleMatches.update","line":83,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.update","doc":"Update the `ForwardRuleMatches` of a goal so that they are suitable for a\nchild goal. `newMatches` are new forward rule matches obtained by updating the\nold goal's `ForwardState` with new hypotheses from the new goal. `erasedHyps`\nare the hypotheses from the old goal that no longer appear in the new goal.\n`consumedForwardRuleMatch?` is a forward rule match that was applied as a rule\nto transform the old goal into the new goal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.update\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">update</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newMatches</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">erasedHyps</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">consumedForwardRuleMatch?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forwardRuleMatches</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L79-L81","name":"Aesop.ForwardRuleMatches.eraseHyp","line":79,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseHyp","doc":"Erase matches containing the hypothesis `h` from `ms`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">eraseHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L74-L77","name":"Aesop.ForwardRuleMatches.eraseHyps.go","line":74,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseHyps.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseHyps.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">eraseHyps</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L67-L77","name":"Aesop.ForwardRuleMatches.eraseHyps","line":67,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseHyps","doc":"Erase matches containing any of the hypotheses `hs` from `ms`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">eraseHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L63-L65","name":"Aesop.ForwardRuleMatches.ofArray","line":63,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.ofArray","doc":"Build a `ForwardRuleMatches` structure containing the matches from `ms`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.ofArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">ofArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L58-L61","name":"Aesop.ForwardRuleMatches.eraseMany","line":58,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseMany","doc":"Erase several complete matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.eraseMany\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">eraseMany</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms'</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L50-L56","name":"Aesop.ForwardRuleMatches.erase","line":50,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.erase","doc":"Erase a complete match. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.erase\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L45-L48","name":"Aesop.ForwardRuleMatches.insertMany","line":45,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.insertMany","doc":"Add several complete matches. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.insertMany\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">insertMany</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms'</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L37-L43","name":"Aesop.ForwardRuleMatches.insert","line":37,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.insert","doc":"Add a complete match. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.insert\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L34-L35","name":"Aesop.ForwardRuleMatches.instEmptyCollection","line":34,"kind":"instance","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L28-L32","name":"Aesop.ForwardRuleMatches.empty","line":28,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.empty","doc":"Empty `ForwardRuleMatches`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L24-L24","name":"Aesop.instInhabitedForwardRuleMatches","line":24,"kind":"instance","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.instInhabitedForwardRuleMatches","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.instInhabitedForwardRuleMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedForwardRuleMatches</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L23-L23","name":"Aesop.ForwardRuleMatches.unsafeMatches","line":23,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.unsafeMatches","doc":"Complete matches of unsafe rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.unsafeMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">unsafeMatches</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L21-L21","name":"Aesop.ForwardRuleMatches.safeMatches","line":21,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.safeMatches","doc":"Complete matches of safe rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.safeMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">safeMatches</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L19-L19","name":"Aesop.ForwardRuleMatches.normMatches","line":19,"kind":"def","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.normMatches","doc":"Complete matches of norm rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.normMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">normMatches</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L17-L17","name":"Aesop.ForwardRuleMatches.mk","line":17,"kind":"ctor","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">normMatches </span><span class=\"fn\">safeMatches </span><span class=\"fn\">unsafeMatches</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\">ForwardRuleMatches</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Tree/Data/ForwardRuleMatches.lean#L16-L24","name":"Aesop.ForwardRuleMatches","line":16,"kind":"structure","docLink":"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches","doc":"Sets of complete matches for norm/safe/unsafe rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Data/ForwardRuleMatches.html#Aesop.ForwardRuleMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatches</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}