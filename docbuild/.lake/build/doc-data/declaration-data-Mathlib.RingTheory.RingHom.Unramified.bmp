{"name":"Mathlib.RingTheory.RingHom.Unramified","instances":[],"imports":["Init","Mathlib.RingTheory.Unramified.Locus","Mathlib.RingTheory.LocalProperties.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L93-L109","name":"RingHom.FormallyUnramified.propertyIsLocal","line":93,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.propertyIsLocal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.propertyIsLocal\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">propertyIsLocal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.PropertyIsLocal\">PropertyIsLocal</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L78-L91","name":"RingHom.FormallyUnramified.ofLocalizationSpanTarget","line":78,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.ofLocalizationSpanTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.ofLocalizationSpanTarget\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">ofLocalizationSpanTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.OfLocalizationSpanTarget\">OfLocalizationSpanTarget</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L63-L76","name":"RingHom.FormallyUnramified.ofLocalizationPrime","line":63,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.ofLocalizationPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.ofLocalizationPrime\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">ofLocalizationPrime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.OfLocalizationPrime\">OfLocalizationPrime</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L57-L61","name":"RingHom.FormallyUnramified.holdsForLocalizationAway","line":57,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.holdsForLocalizationAway","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.holdsForLocalizationAway\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">holdsForLocalizationAway</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.HoldsForLocalizationAway\">HoldsForLocalizationAway</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L49-L55","name":"RingHom.FormallyUnramified.isStableUnderBaseChange","line":49,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.isStableUnderBaseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.isStableUnderBaseChange\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">isStableUnderBaseChange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.IsStableUnderBaseChange\">IsStableUnderBaseChange</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L42-L47","name":"RingHom.FormallyUnramified.respectsIso","line":42,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.respectsIso\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">respectsIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L36-L40","name":"RingHom.FormallyUnramified.stableUnderComposition","line":36,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.stableUnderComposition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified.stableUnderComposition\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span>.<span class=\"name\">stableUnderComposition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderComposition\">StableUnderComposition</a> <span class=\"fn\">fun {<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>] =&gt; <a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L28-L32","name":"RingHom.formallyUnramified_algebraMap","line":28,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.formallyUnramified_algebraMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.formallyUnramified_algebraMap\"><span class=\"name\">RingHom</span>.<span class=\"name\">formallyUnramified_algebraMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\">FormallyUnramified</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Unramified/Basic.html#Algebra.FormallyUnramified\">Algebra.FormallyUnramified</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Unramified.lean#L19-L26","name":"RingHom.FormallyUnramified","line":19,"kind":"def","docLink":"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified","doc":"A ring homomorphism `R →+* A` is formally unramified if `Ω[A⁄R]` is trivial.\nSee `Algebra.FormallyUnramified`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Unramified.html#RingHom.FormallyUnramified\"><span class=\"name\">RingHom</span>.<span class=\"name\">FormallyUnramified</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}