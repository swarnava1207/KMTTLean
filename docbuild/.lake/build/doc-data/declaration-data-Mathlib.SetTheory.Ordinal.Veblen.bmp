{"name":"Mathlib.SetTheory.Ordinal.Veblen","instances":[],"imports":["Init","Mathlib.SetTheory.Ordinal.FixedPoint"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L324-L331","name":"Ordinal.veblen_eq_veblen_iff","line":324,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_eq_veblen_iff","doc":"`veblen o₁ a ≤ veblen o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a = b`\n* `o₁ < o₂` and `a = veblen o₂ b`\n* `o₁ > o₂` and `veblen o₁ a = b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_eq_veblen_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_eq_veblen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L315-L322","name":"Ordinal.veblen_le_veblen_iff","line":315,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff","doc":"`veblen o₁ a ≤ veblen o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a ≤ b`\n* `o₁ < o₂` and `a ≤ veblen o₂ b`\n* `o₁ > o₂` and `veblen o₁ a ≤ b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_le_veblen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L306-L313","name":"Ordinal.veblen_lt_veblen_iff","line":306,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff","doc":"`veblen o₁ a < veblen o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a < b`\n* `o₁ < o₂` and `a < veblen o₂ b`\n* `o₁ > o₂` and `veblen o₁ a < b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_lt_veblen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L299-L304","name":"Ordinal.cmp_veblen","line":299,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cmp_veblen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span></span> with\n  | <a href=\"./Init/Data/Ord.html#Ordering.eq\">Ordering.eq</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.lt\">Ordering.lt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.gt\">Ordering.gt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L296-L297","name":"Ordinal.isNormal_veblen_zero","line":296,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblen_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L293-L294","name":"Ordinal.left_le_veblen","line":293,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">left_le_veblen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L289-L291","name":"Ordinal.veblen_zero_inj","line":289,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L285-L287","name":"Ordinal.veblen_zero_le_veblen_zero","line":285,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_le_veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_le_veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_le_veblen_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L281-L283","name":"Ordinal.veblen_zero_lt_veblen_zero","line":281,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_lt_veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_lt_veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_lt_veblen_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L278-L279","name":"Ordinal.veblen_zero_strictMono","line":278,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L274-L276","name":"Ordinal.veblen_pos","line":274,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L271-L272","name":"Ordinal.veblen_left_monotone","line":271,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_left_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_left_monotone\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_left_monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">x</span> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L268-L269","name":"Ordinal.right_le_veblen","line":268,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">right_le_veblen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L264-L266","name":"Ordinal.veblen_inj","line":264,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L261-L262","name":"Ordinal.veblen_injective","line":261,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_injective\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L257-L259","name":"Ordinal.veblen_le_veblen_iff_right","line":257,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_le_veblen_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_le_veblen_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L253-L255","name":"Ordinal.veblen_lt_veblen_iff_right","line":253,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_lt_veblen_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_lt_veblen_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L250-L251","name":"Ordinal.veblen_right_strictMono","line":250,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_right_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_right_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_right_strictMono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L247-L248","name":"Ordinal.veblen_succ","line":247,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.deriv\">deriv</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L244-L245","name":"Ordinal.veblen_veblen_of_lt","line":244,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_veblen_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_veblen_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_veblen_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₁</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L241-L242","name":"Ordinal.isNormal_veblen","line":241,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L238-L239","name":"Ordinal.veblen_of_ne_zero","line":238,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_of_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivFamily\">derivFamily</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L235-L236","name":"Ordinal.veblen_zero_apply","line":235,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero_apply\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L231-L233","name":"Ordinal.veblen_zero","line":231,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\">veblen</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L222-L229","name":"Ordinal.veblen","line":222,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen","doc":"`veblen o` is the `o`-th function in the Veblen hierarchy starting with `ω ^ ·`. That is:\n\n- `veblen 0 a = ω ^ a`.\n- `veblen o` for `o ≠ 0` enumerates the fixed points of `veblen o'` for `o' < o`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblen\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L206-L214","name":"Ordinal.veblenWith_eq_veblenWith_iff","line":206,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_eq_veblenWith_iff","doc":"`veblenWith f o₁ a = veblenWith f o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a = b`\n* `o₁ < o₂` and `a = veblenWith f o₂ b`\n* `o₁ > o₂` and `veblenWith f o₁ a = b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_eq_veblenWith_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_eq_veblenWith_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L196-L204","name":"Ordinal.veblenWith_le_veblenWith_iff","line":196,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff","doc":"`veblenWith f o₁ a ≤ veblenWith f o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a ≤ b`\n* `o₁ < o₂` and `a ≤ veblenWith f o₂ b`\n* `o₁ > o₂` and `veblenWith f o₁ a ≤ b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_le_veblenWith_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L186-L194","name":"Ordinal.veblenWith_lt_veblenWith_iff","line":186,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff","doc":"`veblenWith f o₁ a < veblenWith f o₂ b` iff one of the following holds:\n* `o₁ = o₂` and `a < b`\n* `o₁ < o₂` and `a < veblenWith f o₂ b`\n* `o₁ > o₂` and `veblenWith f o₁ a < b` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_lt_veblenWith_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">o₂</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L174-L184","name":"Ordinal.cmp_veblenWith","line":174,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblenWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.cmp_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">cmp_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂ </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span></span> with\n  | <a href=\"./Init/Data/Ord.html#Ordering.eq\">Ordering.eq</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.lt\">Ordering.lt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">b</span>)</span></span>\n  | <a href=\"./Init/Data/Ord.html#Ordering.gt\">Ordering.gt</a> =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Ordering/Basic.html#cmp\">cmp</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L155-L172","name":"Ordinal.IsNormal.veblenWith_zero","line":155,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">veblenWith_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L151-L153","name":"Ordinal.left_le_veblenWith","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblenWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.left_le_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">left_le_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L148-L149","name":"Ordinal.veblenWith_zero_inj","line":148,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L144-L146","name":"Ordinal.veblenWith_zero_le_veblenWith_zero","line":144,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_le_veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_le_veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_le_veblenWith_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L140-L142","name":"Ordinal.veblenWith_zero_lt_veblenWith_zero","line":140,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_lt_veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_lt_veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_lt_veblenWith_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L134-L138","name":"Ordinal.veblenWith_zero_strictMono","line":134,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L125-L132","name":"Ordinal.veblenWith_pos","line":125,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L119-L123","name":"Ordinal.veblenWith_left_monotone","line":119,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_left_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_left_monotone\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_left_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L116-L117","name":"Ordinal.right_le_veblenWith","line":116,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblenWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.right_le_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">right_le_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L112-L114","name":"Ordinal.veblenWith_inj","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_inj\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L109-L110","name":"Ordinal.veblenWith_injective","line":109,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_injective\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L105-L107","name":"Ordinal.veblenWith_le_veblenWith_iff_right","line":105,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_le_veblenWith_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_le_veblenWith_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L101-L103","name":"Ordinal.veblenWith_lt_veblenWith_iff_right","line":101,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_lt_veblenWith_iff_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_lt_veblenWith_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L98-L99","name":"Ordinal.veblenWith_right_strictMono","line":98,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_right_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_right_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_right_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L84-L96","name":"Ordinal.veblenWith_succ","line":84,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.deriv\">deriv</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L77-L82","name":"Ordinal.veblenWith_veblenWith_of_lt","line":77,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_veblenWith_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_veblenWith_of_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_veblenWith_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₁</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o₂</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L75-L75","name":"Ordinal.IsNormal.veblenWith","line":75,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith","doc":"**Alias** of `Ordinal.isNormal_veblenWith`.\n\n---\n\n`veblenWith f o` is always normal whenever `f` is. See `isNormal_veblenWith'` for a version\nwhich does not assume `IsNormal f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.IsNormal.veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L68-L73","name":"Ordinal.isNormal_veblenWith","line":68,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith","doc":"`veblenWith f o` is always normal whenever `f` is. See `isNormal_veblenWith'` for a version\nwhich does not assume `IsNormal f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblenWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L59-L63","name":"Ordinal.isNormal_veblenWith'","line":59,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith'","doc":"`veblenWith f o` is always normal for `o ≠ 0`. See `isNormal_veblenWith` for a version which\nassumes `IsNormal f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.isNormal_veblenWith'\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_veblenWith'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L55-L57","name":"Ordinal.veblenWith_of_ne_zero","line":55,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_of_ne_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/FixedPoint.html#Ordinal.derivFamily\">derivFamily</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L51-L53","name":"Ordinal.veblenWith_zero","line":51,"kind":"theorem","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\">veblenWith</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Ordinal/Veblen.lean#L39-L49","name":"Ordinal.veblenWith","line":39,"kind":"def","docLink":"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith","doc":"`veblenWith f o` is the `o`-th function in the Veblen hierarchy starting with `f`. This is\ndefined so that\n\n- `veblenWith f 0 = f`.\n- `veblenWith f o` for `o ≠ 0` enumerates the common fixed points of `veblenWith f o'` over all\n  `o' < o`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Ordinal/Veblen.html#Ordinal.veblenWith\"><span class=\"name\">Ordinal</span>.<span class=\"name\">veblenWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"}]}