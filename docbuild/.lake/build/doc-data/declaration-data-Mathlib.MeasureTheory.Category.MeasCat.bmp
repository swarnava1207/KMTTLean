{"name":"Mathlib.MeasureTheory.Category.MeasCat","instances":[{"typeNames":["MeasCat","_builtin_typeu"],"name":"MeasCat.instCoeSortType","className":"CoeSort"},{"typeNames":["MeasCat"],"name":"MeasCat.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["Subtype","MeasCat.carrier","MeasCat.carrier"],"name":"MeasCat.instFunLikeSubtypeForallCarrierMeasurable","className":"DFunLike"},{"typeNames":["MeasCat"],"name":"MeasCat.instConcreteCategorySubtypeForallCarrierMeasurable","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["MeasCat"],"name":"MeasCat.instInhabited","className":"Inhabited"},{"typeNames":["TopCat","MeasCat"],"name":"TopCat.hasForgetToMeasCat","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.MeasureTheory.Measure.GiryMonad","Mathlib.CategoryTheory.Monad.Algebra","Mathlib.Topology.Category.TopCat.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L119-L121","name":"Borel","line":119,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#Borel","doc":"The Borel functor, the canonical embedding of topological spaces into measurable spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#Borel\"><span class=\"name\">Borel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L115-L117","name":"TopCat.hasForgetToMeasCat","line":115,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#TopCat.hasForgetToMeasCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#TopCat.hasForgetToMeasCat\"><span class=\"name\">TopCat</span>.<span class=\"name\">hasForgetToMeasCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L102-L111","name":"MeasCat.Integral","line":102,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Integral","doc":"An example for an algebra on `Measure`: the nonnegative Lebesgue integral is a hom, behaving\nnicely under the monad operations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Integral\"><span class=\"name\">MeasCat</span>.<span class=\"name\">Integral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Giry\">Giry</a>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">Algebra</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L89-L100","name":"MeasCat.Giry","line":89,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Giry","doc":"The Giry monad, i.e. the monadic structure associated with `Measure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Giry\"><span class=\"name\">MeasCat</span>.<span class=\"name\">Giry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Basic.html#CategoryTheory.Monad\">CategoryTheory.Monad</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L74-L87","name":"MeasCat.Measure","line":74,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Measure","doc":"`Measure X` is the measurable space of measures over the measurable space `X`. It is the\nweakest measurable space, s.t. `fun μ ↦ μ s` is measurable for all measurable sets `s` in `X`. An\nimportant purpose is to assign a monadic structure on it, the Giry monad. In the Giry monad,\nthe pure values are the Dirac measure, and the bind operation maps to the integral:\n`(μ >>= ν) s = ∫ x. (ν x) s dμ`.\n\nIn probability theory, the `MeasCat`-morphisms `X → Prob X` are (sub-)Markov kernels (here `Prob` is\nthe restriction of `Measure` to (sub-)probability space.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.Measure\"><span class=\"name\">MeasCat</span>.<span class=\"name\">Measure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L71-L72","name":"MeasCat.instInhabited","line":71,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instInhabited\"><span class=\"name\">MeasCat</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L67-L69","name":"MeasCat.instConcreteCategorySubtypeForallCarrierMeasurable","line":67,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instConcreteCategorySubtypeForallCarrierMeasurable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instConcreteCategorySubtypeForallCarrierMeasurable\"><span class=\"name\">MeasCat</span>.<span class=\"name\">instConcreteCategorySubtypeForallCarrierMeasurable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a>) =&gt; <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L63-L65","name":"MeasCat.instFunLikeSubtypeForallCarrierMeasurable","line":63,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instFunLikeSubtypeForallCarrierMeasurable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instFunLikeSubtypeForallCarrierMeasurable\"><span class=\"name\">MeasCat</span>.<span class=\"name\">instFunLikeSubtypeForallCarrierMeasurable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L58-L61","name":"MeasCat.instLargeCategory","line":58,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instLargeCategory\"><span class=\"name\">MeasCat</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L55-L56","name":"MeasCat.coe_of","line":55,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.coe_of\"><span class=\"name\">MeasCat</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.of\">of</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L51-L53","name":"MeasCat.of","line":51,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.of","doc":"Construct a bundled `MeasCat` from the underlying type and the typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.of\"><span class=\"name\">MeasCat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">ms</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L48-L49","name":"MeasCat.instCoeSortType","line":48,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.instCoeSortType\"><span class=\"name\">MeasCat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L42-L42","name":"MeasCat.str","line":42,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.str\"><span class=\"name\">MeasCat</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L41-L41","name":"MeasCat.carrier","line":41,"kind":"def","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier","doc":"The underlying measurable space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.carrier\"><span class=\"name\">MeasCat</span>.<span class=\"name\">carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L39-L39","name":"MeasCat.mk","line":39,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat.mk\"><span class=\"name\">MeasCat</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">carrier</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">str</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">carrier</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\">MeasCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Category/MeasCat.lean#L38-L42","name":"MeasCat","line":38,"kind":"structure","docLink":"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat","doc":"The category of measurable spaces and measurable functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Category/MeasCat.html#MeasCat\"><span class=\"name\">MeasCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}