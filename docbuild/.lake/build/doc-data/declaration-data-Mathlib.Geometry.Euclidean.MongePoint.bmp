{"name":"Mathlib.Geometry.Euclidean.MongePoint","instances":[{"typeNames":["Real","Subtype"],"name":"Affine.Simplex.finiteDimensional_direction_altitude","className":"Module.Finite"}],"imports":["Init","Mathlib.Geometry.Euclidean.Circumcenter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L703-L727","name":"EuclideanGeometry.OrthocentricSystem.eq_insert_orthocenter","line":703,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem.eq_insert_orthocenter","doc":"Given any triangle in an orthocentric system, the fourth point is\nits orthocenter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem.eq_insert_orthocenter\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">OrthocentricSystem</span>.<span class=\"name\">eq_insert_orthocenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem\">OrthocentricSystem</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Affine.Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L684-L701","name":"EuclideanGeometry.OrthocentricSystem.exists_circumradius_eq","line":684,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem.exists_circumradius_eq","doc":"All triangles in an orthocentric system have the same circumradius. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem.exists_circumradius_eq\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">OrthocentricSystem</span>.<span class=\"name\">exists_circumradius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem\">OrthocentricSystem</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Affine.Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span> → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumradius\">Affine.Simplex.circumradius</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L667-L682","name":"EuclideanGeometry.affineSpan_of_orthocentricSystem","line":667,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.affineSpan_of_orthocentricSystem","doc":"Any three points in an orthocentric system span the same subspace\nas the whole orthocentric system. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.affineSpan_of_orthocentricSystem\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">affineSpan_of_orthocentricSystem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem\">OrthocentricSystem</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hps</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpi</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L659-L665","name":"EuclideanGeometry.OrthocentricSystem.affineIndependent","line":659,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem.affineIndependent","doc":"Any three points in an orthocentric system are affinely independent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem.affineIndependent\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">OrthocentricSystem</span>.<span class=\"name\">affineIndependent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem\">OrthocentricSystem</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hps</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpi</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#AffineIndependent\">AffineIndependent</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L628-L657","name":"EuclideanGeometry.exists_dist_eq_circumradius_of_subset_insert_orthocenter","line":628,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.exists_dist_eq_circumradius_of_subset_insert_orthocenter","doc":"For any three points in an orthocentric system generated by\ntriangle `t`, there is a point in the subspace spanned by the triangle\nfrom which the distance of all those three points equals the circumradius. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.exists_dist_eq_circumradius_of_subset_insert_orthocenter\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">exists_dist_eq_circumradius_of_subset_insert_orthocenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Affine.Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hps</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpi</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">c</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span>, <span class=\"fn\">∀ <span class=\"fn\">p₁</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">p₁</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumradius\">Affine.Simplex.circumradius</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L587-L626","name":"EuclideanGeometry.exists_of_range_subset_orthocentricSystem","line":587,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.exists_of_range_subset_orthocentricSystem","doc":"This is an auxiliary lemma giving information about the relation\nof two triangles in an orthocentric system; it abstracts some\nreasoning, with no geometric content, that is common to some other\nlemmas.  Suppose the orthocentric system is generated by triangle `t`,\nand we are given three points `p` in the orthocentric system.  Then\neither we can find indices `i₁`, `i₂` and `i₃` for `p` such that `p\ni₁` is the orthocenter of `t` and `p i₂` and `p i₃` are points `j₂`\nand `j₃` of `t`, or `p` has the same points as `t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.exists_of_range_subset_orthocentricSystem\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">exists_of_range_subset_orthocentricSystem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Affine.Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hps</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpi</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">i₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>) (<span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>) (<span class=\"fn\">i₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>) (<span class=\"fn\">j₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>) (<span class=\"fn\">j₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>),\n    <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">i₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span> <a href=\"./Init/Prelude.html#And\">∧</a>           <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>), <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i₁</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i₂</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i₃</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>             <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">j₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₃</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i₃</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L581-L585","name":"EuclideanGeometry.OrthocentricSystem","line":581,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem","doc":"Four points form an orthocentric system if they consist of the\nvertices of a triangle and its orthocenter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#EuclideanGeometry.OrthocentricSystem\"><span class=\"name\">EuclideanGeometry</span>.<span class=\"name\">OrthocentricSystem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L556-L568","name":"Affine.Triangle.orthocenter_replace_orthocenter_eq_point","line":556,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_replace_orthocenter_eq_point","doc":"Suppose we are given a triangle `t₁`, and replace one of its\nvertices by its orthocenter, yielding triangle `t₂` (with vertices not\nnecessarily listed in the same order).  Then the orthocenter of `t₂`\nis the vertex of `t₁` that was replaced. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_replace_orthocenter_eq_point\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter_replace_orthocenter_eq_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₁ </span><span class=\"fn\">t₂</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂ </span><span class=\"fn\">i₃ </span><span class=\"fn\">j₁ </span><span class=\"fn\">j₂ </span><span class=\"fn\">j₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi₁₂</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi₁₃</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi₂₃</span> : <span class=\"fn\">i₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj₁₂</span> : <span class=\"fn\">j₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj₁₃</span> : <span class=\"fn\">j₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj₂₃</span> : <span class=\"fn\">j₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L511-L554","name":"Affine.Triangle.altitude_replace_orthocenter_eq_affineSpan","line":511,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.altitude_replace_orthocenter_eq_affineSpan","doc":"Suppose we are given a triangle `t₁`, and replace one of its\nvertices by its orthocenter, yielding triangle `t₂` (with vertices not\nnecessarily listed in the same order).  Then an altitude of `t₂` from\na vertex that was not replaced is the corresponding side of `t₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.altitude_replace_orthocenter_eq_affineSpan\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">altitude_replace_orthocenter_eq_affineSpan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₁ </span><span class=\"fn\">t₂</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂ </span><span class=\"fn\">i₃ </span><span class=\"fn\">j₁ </span><span class=\"fn\">j₂ </span><span class=\"fn\">j₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi₁₂</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi₁₃</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi₂₃</span> : <span class=\"fn\">i₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj₁₂</span> : <span class=\"fn\">j₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj₁₃</span> : <span class=\"fn\">j₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj₂₃</span> : <span class=\"fn\">j₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">j₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">Simplex.altitude</a> <span class=\"fn\">t₂</span> <span class=\"fn\">j₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₁</span></span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₂</span></span><a href=\"./Init/Core.html#Insert.insert\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L503-L509","name":"Affine.Triangle.affineSpan_orthocenter_point_le_altitude","line":503,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.affineSpan_orthocenter_point_le_altitude","doc":"The affine span of the orthocenter and a vertex is contained in\nthe altitude. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.affineSpan_orthocenter_point_le_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">affineSpan_orthocenter_point_le_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i</span></span><a href=\"./Init/Core.html#Insert.insert\">}</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">Simplex.altitude</a> <span class=\"fn\">t</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L492-L501","name":"Affine.Triangle.dist_orthocenter_reflection_circumcenter_finset","line":492,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.dist_orthocenter_reflection_circumcenter_finset","doc":"The distance from the orthocenter to the reflection of the\ncircumcenter in a side equals the circumradius, variant using a\n`Finset`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.dist_orthocenter_reflection_circumcenter_finset\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">dist_orthocenter_reflection_circumcenter_finset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Geometry/Euclidean/Basic.html#EuclideanGeometry.reflection\">EuclideanGeometry.reflection</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> (<span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">i₁</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">i₂</span><a href=\"./Init/Core.html#Insert.insert\">}</a></span>))</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumcenter\">Simplex.circumcenter</a> <span class=\"fn\">t</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumradius\">Simplex.circumradius</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L473-L490","name":"Affine.Triangle.dist_orthocenter_reflection_circumcenter","line":473,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.dist_orthocenter_reflection_circumcenter","doc":"The distance from the orthocenter to the reflection of the\ncircumcenter in a side equals the circumradius. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.dist_orthocenter_reflection_circumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">dist_orthocenter_reflection_circumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Geometry/Euclidean/Basic.html#EuclideanGeometry.reflection\">EuclideanGeometry.reflection</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> (<span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">i₁</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">i₂</span><a href=\"./Init/Core.html#Insert.insert\">}</a>))</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumcenter\">Simplex.circumcenter</a> <span class=\"fn\">t</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumradius\">Simplex.circumradius</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L457-L471","name":"Affine.Triangle.eq_orthocenter_of_forall_mem_altitude","line":457,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.eq_orthocenter_of_forall_mem_altitude","doc":"The orthocenter is the only point lying in any two of the\naltitudes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.eq_orthocenter_of_forall_mem_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">eq_orthocenter_of_forall_mem_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁₂</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">Simplex.altitude</a> <span class=\"fn\">t</span> <span class=\"fn\">i₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">Simplex.altitude</a> <span class=\"fn\">t</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L449-L455","name":"Affine.Triangle.orthocenter_mem_altitude","line":449,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_mem_altitude","doc":"The orthocenter lies in the altitudes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_mem_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter_mem_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">Simplex.altitude</a> <span class=\"fn\">t</span> <span class=\"fn\">i₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L439-L447","name":"Affine.Triangle.altitude_eq_mongePlane","line":439,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.altitude_eq_mongePlane","doc":"In the case of a triangle, altitudes are the same thing as Monge\nplanes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.altitude_eq_mongePlane\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">altitude_eq_mongePlane</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂ </span><span class=\"fn\">i₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁₂</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁₃</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂₃</span> : <span class=\"fn\">i₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₃</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">Simplex.altitude</a> <span class=\"fn\">t</span> <span class=\"fn\">i₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">Simplex.mongePlane</a> <span class=\"fn\">t</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L434-L437","name":"Affine.Triangle.orthocenter_eq_of_range_eq","line":434,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_eq_of_range_eq","doc":"Two triangles with the same points have the same orthocenter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_eq_of_range_eq\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter_eq_of_range_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₁ </span><span class=\"fn\">t₂</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t₁</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t₂</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L429-L432","name":"Affine.Triangle.orthocenter_mem_affineSpan","line":429,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_mem_affineSpan","doc":"The orthocenter lies in the affine span. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_mem_affineSpan\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter_mem_affineSpan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L420-L427","name":"Affine.Triangle.orthocenter_eq_smul_vsub_vadd_circumcenter","line":420,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_eq_smul_vsub_vadd_circumcenter","doc":"The position of the orthocenter in relation to the circumcenter\nand centroid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_eq_smul_vsub_vadd_circumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter_eq_smul_vsub_vadd_circumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> (<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.centroid\">Finset.centroid</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumcenter\">Simplex.circumcenter</a> <span class=\"fn\">t</span></span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumcenter\">Simplex.circumcenter</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L416-L418","name":"Affine.Triangle.orthocenter_eq_mongePoint","line":416,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_eq_mongePoint","doc":"The orthocenter equals the Monge point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter_eq_mongePoint\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter_eq_mongePoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\">orthocenter</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">Simplex.mongePoint</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L410-L414","name":"Affine.Triangle.orthocenter","line":410,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter","doc":"The orthocenter of a triangle is the intersection of its\naltitudes.  It is defined here as the 2-dimensional case of the\nMonge point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Triangle.orthocenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Triangle</span>.<span class=\"name\">orthocenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Triangle\">Triangle</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L367-L399","name":"Affine.Simplex.affineSpan_pair_eq_altitude_iff","line":367,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.affineSpan_pair_eq_altitude_iff","doc":"A line through a vertex is the altitude through that vertex if and\nonly if it is orthogonal to the opposite face. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.affineSpan_pair_eq_altitude_iff\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">affineSpan_pair_eq_altitude_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">P</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">p</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i</span></span><a href=\"./Init/Core.html#Insert.insert\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">p</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">i</span>)</span></span>))</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span><a href=\"./Mathlib/Analysis/InnerProductSpace/Orthogonal.html#Submodule.orthogonal\">ᗮ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L354-L365","name":"Affine.Simplex.finrank_direction_altitude","line":354,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.finrank_direction_altitude","doc":"An altitude is one-dimensional (i.e., a line). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.finrank_direction_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">finrank_direction_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L348-L352","name":"Affine.Simplex.finiteDimensional_direction_altitude","line":348,"kind":"instance","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.finiteDimensional_direction_altitude","doc":"An altitude is finite-dimensional. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.finiteDimensional_direction_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">finiteDimensional_direction_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L339-L344","name":"Affine.Simplex.vectorSpan_isOrtho_altitude_direction","line":339,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.vectorSpan_isOrtho_altitude_direction","doc":"The vector span of the opposite face lies in the direction\northogonal to an altitude. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.vectorSpan_isOrtho_altitude_direction\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">vectorSpan_isOrtho_altitude_direction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#vectorSpan\">vectorSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">i</span>)</span></span>)</span> <a href=\"./Mathlib/Analysis/InnerProductSpace/Orthogonal.html#Submodule.IsOrtho\">⟂</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L331-L337","name":"Affine.Simplex.direction_altitude","line":331,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.direction_altitude","doc":"The direction of an altitude. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.direction_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">direction_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#vectorSpan\">vectorSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">i</span>)</span></span>))</span><a href=\"./Mathlib/Analysis/InnerProductSpace/Orthogonal.html#Submodule.orthogonal\">ᗮ</a> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#vectorSpan\">vectorSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L326-L329","name":"Affine.Simplex.mem_altitude","line":326,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mem_altitude","doc":"A vertex lies in the corresponding altitude. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mem_altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mem_altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L319-L324","name":"Affine.Simplex.altitude_def","line":319,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude_def","doc":"The definition of an altitude. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude_def\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">altitude_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\">altitude</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.mk'\">AffineSubspace.mk'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">i</span>)</span></span>))</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span><a href=\"./Mathlib/Analysis/InnerProductSpace/Orthogonal.html#Submodule.orthogonal\">ᗮ</a></span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a>     <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L313-L317","name":"Affine.Simplex.altitude","line":313,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude","doc":"An altitude of a simplex is the line that passes through a vertex\nand is orthogonal to the opposite face. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.altitude\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">altitude</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace\">AffineSubspace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L280-L311","name":"Affine.Simplex.eq_mongePoint_of_forall_mem_mongePlane","line":280,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.eq_mongePoint_of_forall_mem_mongePlane","doc":"The Monge point is the only point in all the Monge planes from any\none vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.eq_mongePoint_of_forall_mem_mongePlane\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">eq_mongePoint_of_forall_mem_mongePlane</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">P</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>), <span class=\"fn\"><span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span> → <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">mongePlane</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L273-L278","name":"Affine.Simplex.direction_mongePlane","line":273,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.direction_mongePlane","doc":"The direction of a Monge plane. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.direction_mongePlane\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">direction_mongePlane</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">mongePlane</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span>)</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.direction\">direction</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₁</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₂</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span><a href=\"./Mathlib/Analysis/InnerProductSpace/Orthogonal.html#Submodule.orthogonal\">ᗮ</a> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#vectorSpan\">vectorSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L263-L271","name":"Affine.Simplex.mongePoint_mem_mongePlane","line":263,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_mem_mongePlane","doc":"The Monge point lies in the Monge planes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_mem_mongePlane\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint_mem_mongePlane</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">mongePlane</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L250-L261","name":"Affine.Simplex.mongePlane_comm","line":250,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane_comm","doc":"The Monge plane associated with vertices `i₁` and `i₂` equals that\nassociated with `i₂` and `i₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane_comm\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePlane_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">mongePlane</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">mongePlane</a></span> <span class=\"fn\">i₂</span> <span class=\"fn\">i₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L242-L248","name":"Affine.Simplex.mongePlane_def","line":242,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane_def","doc":"The definition of a Monge plane. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane_def\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePlane_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\">mongePlane</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace.mk'\">AffineSubspace.mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.centroid\">Finset.centroid</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">i₁</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">i₂</span><a href=\"./Init/Core.html#Insert.insert\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₁</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₂</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span><a href=\"./Mathlib/Analysis/InnerProductSpace/Orthogonal.html#Submodule.orthogonal\">ᗮ</a></span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a>     <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L233-L240","name":"Affine.Simplex.mongePlane","line":233,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane","doc":"A Monge plane of an (n+2)-simplex is the (n+1)-dimensional affine\nsubspace of the subspace spanned by the simplex that passes through\nthe centroid of an n-dimensional face and is orthogonal to the\nopposite edge (in 2 dimensions, this is the same as an altitude).\nThis definition is only intended to be used when `i₁ ≠ i₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePlane\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePlane</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#AffineSubspace\">AffineSubspace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L198-L231","name":"Affine.Simplex.inner_mongePoint_vsub_face_centroid_vsub","line":198,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.inner_mongePoint_vsub_face_centroid_vsub","doc":"The Monge point of an (n+2)-simplex, minus the centroid of an\nn-dimensional face, is orthogonal to the difference of the two\nvertices not in that face. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.inner_mongePoint_vsub_face_centroid_vsub\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">inner_mongePoint_vsub_face_centroid_vsub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#Inner.inner\">inner</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.centroid\">Finset.centroid</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">i₁</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">i₂</span><a href=\"./Init/Core.html#Insert.insert\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span>) (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₁</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span> <span class=\"fn\">i₂</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L187-L196","name":"Affine.Simplex.mongePoint_vsub_face_centroid_eq_weightedVSub_of_pointsWithCircumcenter","line":187,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_vsub_face_centroid_eq_weightedVSub_of_pointsWithCircumcenter","doc":"The Monge point of an (n+2)-simplex, minus the centroid of an\nn-dimensional face, in terms of `pointsWithCircumcenter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_vsub_face_centroid_eq_weightedVSub_of_pointsWithCircumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint_vsub_face_centroid_eq_weightedVSub_of_pointsWithCircumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.centroid\">Finset.centroid</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">i₁</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">i₂</span><a href=\"./Init/Core.html#Insert.insert\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.weightedVSub\">weightedVSub</a></span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.pointsWithCircumcenter\">pointsWithCircumcenter</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter\">mongePointVSubFaceCentroidWeightsWithCircumcenter</a> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L178-L185","name":"Affine.Simplex.sum_mongePointVSubFaceCentroidWeightsWithCircumcenter","line":178,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.sum_mongePointVSubFaceCentroidWeightsWithCircumcenter","doc":"`mongePointVSubFaceCentroidWeightsWithCircumcenter` sums to 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.sum_mongePointVSubFaceCentroidWeightsWithCircumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">sum_mongePointVSubFaceCentroidWeightsWithCircumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.PointsWithCircumcenterIndex\">PointsWithCircumcenterIndex</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter\">mongePointVSubFaceCentroidWeightsWithCircumcenter</a> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L160-L176","name":"Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter_eq_sub","line":160,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter_eq_sub","doc":"`mongePointVSubFaceCentroidWeightsWithCircumcenter` is the\nresult of subtracting `centroidWeightsWithCircumcenter` from\n`mongePointWeightsWithCircumcenter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter_eq_sub\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePointVSubFaceCentroidWeightsWithCircumcenter_eq_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter\">mongePointVSubFaceCentroidWeightsWithCircumcenter</a> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointWeightsWithCircumcenter\">mongePointWeightsWithCircumcenter</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.centroidWeightsWithCircumcenter\">centroidWeightsWithCircumcenter</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">i₁</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">i₂</span><a href=\"./Init/Core.html#Insert.insert\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L152-L158","name":"Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter","line":152,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter","doc":"The weights for the Monge point of an (n+2)-simplex, minus the\ncentroid of an n-dimensional face, in terms of\n`pointsWithCircumcenter`.  This definition is only valid when `i₁ ≠ i₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointVSubFaceCentroidWeightsWithCircumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePointVSubFaceCentroidWeightsWithCircumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.PointsWithCircumcenterIndex\">PointsWithCircumcenterIndex</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L120-L150","name":"Affine.Simplex.mongePoint_eq_affineCombination_of_pointsWithCircumcenter","line":120,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_eq_affineCombination_of_pointsWithCircumcenter","doc":"The Monge point of an (n+2)-simplex, in terms of\n`pointsWithCircumcenter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_eq_affineCombination_of_pointsWithCircumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint_eq_affineCombination_of_pointsWithCircumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.affineCombination\">Finset.affineCombination</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.pointsWithCircumcenter\">pointsWithCircumcenter</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointWeightsWithCircumcenter\">mongePointWeightsWithCircumcenter</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L106-L118","name":"Affine.Simplex.sum_mongePointWeightsWithCircumcenter","line":106,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.sum_mongePointWeightsWithCircumcenter","doc":"`mongePointWeightsWithCircumcenter` sums to 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.sum_mongePointWeightsWithCircumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">sum_mongePointWeightsWithCircumcenter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.PointsWithCircumcenterIndex\">PointsWithCircumcenterIndex</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointWeightsWithCircumcenter\">mongePointWeightsWithCircumcenter</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L100-L104","name":"Affine.Simplex.mongePointWeightsWithCircumcenter","line":100,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointWeightsWithCircumcenter","doc":"The weights for the Monge point of an (n+2)-simplex, in terms of\n`pointsWithCircumcenter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePointWeightsWithCircumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePointWeightsWithCircumcenter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.PointsWithCircumcenterIndex\">PointsWithCircumcenterIndex</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L94-L98","name":"Affine.Simplex.mongePoint_eq_of_range_eq","line":94,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_eq_of_range_eq","doc":"Two simplices with the same points have the same Monge point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_eq_of_range_eq\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint_eq_of_range_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L88-L92","name":"Affine.Simplex.mongePoint_mem_affineSpan","line":88,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_mem_affineSpan","doc":"The Monge point lies in the affine span. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_mem_affineSpan\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint_mem_affineSpan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/AffineSubspace/Defs.html#affineSpan\">affineSpan</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L79-L86","name":"Affine.Simplex.mongePoint_eq_smul_vsub_vadd_circumcenter","line":79,"kind":"theorem","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_eq_smul_vsub_vadd_circumcenter","doc":"The position of the Monge point in relation to the circumcenter\nand centroid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint_eq_smul_vsub_vadd_circumcenter\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint_eq_smul_vsub_vadd_circumcenter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\">mongePoint</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">↑(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> (<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Combination.html#Finset.centroid\">Finset.centroid</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex.points\">points</a></span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#VSub.vsub\">-ᵥ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumcenter\">circumcenter</a></span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Geometry/Euclidean/Circumcenter.html#Affine.Simplex.circumcenter\">circumcenter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Euclidean/MongePoint.lean#L62-L77","name":"Affine.Simplex.mongePoint","line":62,"kind":"def","docLink":"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint","doc":"The Monge point of a simplex (in 2 or more dimensions) is a\ngeneralization of the orthocenter of a triangle.  It is defined to be\nthe intersection of the Monge planes, where a Monge plane is the\n(n-1)-dimensional affine subspace of the subspace spanned by the\nsimplex that passes through the centroid of an (n-2)-dimensional face\nand is orthogonal to the opposite edge (in 2 dimensions, this is the\nsame as an altitude).  The circumcenter O, centroid G and Monge point\nM are collinear in that order on the Euler line, with OG : GM = (n-1): 2.\nHere, we use that ratio to define the Monge point (so resulting\nin a point that equals the centroid in 0 or 1 dimensions), and then\nshow in subsequent lemmas that the point so defined lies in the Monge\nplanes and is their unique point of intersection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Euclidean/MongePoint.html#Affine.Simplex.mongePoint\"><span class=\"name\">Affine</span>.<span class=\"name\">Simplex</span>.<span class=\"name\">mongePoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Defs.html#InnerProductSpace\">InnerProductSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/AddTorsor.html#NormedAddTorsor\">NormedAddTorsor</a> <span class=\"fn\">V</span> <span class=\"fn\">P</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/AffineSpace/Independent.html#Affine.Simplex\">Simplex</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">P</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span></div></div>"}]}