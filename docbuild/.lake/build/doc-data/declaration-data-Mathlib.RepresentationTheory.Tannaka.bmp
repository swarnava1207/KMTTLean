{"name":"Mathlib.RepresentationTheory.Tannaka","instances":[{"typeNames":["CategoryTheory.forget₂"],"name":"TannakaDuality.FiniteGroup.instMonoidalFDRepFGModuleCatForget₂","className":"CategoryTheory.Functor.Monoidal"}],"imports":["Init","Mathlib.RepresentationTheory.FDRep"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L137-L148","name":"TannakaDuality.FiniteGroup.algHomOfRightFDRepComp","line":137,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.algHomOfRightFDRepComp","doc":"The `rightFDRep` component of `η : Aut (forget k G)` gives rise to\nan algebra morphism `(G → k) →ₐ[k] (G → k)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.algHomOfRightFDRepComp\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">algHomOfRightFDRepComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">η</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget\">forget</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">k</span>)</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L126-L135","name":"TannakaDuality.FiniteGroup.map_mul_toRightFDRepComp","line":126,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.map_mul_toRightFDRepComp","doc":"The `rightFDRep` component of `η : Aut (forget k G)` preserves multiplication "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.map_mul_toRightFDRepComp\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">map_mul_toRightFDRepComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">η</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget\">forget</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">α</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">ModuleCat.Hom.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">η</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/NaturalTransformation.html#CategoryTheory.LaxMonoidalFunctor.Hom.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightFDRep\">rightFDRep</a>)</span></span>;\n<span class=\"fn\"><span class=\"fn\">α</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">α</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">α</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L117-L124","name":"TannakaDuality.FiniteGroup.mulRepHom","line":117,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.mulRepHom","doc":"The `FDRep k G` morphism induced by multiplication on `G → k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.mulRepHom\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">mulRepHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightFDRep\">rightFDRep</a> <a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightFDRep\">rightFDRep</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightFDRep\">rightFDRep</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L112-L115","name":"TannakaDuality.FiniteGroup.equivHom_inj","line":112,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom_inj\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">equivHom_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom\">equivHom</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L104-L106","name":"TannakaDuality.FiniteGroup.rightFDRep","line":104,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightFDRep","doc":"The right regular representation `rightRegular` on `G → k` as a `FDRep k G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightFDRep\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">rightFDRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L99-L100","name":"TannakaDuality.FiniteGroup.leftRegular_apply","line":99,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.leftRegular_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.leftRegular_apply\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">leftRegular_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.leftRegular\">leftRegular</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">s</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L86-L97","name":"TannakaDuality.FiniteGroup.leftRegular","line":86,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.leftRegular","doc":"The representation on `G → k` induced by multiplication on the left in `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.leftRegular\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">leftRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L83-L84","name":"TannakaDuality.FiniteGroup.rightRegular_apply","line":83,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightRegular_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightRegular_apply\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">rightRegular_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightRegular\">rightRegular</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L70-L81","name":"TannakaDuality.FiniteGroup.rightRegular","line":70,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightRegular","doc":"The representation on `G → k` induced by multiplication on the right in `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.rightRegular\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">rightRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L63-L63","name":"TannakaDuality.FiniteGroup.equivHom_apply","line":63,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom_apply\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">equivHom_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom\">equivHom</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/NaturalTransformation.html#CategoryTheory.LaxMonoidalFunctor.isoOfComponents\">CategoryTheory.LaxMonoidalFunctor.isoOfComponents</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp\">equivApp</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L62-L68","name":"TannakaDuality.FiniteGroup.equivHom","line":62,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom","doc":"The group homomorphism `G →* Aut (forget k G)` shown to be an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivHom\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">equivHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Endomorphism.html#CategoryTheory.Aut\">CategoryTheory.Aut</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget\">forget</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L50-L50","name":"TannakaDuality.FiniteGroup.equivApp_inv","line":50,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp_inv\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">equivApp_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp\">equivApp</a> <span class=\"fn\">g</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep.ρ\">ρ</a></span> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L50-L50","name":"TannakaDuality.FiniteGroup.equivApp_hom","line":50,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp_hom\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">equivApp_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp\">equivApp</a> <span class=\"fn\">g</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L49-L59","name":"TannakaDuality.FiniteGroup.equivApp","line":49,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp","doc":"Definition of `equivHom g : Aut (forget k G)` by its components. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.equivApp\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">equivApp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L47-L47","name":"TannakaDuality.FiniteGroup.forget_map","line":47,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget_map\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">forget_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget\">forget</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L45-L45","name":"TannakaDuality.FiniteGroup.forget_obj","line":45,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget_obj\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">forget_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget\">forget</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L42-L43","name":"TannakaDuality.FiniteGroup.forget","line":42,"kind":"def","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget","doc":"The monoidal forgetful functor from `FDRep k G` to `FGModuleCat k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.forget\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">forget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.LaxMonoidalFunctor\">CategoryTheory.LaxMonoidalFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/FGModuleCat/Basic.html#FGModuleCat\">FGModuleCat</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/Tannaka.lean#L38-L39","name":"TannakaDuality.FiniteGroup.instMonoidalFDRepFGModuleCatForget₂","line":38,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.instMonoidalFDRepFGModuleCatForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/Tannaka.html#TannakaDuality.FiniteGroup.instMonoidalFDRepFGModuleCatForget₂\"><span class=\"name\">TannakaDuality</span>.<span class=\"name\">FiniteGroup</span>.<span class=\"name\">instMonoidalFDRepFGModuleCatForget₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/FDRep.html#FDRep\">FDRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/FGModuleCat/Basic.html#FGModuleCat\">FGModuleCat</a> <span class=\"fn\">k</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"}]}