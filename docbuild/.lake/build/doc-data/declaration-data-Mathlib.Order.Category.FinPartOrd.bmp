{"name":"Mathlib.Order.Category.FinPartOrd","instances":[{"typeNames":["FinPartOrd","_builtin_typeu"],"name":"FinPartOrd.instCoeSortType","className":"CoeSort"},{"typeNames":["PartOrd.carrier"],"name":"FinPartOrd.instPartialOrderCarrier","className":"PartialOrder"},{"typeNames":["FinPartOrd"],"name":"FinPartOrd.instInhabited","className":"Inhabited"},{"typeNames":["FinPartOrd"],"name":"FinPartOrd.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["FinPartOrd"],"name":"FinPartOrd.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["FinPartOrd","PartOrd"],"name":"FinPartOrd.hasForgetToPartOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["FinPartOrd","FintypeCat"],"name":"FinPartOrd.hasForgetToFintype","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.CategoryTheory.FintypeCat","Mathlib.Order.Category.PartOrd"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L117-L119","name":"FinPartOrd_dual_comp_forget_to_partOrd","line":117,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd_dual_comp_forget_to_partOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd_dual_comp_forget_to_partOrd\"><span class=\"name\">FinPartOrd_dual_comp_forget_to_partOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">FinPartOrd.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.dual\">PartOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L108-L108","name":"FinPartOrd.dualEquiv_functor","line":108,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_functor\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L108-L108","name":"FinPartOrd.dualEquiv_counitIso","line":108,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_counitIso\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv_counitIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">CategoryTheory.NatIso.ofComponents</a> <span class=\"fn\">(fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\">Iso.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.dualDual\">OrderIso.dualDual</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>)</span>\n    @<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv._proof_11\">dualEquiv._proof_11</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L108-L108","name":"FinPartOrd.dualEquiv_inverse","line":108,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_inverse\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L108-L108","name":"FinPartOrd.dualEquiv_unitIso","line":108,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv_unitIso\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv_unitIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">CategoryTheory.NatIso.ofComponents</a> <span class=\"fn\">(fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\">Iso.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.dualDual\">OrderIso.dualDual</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>)</span>\n    @<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv._proof_10\">dualEquiv._proof_10</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L107-L113","name":"FinPartOrd.dualEquiv","line":107,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv","doc":"The equivalence between `FinPartOrd` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dualEquiv\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L102-L102","name":"FinPartOrd.dual_map","line":102,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual_map\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\">dual</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.dual\">OrderHom.dual</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L101-L105","name":"FinPartOrd.dual","line":101,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.dual\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L96-L96","name":"FinPartOrd.Iso.mk_hom","line":96,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_hom\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom\">ofHom</a> <span class=\"fn\">↑<span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L96-L96","name":"FinPartOrd.Iso.mk_inv","line":96,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk_inv\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom\">ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L95-L99","name":"FinPartOrd.Iso.mk","line":95,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk","doc":"Constructs an isomorphism of finite partial orders from an order isomorphism between them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.Iso.mk\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L91-L93","name":"FinPartOrd.ofHom_hom","line":91,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom_hom\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">ofHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L86-L89","name":"FinPartOrd.hom_ofHom","line":86,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_ofHom\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L82-L82","name":"FinPartOrd.hom_ext_iff","line":82,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_ext_iff\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L82-L84","name":"FinPartOrd.hom_ext","line":82,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_ext\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L79-L80","name":"FinPartOrd.comp_apply","line":79,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.comp_apply\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L74-L76","name":"FinPartOrd.hom_comp","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_comp\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L71-L72","name":"FinPartOrd.id_apply","line":71,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.id_apply\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L67-L68","name":"FinPartOrd.hom_id","line":67,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hom_id\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.Hom.hom\">PartOrd.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.id\">OrderHom.id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L62-L65","name":"FinPartOrd.ofHom","line":62,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom","doc":"Typecheck a `OrderHom` as a morphism in `FinPartOrd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.ofHom\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L58-L60","name":"FinPartOrd.hasForgetToFintype","line":58,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToFintype\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hasForgetToFintype</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L55-L56","name":"FinPartOrd.hasForgetToPartOrd","line":55,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.hasForgetToPartOrd\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">hasForgetToPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L52-L53","name":"FinPartOrd.concreteCategory","line":52,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.concreteCategory\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L49-L50","name":"FinPartOrd.largeCategory","line":49,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.largeCategory\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L46-L47","name":"FinPartOrd.instInhabited","line":46,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instInhabited\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L42-L44","name":"FinPartOrd.of","line":42,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of","doc":"Construct a bundled `FinPartOrd` from `PartialOrder` + `Fintype`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L37-L38","name":"FinPartOrd.instPartialOrderCarrier","line":37,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instPartialOrderCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instPartialOrderCarrier\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">instPartialOrderCarrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L34-L35","name":"FinPartOrd.instCoeSortType","line":34,"kind":"instance","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.instCoeSortType\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L30-L30","name":"FinPartOrd.isFintype","line":30,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.isFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.isFintype\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">isFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L29-L29","name":"FinPartOrd.mk","line":29,"kind":"ctor","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.mk\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toPartOrd</span> : <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">isFintype</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">toPartOrd</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L29-L30","name":"FinPartOrd.toPartOrd","line":29,"kind":"def","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\"><span class=\"name\">FinPartOrd</span>.<span class=\"name\">toPartOrd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinPartOrd.lean#L28-L30","name":"FinPartOrd","line":28,"kind":"structure","docLink":"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd","doc":"The category of finite partial orders with monotone functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\"><span class=\"name\">FinPartOrd</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}