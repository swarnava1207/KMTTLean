{"name":"Mathlib.CategoryTheory.Localization.Bousfield","instances":[{"typeNames":["CategoryTheory.Localization.LeftBousfield.W"],"name":"CategoryTheory.Localization.LeftBousfield.instIsMultiplicativeW","className":"CategoryTheory.MorphismProperty.IsMultiplicative"},{"typeNames":["CategoryTheory.Localization.LeftBousfield.W"],"name":"CategoryTheory.Localization.LeftBousfield.instHasTwoOutOfThreePropertyW","className":"CategoryTheory.MorphismProperty.HasTwoOutOfThreeProperty"},{"typeNames":["CategoryTheory.Localization.LeftBousfield.W"],"name":"CategoryTheory.Localization.LeftBousfield.instRespectsIsoW","className":"CategoryTheory.MorphismProperty.Respects"}],"imports":["Init","Mathlib.CategoryTheory.ObjectProperty.ClosedUnderIsomorphisms","Mathlib.CategoryTheory.MorphismProperty.Composition","Mathlib.CategoryTheory.Localization.Adjunction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L142-L144","name":"CategoryTheory.Localization.LeftBousfield.isLocalization","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.isLocalization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.isLocalization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">isLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">adj</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\">F</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/Localization/Predicate.html#CategoryTheory.Functor.IsLocalization\">IsLocalization</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">D</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L136-L140","name":"CategoryTheory.Localization.LeftBousfield.W_eq_inverseImage_isomorphisms","line":136,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_eq_inverseImage_isomorphisms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_eq_inverseImage_isomorphisms\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W_eq_inverseImage_isomorphisms</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">adj</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\">F</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">D</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.isomorphisms\">MorphismProperty.isomorphisms</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.inverseImage\">inverseImage</a></span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L122-L134","name":"CategoryTheory.Localization.LeftBousfield.W_iff_isIso_map","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_iff_isIso_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_iff_isIso_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W_iff_isIso_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">adj</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\">F</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">D</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L115-L120","name":"CategoryTheory.Localization.LeftBousfield.W_adj_unit_app","line":115,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_adj_unit_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_adj_unit_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W_adj_unit_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">adj</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\">F</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">D</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">adj</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.unit\">unit</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L104-L106","name":"CategoryTheory.Localization.LeftBousfield.instRespectsIsoW","line":104,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.instRespectsIsoW","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.instRespectsIsoW\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">instRespectsIsoW</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.RespectsIso\">RespectsIso</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L96-L102","name":"CategoryTheory.Localization.LeftBousfield.W_iff_isIso","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_iff_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_iff_isIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W_iff_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hY</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L89-L94","name":"CategoryTheory.Localization.LeftBousfield.W_of_isIso","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_of_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_of_isIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W_of_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L81-L87","name":"CategoryTheory.Localization.LeftBousfield.instHasTwoOutOfThreePropertyW","line":81,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.instHasTwoOutOfThreePropertyW","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.instHasTwoOutOfThreePropertyW\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">instHasTwoOutOfThreePropertyW</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.HasTwoOutOfThreeProperty\">HasTwoOutOfThreeProperty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L76-L79","name":"CategoryTheory.Localization.LeftBousfield.instIsMultiplicativeW","line":76,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.instIsMultiplicativeW","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.instIsMultiplicativeW\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">instIsMultiplicativeW</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.IsMultiplicative\">IsMultiplicative</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L61-L74","name":"CategoryTheory.Localization.LeftBousfield.W_isoClosure","line":61,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_isoClosure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W_isoClosure\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W_isoClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/ClosedUnderIsomorphisms.html#CategoryTheory.ObjectProperty.isoClosure\">isoClosure</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L56-L56","name":"CategoryTheory.Localization.LeftBousfield.W.homEquiv_apply","line":56,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W.homEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W.homEquiv_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W</span>.<span class=\"name\">homEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hZ</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W.homEquiv\">homEquiv</a></span> <span class=\"fn\">Z</span> <span class=\"fn\">hZ</span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L54-L59","name":"CategoryTheory.Localization.LeftBousfield.W.homEquiv","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W.homEquiv","doc":"The bijection `(Y ⟶ Z) ≃ (X ⟶ Z)` induced by `f : X ⟶ Y` when `LeftBousfield.W P f`\nand `P Z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W.homEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W</span>.<span class=\"name\">homEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\">W</a> <span class=\"fn\">P</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hZ</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/Bousfield.lean#L47-L51","name":"CategoryTheory.Localization.LeftBousfield.W","line":47,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W","doc":"Given `P : ObjectProperty C`, this is the class of morphisms `f : X ⟶ Y`\nsuch that for all `Z : C` such that `P Z`, the precomposition with `f` induces\na bijection `(Y ⟶ Z) ≃ (X ⟶ Z)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/Bousfield.html#CategoryTheory.Localization.LeftBousfield.W\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Localization</span>.<span class=\"name\">LeftBousfield</span>.<span class=\"name\">W</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span></div></div>"}]}