{"name":"Aesop.Script.CtorNames","instances":[],"imports":["Init","Aesop.Util.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L64-L75","name":"Aesop.mkCtorNames","line":64,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.mkCtorNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.mkCtorNames\"><span class=\"name\">Aesop</span>.<span class=\"name\">mkCtorNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iv</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L59-L62","name":"Aesop.ctorNamesToInductionAlts","line":59,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.ctorNamesToInductionAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.ctorNamesToInductionAlts\"><span class=\"name\">Aesop</span>.<span class=\"name\">ctorNamesToInductionAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cns</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.inductionAlts</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L55-L56","name":"Aesop.ctorNamesToRCasesPats","line":55,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.ctorNamesToRCasesPats","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.ctorNamesToRCasesPats\"><span class=\"name\">Aesop</span>.<span class=\"name\">ctorNamesToRCasesPats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cns</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.rcasesPatMed</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L47-L50","name":"Aesop.CtorNames.mkFreshArgNames","line":47,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.mkFreshArgNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.mkFreshArgNames\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">mkFreshArgNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lctx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cn</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L43-L45","name":"Aesop.CtorNames.toAltVarNames","line":43,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toAltVarNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toAltVarNames\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">toAltVarNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cn</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Induction.html#Lean.Meta.AltVarNames\">Lean.Meta.AltVarNames</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L39-L41","name":"Aesop.CtorNames.toInductionAlt","line":39,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toInductionAlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toInductionAlt\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">toInductionAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cn</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticSeq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.inductionAlt</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L29-L36","name":"Aesop.CtorNames.toInductionAltLHS","line":29,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toInductionAltLHS","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toInductionAltLHS\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">toInductionAltLHS</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cn</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.inductionAltLHS</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L15-L21","name":"Aesop.CtorNames.toRCasesPat","line":15,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toRCasesPat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.toRCasesPat\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">toRCasesPat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cn</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`rcasesPat</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L11-L11","name":"Aesop.CtorNames.hasImplicitArg","line":11,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.hasImplicitArg","doc":"Whether the constructor has at least one implicit argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.hasImplicitArg\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">hasImplicitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L9-L9","name":"Aesop.CtorNames.args","line":9,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.args","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.args\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">args</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L8-L8","name":"Aesop.CtorNames.ctor","line":8,"kind":"def","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.ctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.ctor\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">ctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L7-L7","name":"Aesop.CtorNames.mk","line":7,"kind":"ctor","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctor</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasImplicitArg</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Script/CtorNames.lean#L7-L11","name":"Aesop.CtorNames","line":7,"kind":"structure","docLink":"./Aesop/Script/CtorNames.html#Aesop.CtorNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\"><span class=\"name\">Aesop</span>.<span class=\"name\">CtorNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}