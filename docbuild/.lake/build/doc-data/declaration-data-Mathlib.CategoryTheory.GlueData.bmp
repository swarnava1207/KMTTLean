{"name":"Mathlib.CategoryTheory.GlueData","instances":[{"typeNames":["CategoryTheory.GlueData.t"],"name":"CategoryTheory.GlueData.t_isIso","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.GlueData.t'"],"name":"CategoryTheory.GlueData.t'_isIso","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.GlueData.π"],"name":"CategoryTheory.GlueData.π_epi","className":"CategoryTheory.Epi"},{"typeNames":["Prefunctor.map","Prefunctor.map"],"name":"CategoryTheory.GlueData.instHasPullbackMapF","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["CategoryTheory.GlueData'.f'"],"name":"CategoryTheory.instMonoF'","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.GlueData'.f'"],"name":"CategoryTheory.instIsIsoF'","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.GlueData'.f'","CategoryTheory.GlueData'.f'"],"name":"CategoryTheory.instHasPullbackF'","className":"CategoryTheory.Limits.HasLimit"}],"imports":["Init","Mathlib.Tactic.CategoryTheory.Elementwise","Mathlib.CategoryTheory.Limits.Shapes.Multiequalizer","Mathlib.CategoryTheory.Limits.Constructions.EpiMono","Mathlib.CategoryTheory.Limits.Preserves.Limits","Mathlib.CategoryTheory.Limits.Types.Shapes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L437-L477","name":"CategoryTheory.GlueData.ofGlueData'","line":437,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ofGlueData'","doc":"The constructed `GlueData` of a `GlueData'`, where `GlueData'` is a variant of `GlueData` that only\nrequires conditions on `V (i, j)` when `i ≠ j`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ofGlueData'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ofGlueData'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L409-L434","name":"CategoryTheory.GlueData'.t''","line":409,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t''","doc":"(Implementation detail) the constructed `GlueData.t'` from a `GlueData'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t''\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">t''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L394-L406","name":"CategoryTheory.instHasPullbackF'","line":394,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.instHasPullbackF'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.instHasPullbackF'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instHasPullbackF'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L391-L392","name":"CategoryTheory.instIsIsoF'","line":391,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.instIsIsoF'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.instIsIsoF'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instIsIsoF'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L388-L389","name":"CategoryTheory.instMonoF'","line":388,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.instMonoF'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.instMonoF'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instMonoF'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\">f'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L383-L386","name":"CategoryTheory.GlueData'.f'","line":383,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'","doc":"(Implementation detail) the constructed `GlueData.f` from a `GlueData'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">f'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(if h : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span> then <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.U\">U</a></span> <span class=\"fn\">i</span></span> else <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\">V</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.U\">U</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L378-L378","name":"CategoryTheory.GlueData'.t_inv_assoc","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t_inv_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t_inv_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">t_inv_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\">V</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">⋯</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t\">t</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L378-L378","name":"CategoryTheory.GlueData'.cocycle_assoc","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.cocycle_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.cocycle_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">cocycle_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hij</span> <span class=\"fn\">hik</span> <span class=\"fn\">hjk</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">hjk</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">h</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L373-L373","name":"CategoryTheory.GlueData'.cocycle","line":373,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.cocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.cocycle\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">cocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hij</span> <span class=\"fn\">hik</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">hjk</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hij</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L372-L372","name":"CategoryTheory.GlueData'.t_inv","line":372,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">t_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t\">t</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\">V</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L370-L370","name":"CategoryTheory.GlueData'.t_fac","line":370,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t_fac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t_fac\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">t_fac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hij</span> <span class=\"fn\">hik</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L368-L368","name":"CategoryTheory.GlueData'.t'","line":368,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'","doc":"The transition maps between the intersection of intersections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">t'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L366-L366","name":"CategoryTheory.GlueData'.t","line":366,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t","doc":"The transition maps between the intersections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.t\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\">V</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\">V</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L364-L364","name":"CategoryTheory.GlueData'.f_hasPullback","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f_hasPullback","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f_hasPullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">f_hasPullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L363-L363","name":"CategoryTheory.GlueData'.f_mono","line":363,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">f_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L362-L362","name":"CategoryTheory.GlueData'.f","line":362,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f","doc":"The inclusion maps of the intersection into the object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\">V</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.U\">U</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L360-L360","name":"CategoryTheory.GlueData'.V","line":360,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V","doc":"Objects representing the intersections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.V\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">V</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L358-L358","name":"CategoryTheory.GlueData'.U","line":358,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.U","doc":"Objects of a glue data to be glued. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.U\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">U</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\">J</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L356-L356","name":"CategoryTheory.GlueData'.J","line":356,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J","doc":"Indexing type of a glue data. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.J\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">J</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L354-L354","name":"CategoryTheory.GlueData'.mk","line":354,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span> → <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) → <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_mono</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span>)</span></span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_hasPullback</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) (<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span></span></span> := by\n  infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) → <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t'</span> :\n  <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>) →\n    <span class=\"fn\">(<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) →\n      <span class=\"fn\">(<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>) → <span class=\"fn\">(<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>) → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t_fac</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) (<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>) (<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hij</span> <span class=\"fn\">hik</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t_inv</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\">V</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cocycle</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">hij</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) (<span class=\"fn\">hik</span> : <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>) (<span class=\"fn\">hjk</span> : <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">hij</span> <span class=\"fn\">hik</span> <span class=\"fn\">hjk</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">hjk</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span> <span class=\"fn\">hij</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">hij</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">hik</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\">GlueData'</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L350-L374","name":"CategoryTheory.GlueData'","line":350,"kind":"structure","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'","doc":"This is a variant of `GlueData` that only requires conditions on `V (i, j)` when `i ≠ j`.\nSee `GlueData.ofGlueData'`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ (v + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L334-L344","name":"CategoryTheory.GlueData.ι_jointly_surjective","line":334,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_jointly_surjective","doc":"If there is a forgetful functor into `Type` that preserves enough (co)limits, then `D.ι` will\nbe jointly surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_jointly_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ι_jointly_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(Type</a> v)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>) (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span> <span class=\"fn\">i</span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L315-L332","name":"CategoryTheory.GlueData.vPullbackConeIsLimitOfMap","line":315,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.vPullbackConeIsLimitOfMap","doc":"If `F` preserves the gluing, and reflects the pullback of `U i ⟶ glued` and `U j ⟶ glued`,\nthen `F` reflects the fact that `V_pullback_cone` is a pullback. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.vPullbackConeIsLimitOfMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">vPullbackConeIsLimitOfMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.ReflectsLimit\">Limits.ReflectsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.vPullbackCone\">vPullbackCone</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.vPullbackCone\">vPullbackCone</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L311-L311","name":"CategoryTheory.GlueData.ι_gluedIso_inv_assoc","line":311,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_inv_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_inv_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ι_gluedIso_inv_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.gluedIso\">gluedIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L311-L313","name":"CategoryTheory.GlueData.ι_gluedIso_inv","line":311,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ι_gluedIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.gluedIso\">gluedIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L303-L303","name":"CategoryTheory.GlueData.ι_gluedIso_hom_assoc","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_hom_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ι_gluedIso_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C'</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.gluedIso\">gluedIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L303-L309","name":"CategoryTheory.GlueData.ι_gluedIso_hom","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι_gluedIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ι_gluedIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.gluedIso\">gluedIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L298-L301","name":"CategoryTheory.GlueData.gluedIso","line":298,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.gluedIso","doc":"If `F` preserves the gluing, we obtain an iso between the glued objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.gluedIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">gluedIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L293-L294","name":"CategoryTheory.GlueData.hasColimit_mapGlueData_diagram","line":293,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.hasColimit_mapGlueData_diagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.hasColimit_mapGlueData_diagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">hasColimit_mapGlueData_diagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L286-L287","name":"CategoryTheory.GlueData.hasColimit_multispan_comp","line":286,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.hasColimit_multispan_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.hasColimit_multispan_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">hasColimit_multispan_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">Limits.HasColimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L277-L280","name":"CategoryTheory.GlueData.diagramIso_inv_app_right","line":277,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_inv_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_inv_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso_inv_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\">diagramIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">Limits.WalkingMultispan.right</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">Limits.WalkingMultispan.right</a> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L272-L275","name":"CategoryTheory.GlueData.diagramIso_inv_app_left","line":272,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_inv_app_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_inv_app_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso_inv_app_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\">diagramIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">Limits.WalkingMultispan.left</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">Limits.WalkingMultispan.left</a> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L267-L270","name":"CategoryTheory.GlueData.diagramIso_hom_app_right","line":267,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_hom_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_hom_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso_hom_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\">diagramIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">Limits.WalkingMultispan.right</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">Limits.WalkingMultispan.right</a> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L262-L265","name":"CategoryTheory.GlueData.diagramIso_hom_app_left","line":262,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_hom_app_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_hom_app_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso_hom_app_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\">diagramIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">Limits.WalkingMultispan.left</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">Limits.WalkingMultispan.left</a> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L257-L260","name":"CategoryTheory.GlueData.diagramIso_app_right","line":257,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\">diagramIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.Iso.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">Limits.WalkingMultispan.right</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.right\">Limits.WalkingMultispan.right</a> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L252-L255","name":"CategoryTheory.GlueData.diagramIso_app_left","line":252,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_app_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso_app_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso_app_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\">diagramIso</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.Iso.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">Limits.WalkingMultispan.left</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.WalkingMultispan.left\">Limits.WalkingMultispan.left</a> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L232-L250","name":"CategoryTheory.GlueData.diagramIso","line":232,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso","doc":"The diagram of the image of a `GlueData` under a functor `F` is naturally isomorphic to the\noriginal diagram of the `GlueData` via `F`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagramIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagramIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.multispan\">multispan</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L213-L213","name":"CategoryTheory.GlueData.mapGlueData_J","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_J","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_J\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData_J</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L213-L213","name":"CategoryTheory.GlueData.mapGlueData_f","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L213-L213","name":"CategoryTheory.GlueData.mapGlueData_t'","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_t'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_t'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData_t'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Pullbacks.html#CategoryTheory.Limits.PreservesPullback.iso\">Limits.PreservesPullback.iso</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Shapes/Pullbacks.html#CategoryTheory.Limits.PreservesPullback.iso\">Limits.PreservesPullback.iso</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L213-L213","name":"CategoryTheory.GlueData.mapGlueData_t","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_t","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_t\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData_t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L213-L213","name":"CategoryTheory.GlueData.mapGlueData_U","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_U","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_U\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData_U</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L213-L213","name":"CategoryTheory.GlueData.mapGlueData_V","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_V","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData_V\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData_V</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\">mapGlueData</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L212-L230","name":"CategoryTheory.GlueData.mapGlueData","line":212,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData","doc":"A functor that preserves the pullbacks of `f i j` and `f i k` can map a family of glue data. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mapGlueData\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mapGlueData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L209-L210","name":"CategoryTheory.GlueData.instHasPullbackMapF","line":209,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.instHasPullbackMapF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.instHasPullbackMapF\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">instHasPullbackMapF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C'</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₂}</a> <span class=\"fn\">C'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">C'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L190-L202","name":"CategoryTheory.GlueData.types_ι_jointly_surjective","line":190,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.types_ι_jointly_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.types_ι_jointly_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">types_ι_jointly_surjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>) (<span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L187-L188","name":"CategoryTheory.GlueData.types_π_surjective","line":187,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.types_π_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.types_π_surjective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">types_π_surjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.π\">π</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L181-L183","name":"CategoryTheory.GlueData.π_epi","line":181,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.π_epi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.π_epi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">π_epi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">Limits.HasColimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.π\">π</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L177-L179","name":"CategoryTheory.GlueData.π","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.π","doc":"The projection `∐ D.U ⟶ D.glued` given by the colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">Limits.HasColimits</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.sigmaOpens\">sigmaOpens</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L170-L173","name":"CategoryTheory.GlueData.vPullbackCone","line":170,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.vPullbackCone","doc":"The pullback cone spanned by `V i j ⟶ U i` and `V i j ⟶ U j`.\nThis will often be a pullback diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.vPullbackCone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">vPullbackCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">Limits.PullbackCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L166-L166","name":"CategoryTheory.GlueData.glue_condition_apply","line":166,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glue_condition_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glue_condition_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">glue_condition_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">C</span> → <span class=\"fn\">C</span> → <a href=\"./foundational_types.html\">Type</a> uF</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">carrier</span> : <span class=\"fn\"><span class=\"fn\">C</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">instFunLike</span> : <span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">(<span class=\"fn\">carrier</span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\">carrier</span> <span class=\"fn\">Y</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">ConcreteCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">ToType</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">x</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L166-L168","name":"CategoryTheory.GlueData.glue_condition","line":166,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glue_condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glue_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">glue_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">j</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\">ι</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L162-L164","name":"CategoryTheory.GlueData.ι","line":162,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι","doc":"The map `D.U i ⟶ D.glued` for each `i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.ι\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\">glued</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L158-L160","name":"CategoryTheory.GlueData.glued","line":158,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued","doc":"The glued object given a family of gluing data. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.glued\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">glued</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.HasMulticoequalizer\">Limits.HasMulticoequalizer</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L150-L152","name":"CategoryTheory.GlueData.diagram_right","line":150,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagram_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.right\">right</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L146-L148","name":"CategoryTheory.GlueData.diagram_left","line":146,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagram_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L142-L144","name":"CategoryTheory.GlueData.diagram_snd","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagram_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L138-L140","name":"CategoryTheory.GlueData.diagram_fst","line":138,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagram_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L131-L136","name":"CategoryTheory.GlueData.diagram","line":131,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram","doc":"(Implementation) The diagram to take colimit of. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.diagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">diagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanIndex\">Limits.MultispanIndex</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MultispanShape.prod\">Limits.MultispanShape.prod</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L127-L129","name":"CategoryTheory.GlueData.sigmaOpens","line":127,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.sigmaOpens","doc":"(Implementation) The disjoint union of `U i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.sigmaOpens\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">sigmaOpens</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproduct\">Limits.HasCoproduct</a> <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L118-L118","name":"CategoryTheory.GlueData.t'_comp_eq_pullbackSymmetry_assoc","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_comp_eq_pullbackSymmetry_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_comp_eq_pullbackSymmetry_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_comp_eq_pullbackSymmetry_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L118-L125","name":"CategoryTheory.GlueData.t'_comp_eq_pullbackSymmetry","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_comp_eq_pullbackSymmetry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_comp_eq_pullbackSymmetry\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_comp_eq_pullbackSymmetry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L115-L116","name":"CategoryTheory.GlueData.t'_isIso","line":115,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_isIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L112-L113","name":"CategoryTheory.GlueData.t_isIso","line":112,"kind":"instance","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_isIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L107-L110","name":"CategoryTheory.GlueData.t'_inv","line":107,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L97-L97","name":"CategoryTheory.GlueData.t_inv_apply","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_inv_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">C</span> → <span class=\"fn\">C</span> → <a href=\"./foundational_types.html\">Type</a> uF</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">carrier</span> : <span class=\"fn\"><span class=\"fn\">C</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">instFunLike</span> : <span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">(<span class=\"fn\">carrier</span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\">carrier</span> <span class=\"fn\">Y</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">ConcreteCategory</a> <span class=\"fn\">C</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">ToType</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L97-L97","name":"CategoryTheory.GlueData.t_inv_assoc","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_inv_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_inv_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_inv_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L97-L105","name":"CategoryTheory.GlueData.t_inv","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L93-L95","name":"CategoryTheory.GlueData.t'_iji","line":93,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_iji","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_iji\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_iji</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">inv</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L89-L91","name":"CategoryTheory.GlueData.t'_jii","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_jii","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_jii\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_jii</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">inv</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L78-L87","name":"CategoryTheory.GlueData.t'_iij","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_iij","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'_iij\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'_iij</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullbackSymmetry\">Limits.pullbackSymmetry</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L71-L71","name":"CategoryTheory.GlueData.cocycle_assoc","line":71,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.cocycle_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.cocycle_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">cocycle_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L71-L71","name":"CategoryTheory.GlueData.t_fac_assoc","line":71,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_fac_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_fac_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_fac_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L65-L65","name":"CategoryTheory.GlueData.cocycle","line":65,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.cocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.cocycle\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">cocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L64-L64","name":"CategoryTheory.GlueData.t_fac","line":64,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_fac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_fac\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_fac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\">t'</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L63-L63","name":"CategoryTheory.GlueData.t'","line":63,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'","doc":"The morphism via which `V i j ×[U i] V i k ⟶ V i j ⟶ V j i` factors through\n`V j k ×[U j] V j i ⟶ V j i` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L60-L60","name":"CategoryTheory.GlueData.t_id","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\">t</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L59-L59","name":"CategoryTheory.GlueData.t","line":59,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t","doc":"For each `i j : J`, a transition map `t i j : V i j ⟶ V j i` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.t\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L57-L57","name":"CategoryTheory.GlueData.f_id","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">f_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L56-L56","name":"CategoryTheory.GlueData.f_hasPullback","line":56,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f_hasPullback","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f_hasPullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">f_hasPullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L55-L55","name":"CategoryTheory.GlueData.f_mono","line":55,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">f_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\">f</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L54-L54","name":"CategoryTheory.GlueData.f","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f","doc":"For each `i j : J`, a monomorphism `f i j : V i j ⟶ U i` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\">V</a></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\">U</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L52-L52","name":"CategoryTheory.GlueData.V","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V","doc":"For each `i j : J`, an object `V i j` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.V\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">V</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L50-L50","name":"CategoryTheory.GlueData.U","line":50,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U","doc":"For each `i : J`, an object `U i` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.U\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">U</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\">J</a></span> → <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L48-L48","name":"CategoryTheory.GlueData.J","line":48,"kind":"def","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J","doc":"The index type `J` of a gluing datum "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.J\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">J</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L46-L46","name":"CategoryTheory.GlueData.mk","line":46,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">J</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_mono</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_hasPullback</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_id</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">i</span>)</span></span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t_id</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t'</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>) → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t_fac</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">i</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">t</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cocycle</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\">J</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">t'</span> <span class=\"fn\">k</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\">GlueData</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/GlueData.lean#L32-L65","name":"CategoryTheory.GlueData","line":32,"kind":"structure","docLink":"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData","doc":"A gluing datum consists of\n1. An index type `J`\n2. An object `U i` for each `i : J`.\n3. An object `V i j` for each `i j : J`.\n4. A monomorphism `f i j : V i j ⟶ U i` for each `i j : J`.\n5. A transition map `t i j : V i j ⟶ V j i` for each `i j : J`.\nsuch that\n6. `f i i` is an isomorphism.\n7. `t i i` is the identity.\n8. The pullback for `f i j` and `f i k` exists.\n9. `V i j ×[U i] V i k ⟶ V i j ⟶ V j i` factors through `V j k ×[U j] V j i ⟶ V j i` via some\n    `t' : V i j ×[U i] V i k ⟶ V j k ×[U j] V j i`.\n10. `t' i j k ≫ t' j k i ≫ t' k i j = 𝟙 _`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/GlueData.html#CategoryTheory.GlueData\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GlueData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ (v + 1))</div></div>"}]}