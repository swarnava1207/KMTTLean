{"name":"Mathlib.Data.Finset.Range","instances":[],"imports":["Init","Mathlib.Data.Finset.Insert","Mathlib.Data.Multiset.Range","Mathlib.Order.Interval.Set.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L144-L147","name":"coe_notMemRangeEquiv_symm","line":144,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#coe_notMemRangeEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#coe_notMemRangeEquiv_symm\"><span class=\"name\">coe_notMemRangeEquiv_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#notMemRangeEquiv\">notMemRangeEquiv</a> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L139-L142","name":"coe_notMemRangeEquiv","line":139,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#coe_notMemRangeEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#coe_notMemRangeEquiv\"><span class=\"name\">coe_notMemRangeEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#notMemRangeEquiv\">notMemRangeEquiv</a> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Range.html#Multiset.range\">Multiset.range</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L129-L137","name":"notMemRangeEquiv","line":129,"kind":"def","docLink":"./Mathlib/Data/Finset/Range.html#notMemRangeEquiv","doc":"Equivalence between the set of natural numbers which are `≥ k` and `ℕ`, given by `n → n - k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#notMemRangeEquiv\"><span class=\"name\">notMemRangeEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Range.html#Multiset.range\">Multiset.range</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L121-L123","name":"Finset.exists_nat_subset_range","line":121,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.exists_nat_subset_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.exists_nat_subset_range\"><span class=\"name\">Finset</span>.<span class=\"name\">exists_nat_subset_range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L117-L119","name":"Finset.range_nontrivial","line":117,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_nontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_nontrivial\"><span class=\"name\">Finset</span>.<span class=\"name\">range_nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Insert.html#Finset.Nontrivial\">Nontrivial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L113-L115","name":"Finset.nonempty_range_succ","line":113,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.nonempty_range_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.nonempty_range_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">nonempty_range_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L109-L111","name":"Finset.range_eq_empty_iff","line":109,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_eq_empty_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_eq_empty_iff\"><span class=\"name\">Finset</span>.<span class=\"name\">range_eq_empty_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L106-L107","name":"Finset.Aesop.range_nonempty","line":106,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.Aesop.range_nonempty","doc":"**Alias** of the reverse direction of `Finset.nonempty_range_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.Aesop.range_nonempty\"><span class=\"name\">Finset</span>.<span class=\"name\">Aesop</span>.<span class=\"name\">range_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L101-L104","name":"Finset.nonempty_range_iff","line":101,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.nonempty_range_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.nonempty_range_iff\"><span class=\"name\">Finset</span>.<span class=\"name\">nonempty_range_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L98-L99","name":"Finset.mem_range_sub_ne_zero","line":98,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.mem_range_sub_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.mem_range_sub_ne_zero\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_range_sub_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L95-L96","name":"Finset.mem_range_le","line":95,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.mem_range_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.mem_range_le\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_range_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L92-L93","name":"Finset.mem_range_succ_iff","line":92,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.mem_range_succ_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.mem_range_succ_iff\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_range_succ_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L90-L90","name":"GCongr.finset_range_subset_of_le","line":90,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#GCongr.finset_range_subset_of_le","doc":"**Alias** of the reverse direction of `Finset.range_subset`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#GCongr.finset_range_subset_of_le\"><span class=\"name\">GCongr</span>.<span class=\"name\">finset_range_subset_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L88-L88","name":"Finset.range_mono","line":88,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_mono\"><span class=\"name\">Finset</span>.<span class=\"name\">range_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L84-L86","name":"Finset.range_subset","line":84,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_subset\"><span class=\"name\">Finset</span>.<span class=\"name\">range_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L81-L82","name":"Finset.self_mem_range_succ","line":81,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.self_mem_range_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.self_mem_range_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">self_mem_range_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L78-L79","name":"Finset.not_mem_range_self","line":78,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.not_mem_range_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.not_mem_range_self\"><span class=\"name\">Finset</span>.<span class=\"name\">not_mem_range_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L75-L76","name":"Finset.range_add_one","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_add_one\"><span class=\"name\">Finset</span>.<span class=\"name\">range_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L72-L73","name":"Finset.range_succ","line":72,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">range_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L68-L70","name":"Finset.range_one","line":68,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_one\"><span class=\"name\">Finset</span>.<span class=\"name\">range_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L64-L66","name":"Finset.range_zero","line":64,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_zero\"><span class=\"name\">Finset</span>.<span class=\"name\">range_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L60-L62","name":"Finset.coe_range","line":60,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.coe_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.coe_range\"><span class=\"name\">Finset</span>.<span class=\"name\">coe_range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L56-L58","name":"Finset.mem_range","line":56,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.mem_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.mem_range\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L52-L54","name":"Finset.range_val","line":52,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range_val\"><span class=\"name\">Finset</span>.<span class=\"name\">range_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Range.html#Multiset.range\">Multiset.range</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Range.lean#L48-L50","name":"Finset.range","line":48,"kind":"def","docLink":"./Mathlib/Data/Finset/Range.html#Finset.range","doc":"`range n` is the set of natural numbers less than `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Range.html#Finset.range\"><span class=\"name\">Finset</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}