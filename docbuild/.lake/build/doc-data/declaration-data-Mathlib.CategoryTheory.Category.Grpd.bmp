{"name":"Mathlib.CategoryTheory.Category.Grpd","instances":[{"typeNames":["CategoryTheory.Grpd"],"name":"CategoryTheory.Grpd.instInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"CategoryTheory.Grpd.str'","className":"CategoryTheory.Groupoid"},{"typeNames":["CategoryTheory.Grpd","_builtin_typeu"],"name":"CategoryTheory.Grpd.instCoeSortType","className":"CoeSort"},{"typeNames":["CategoryTheory.Grpd"],"name":"CategoryTheory.Grpd.category","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Grpd.forgetToCat"],"name":"CategoryTheory.Grpd.forgetToCat_full","className":"CategoryTheory.Functor.Full"},{"typeNames":["CategoryTheory.Grpd.forgetToCat"],"name":"CategoryTheory.Grpd.forgetToCat_faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.Discrete","CategoryTheory.Grpd"],"name":"CategoryTheory.Grpd.has_pi","className":"CategoryTheory.Limits.HasLimitsOfShape"}],"imports":["Init","Mathlib.CategoryTheory.SingleObj","Mathlib.CategoryTheory.Limits.Shapes.Products"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L118-L122","name":"CategoryTheory.Grpd.piIsoPi_hom_π","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi_hom_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi_hom_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piIsoPi_hom_π</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi\">piIsoPi</a> <span class=\"fn\">J</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Pi/Basic.html#CategoryTheory.Pi.eval\">Pi.eval</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span>)</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L112-L116","name":"CategoryTheory.Grpd.piIsoPi","line":112,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi","doc":"The product of a family of groupoids is isomorphic\nto the product object in the category of Groupoids "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piIsoPi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\">of</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L109-L110","name":"CategoryTheory.Grpd.has_pi","line":109,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.has_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.has_pi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">has_pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProducts\">Limits.HasProducts</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L96-L107","name":"CategoryTheory.Grpd.piLimitFanIsLimit","line":96,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFanIsLimit","doc":"The product fan over an indexed family of groupoids, is a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFanIsLimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piLimitFanIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan\">piLimitFan</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L92-L94","name":"CategoryTheory.Grpd.piLimitFan","line":92,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan","doc":"Construct the product over an indexed family of groupoids, as a fan. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piLimitFan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan\">Limits.Fan</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L86-L88","name":"CategoryTheory.Grpd.id_to_functor","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.id_to_functor","doc":"Converts identity in the category of groupoids to the functor identity "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.id_to_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">id_to_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L81-L84","name":"CategoryTheory.Grpd.hom_to_functor","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.hom_to_functor","doc":"Convert arrows in the category of groupoids to functors,\nwhich sometimes helps in applying simp lemmas "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.hom_to_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">hom_to_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D </span><span class=\"fn\">E</span> : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">C</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">D</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">Functor.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L79-L79","name":"CategoryTheory.Grpd.forgetToCat_faithful","line":79,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat_faithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">forgetToCat_faithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat\">forgetToCat</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L77-L77","name":"CategoryTheory.Grpd.forgetToCat_full","line":77,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat_full","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat_full\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">forgetToCat_full</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat\">forgetToCat</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L72-L75","name":"CategoryTheory.Grpd.forgetToCat","line":72,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat","doc":"Forgetting functor to `Cat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">forgetToCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L66-L70","name":"CategoryTheory.Grpd.objects","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.objects","doc":"Functor that gets the set of objects of a groupoid. It is not\ncalled `forget`, because it is not a faithful functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">objects</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a> <a href=\"./foundational_types.html\">(Type</a> u)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L57-L64","name":"CategoryTheory.Grpd.category","line":57,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.category","doc":"Category structure on `Grpd` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L53-L55","name":"CategoryTheory.Grpd.coe_of","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.coe_of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\">of</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L49-L51","name":"CategoryTheory.Grpd.of","line":49,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of","doc":"Construct a bundled `Grpd` from the underlying type and the typeclass `Groupoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L46-L47","name":"CategoryTheory.Grpd.instCoeSortType","line":46,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instCoeSortType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L43-L44","name":"CategoryTheory.Grpd.str'","line":43,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.str'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.str'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">str'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L39-L40","name":"CategoryTheory.Grpd.instInhabited","line":39,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">Grpd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Grpd.lean#L32-L35","name":"CategoryTheory.Grpd","line":32,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd","doc":"Category of groupoids "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (u + 1) u (v + 1))</div></div>"}]}