{"name":"Mathlib.CategoryTheory.SmallObject.IsCardinalForSmallObjectArgument","instances":[{"typeNames":["CategoryTheory.CommaMorphism.right"],"name":"CategoryTheory.SmallObject.instIsIsoRightAppArrowιIteration","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.CommaMorphism.right"],"name":"CategoryTheory.SmallObject.instIsIsoRightAppArrowMapToTypeOrdFunctorIterationFunctor","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.CategoryTheory.SmallObject.Construction","Mathlib.CategoryTheory.SmallObject.TransfiniteIteration","Mathlib.CategoryTheory.SmallObject.TransfiniteCompositionLifting","Mathlib.CategoryTheory.MorphismProperty.IsSmall","Mathlib.AlgebraicTopology.RelativeCellComplex.Basic","Mathlib.SetTheory.Cardinal.Regular"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L467-L477","name":"CategoryTheory.SmallObject.llp_rlp_of_isCardinalForSmallObjectArgument","line":467,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.llp_rlp_of_isCardinalForSmallObjectArgument","doc":"If `κ` is a suitable cardinal for the small object argument for `I : MorphismProperty C`,\nthen the class `I.rlp.llp` is exactly the class of morphisms that are retracts\nof transfinite compositions of pushouts of coproducts of maps in `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.llp_rlp_of_isCardinalForSmallObjectArgument\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">llp_rlp_of_isCardinalForSmallObjectArgument</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.transfiniteCompositions\">MorphismProperty.transfiniteCompositions.{w, v, u}</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.coproducts\">MorphismProperty.coproducts.{w, v, u}</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.pushouts\">pushouts</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Retract.html#CategoryTheory.MorphismProperty.retracts\">retracts</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L450-L465","name":"CategoryTheory.SmallObject.llp_rlp_of_isCardinalForSmallObjectArgument'","line":450,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.llp_rlp_of_isCardinalForSmallObjectArgument'","doc":"If `κ` is a suitable cardinal for the small object argument for `I : MorphismProperty C`,\nthen the class `I.rlp.llp` is exactly the class of morphisms that are retracts\nof transfinite compositions (of shape `κ.ord.toType`) of pushouts of coproducts\nof maps in `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.llp_rlp_of_isCardinalForSmallObjectArgument'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">llp_rlp_of_isCardinalForSmallObjectArgument'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.coproducts\">MorphismProperty.coproducts.{w, v, u}</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.pushouts\">pushouts</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.transfiniteCompositionsOfShape\">transfiniteCompositionsOfShape</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Retract.html#CategoryTheory.MorphismProperty.retracts\">retracts</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L445-L448","name":"CategoryTheory.SmallObject.hasFunctorialFactorization","line":445,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasFunctorialFactorization","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasFunctorialFactorization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">hasFunctorialFactorization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.HasFunctorialFactorization\">HasFunctorialFactorization</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L434-L434","name":"CategoryTheory.SmallObject.functorialFactorizationData_Z_obj","line":434,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_Z_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_Z_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorialFactorizationData_Z_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData\">functorialFactorizationData</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.FunctorialFactorizationData.Z\">Z</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L434-L434","name":"CategoryTheory.SmallObject.functorialFactorizationData_i_app","line":434,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_i_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_i_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorialFactorizationData_i_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData\">functorialFactorizationData</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.FunctorialFactorizationData.i\">i</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L434-L434","name":"CategoryTheory.SmallObject.functorialFactorizationData_p_app","line":434,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_p_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_p_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorialFactorizationData_p_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData\">functorialFactorizationData</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.FunctorialFactorizationData.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L434-L434","name":"CategoryTheory.SmallObject.functorialFactorizationData_Z_map","line":434,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_Z_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData_Z_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorialFactorizationData_Z_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData\">functorialFactorizationData</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.FunctorialFactorizationData.Z\">Z</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L432-L443","name":"CategoryTheory.SmallObject.functorialFactorizationData","line":432,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData","doc":"The functorial factorization `ιObj I κ f ≫ πObj I κ f.hom = f`\nwith `ιObj I κ f` in `I.rlp.llp` and `πObj I κ f.hom` in `I.rlp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.functorialFactorizationData\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorialFactorizationData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.FunctorialFactorizationData\">FunctorialFactorizationData</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L416-L416","name":"CategoryTheory.SmallObject.πObj_naturality_assoc","line":416,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">πObj_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L416-L430","name":"CategoryTheory.SmallObject.πObj_naturality","line":416,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">πObj_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L411-L411","name":"CategoryTheory.SmallObject.ιObj_naturality_assoc","line":411,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιObj_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L411-L414","name":"CategoryTheory.SmallObject.ιObj_naturality","line":411,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιObj_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L405-L405","name":"CategoryTheory.SmallObject.objMap_comp_assoc","line":405,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap_comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap_comp_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">objMap_comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">g</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">h</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span>)</span>)</span> <span class=\"fn\">h✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">ψ</span>)</span> <span class=\"fn\">h✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L405-L409","name":"CategoryTheory.SmallObject.objMap_comp","line":405,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">objMap_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\">g</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">h</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">ψ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L400-L403","name":"CategoryTheory.SmallObject.objMap_id","line":400,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">objMap_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\">objMap</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L395-L398","name":"CategoryTheory.SmallObject.objMap","line":395,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap","doc":"The functoriality of the intermediate object in the\nfactorization of the small object argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.objMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">objMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L390-L391","name":"CategoryTheory.SmallObject.rlp_πObj","line":390,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.rlp_πObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.rlp_πObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">rlp_πObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L364-L388","name":"CategoryTheory.SmallObject.hasRightLiftingProperty_πObj","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasRightLiftingProperty_πObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasRightLiftingProperty_πObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">hasRightLiftingProperty_πObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/LiftingProperties/Basic.html#CategoryTheory.HasLiftingProperty\">HasLiftingProperty</a> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L341-L362","name":"CategoryTheory.SmallObject.πFunctorObj_eq","line":341,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πFunctorObj_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πFunctorObj_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">πFunctorObj_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.πFunctorObj\">πFunctorObj</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObjFObjSuccIso\">relativeCellComplexιObjFObjSuccIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObj\">relativeCellComplexιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.incl\">incl</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">j</span>)</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso\">iterationFunctorObjObjRightIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L333-L339","name":"CategoryTheory.SmallObject.ιFunctorObj_eq","line":333,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιFunctorObj_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιFunctorObj_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιFunctorObj_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ιFunctorObj\">ιFunctorObj</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObj\">relativeCellComplexιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.F\">F</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObjFObjSuccIso\">relativeCellComplexιObjFObjSuccIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L322-L331","name":"CategoryTheory.SmallObject.relativeCellComplexιObjFObjSuccIso","line":322,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObjFObjSuccIso","doc":"When `ιObj I κ f` is considered as a relative `I`-cell complex,\nthe object at the `j`th step is obtained by applying the construction\n`SmallObject.functorObj`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObjFObjSuccIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">relativeCellComplexιObjFObjSuccIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObj\">relativeCellComplexιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.F\">F</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L318-L320","name":"CategoryTheory.SmallObject.llp_rlp_ιObj","line":318,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.llp_rlp_ιObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.llp_rlp_ιObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">llp_rlp_ιObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L312-L316","name":"CategoryTheory.SmallObject.transfiniteCompositionsOfShape_ιObj","line":312,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionsOfShape_ιObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionsOfShape_ιObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">transfiniteCompositionsOfShape_ιObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.coproducts\">MorphismProperty.coproducts.{w, v, u}</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.pushouts\">pushouts</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.transfiniteCompositionsOfShape\">transfiniteCompositionsOfShape</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L300-L310","name":"CategoryTheory.SmallObject.relativeCellComplexιObj","line":300,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObj","doc":"The morphism `ιObj I κ f` is a relative `I`-cell complex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.relativeCellComplexιObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">relativeCellComplexιObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/Basic.html#HomotopicalAlgebra.RelativeCellComplex\">HomotopicalAlgebra.RelativeCellComplex</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L296-L296","name":"CategoryTheory.SmallObject.ιObj_πObj_assoc","line":296,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_πObj_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_πObj_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιObj_πObj_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L296-L298","name":"CategoryTheory.SmallObject.ιObj_πObj","line":296,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_πObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj_πObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιObj_πObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\">ιObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L291-L291","name":"CategoryTheory.SmallObject.πObj_ιIteration_app_right_assoc","line":291,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_ιIteration_app_right_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_ιIteration_app_right_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">πObj_ιIteration_app_right_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\">iteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\">iteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L291-L294","name":"CategoryTheory.SmallObject.πObj_ιIteration_app_right","line":291,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_ιIteration_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj_ιIteration_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">πObj_ιIteration_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\">πObj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\">iteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L286-L289","name":"CategoryTheory.SmallObject.πObj","line":286,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj","doc":"The \"projection\" morphism in the factorization given by\nthe the small object argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.πObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">πObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L282-L284","name":"CategoryTheory.SmallObject.ιObj","line":282,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj","doc":"The \"inclusion\" morphism in the factorization given by\nthe the small object argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\">obj</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L278-L280","name":"CategoryTheory.SmallObject.obj","line":278,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj","doc":"The intermediate object in the factorization given by the\nsmall object argument. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L264-L264","name":"CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_right_right_comp_assoc","line":264,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_right_right_comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_right_right_comp_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorMapSuccAppArrowIso_hom_right_right_comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso\">iterationFunctorMapSuccAppArrowIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L264-L272","name":"CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_right_right_comp","line":264,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_right_right_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_right_right_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorMapSuccAppArrowIso_hom_right_right_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso\">iterationFunctorMapSuccAppArrowIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span>\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L260-L262","name":"CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_left","line":260,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso_hom_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorMapSuccAppArrowIso_hom_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso\">iterationFunctorMapSuccAppArrowIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L241-L258","name":"CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso","line":241,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso","doc":"For any `f : Arrow C` and `j : κ.ord.toType`, the morphism\n`((iterationFunctor I κ).map (homOfLE (Order.le_succ j))).app f` identifies\nto a morphism given by `SmallObject.ε I.homFamily`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorMapSuccAppArrowIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorMapSuccAppArrowIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ε\">ε</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L235-L239","name":"CategoryTheory.SmallObject.prop_iterationFunctor_map_succ","line":235,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.prop_iterationFunctor_map_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.prop_iterationFunctor_map_succ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">prop_iterationFunctor_map_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct\">succStruct</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Iteration/Basic.html#CategoryTheory.SmallObject.SuccStruct.prop\">prop</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">homOfLE</a> <span class=\"fn\">⋯</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L229-L229","name":"CategoryTheory.SmallObject.iterationFunctorObjObjRightIso_ιIteration_app_right_assoc","line":229,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso_ιIteration_app_right_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso_ιIteration_app_right_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorObjObjRightIso_ιIteration_app_right_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\">iteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso\">iterationFunctorObjObjRightIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeιIterationAppRight\">transfiniteCompositionOfShapeιIterationAppRight</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.incl\">incl</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L229-L233","name":"CategoryTheory.SmallObject.iterationFunctorObjObjRightIso_ιIteration_app_right","line":229,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso_ιIteration_app_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso_ιIteration_app_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorObjObjRightIso_ιIteration_app_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso\">iterationFunctorObjObjRightIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeιIterationAppRight\">transfiniteCompositionOfShapeιIterationAppRight</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.incl\">incl</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L222-L227","name":"CategoryTheory.SmallObject.iterationFunctorObjObjRightIso","line":222,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso","doc":"For any `f : Arrow C` and `j : κ.ord.toType`, the object\n`(((iterationFunctor I κ).obj j).obj f).right` identifies to `f.right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctorObjObjRightIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctorObjObjRightIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L217-L217","name":"CategoryTheory.SmallObject.iterationObjRightIso_hom","line":217,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationObjRightIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationObjRightIso_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationObjRightIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationObjRightIso\">iterationObjRightIso</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L215-L220","name":"CategoryTheory.SmallObject.iterationObjRightIso","line":215,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationObjRightIso","doc":"For any `f : Arrow C`, the object `((iteration I κ).obj f).right`\nidentifies to `f.right`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationObjRightIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationObjRightIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\">iteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L211-L213","name":"CategoryTheory.SmallObject.instIsIsoRightAppArrowMapToTypeOrdFunctorIterationFunctor","line":211,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.instIsIsoRightAppArrowMapToTypeOrdFunctorIterationFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.instIsIsoRightAppArrowMapToTypeOrdFunctorIterationFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">instIsIsoRightAppArrowMapToTypeOrdFunctorIterationFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j₁ </span><span class=\"fn\">j₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">j₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L208-L209","name":"CategoryTheory.SmallObject.instIsIsoRightAppArrowιIteration","line":208,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.instIsIsoRightAppArrowιIteration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.instIsIsoRightAppArrowιIteration\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">instIsIsoRightAppArrowιIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L197-L206","name":"CategoryTheory.SmallObject.transfiniteCompositionOfShapeιIterationAppRight","line":197,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeιIterationAppRight","doc":"For any `f : Arrow C`, the map `((ιIteration I κ).app f).right` is\na transfinite composition of isomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeιIterationAppRight\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">transfiniteCompositionOfShapeιIterationAppRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.isomorphisms\">MorphismProperty.isomorphisms</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.TransfiniteCompositionOfShape\">TransfiniteCompositionOfShape</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L191-L195","name":"CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration_F","line":191,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration_F","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration_F\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">transfiniteCompositionOfShapeSuccStructPropιIteration_F</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration\">transfiniteCompositionOfShapeSuccStructPropιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.F\">F</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\">iterationFunctor</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L184-L189","name":"CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration","line":184,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration","doc":"The morphism `ιIteration I κ` is a transfinite composition of shape\n`κ.ord.toType` of morphisms satisfying `(succStruct I κ).prop`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.transfiniteCompositionOfShapeSuccStructPropιIteration\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">transfiniteCompositionOfShapeSuccStructPropιIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct\">succStruct</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Iteration/Basic.html#CategoryTheory.SmallObject.SuccStruct.prop\">prop</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.TransfiniteCompositionOfShape\">TransfiniteCompositionOfShape</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\">ιIteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L179-L182","name":"CategoryTheory.SmallObject.ιIteration","line":179,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration","doc":"The natural \"inclusion\" `𝟭 (Arrow C) ⟶ iteration I κ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.ιIteration\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ιIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\">iteration</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L174-L177","name":"CategoryTheory.SmallObject.iteration","line":174,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration","doc":"The colimit of `iterationFunctor I κ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iteration\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L168-L172","name":"CategoryTheory.SmallObject.iterationFunctor","line":168,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor","doc":"The functor `κ.ord.toType ⥤ Arrow C ⥤ Arrow C` corresponding to the\niterations of the successor structure `succStruct I κ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.iterationFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">iterationFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L152-L166","name":"CategoryTheory.SmallObject.succStruct_prop_le_propArrow","line":152,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct_prop_le_propArrow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct_prop_le_propArrow\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">succStruct_prop_le_propArrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct\">succStruct</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Iteration/Basic.html#CategoryTheory.SmallObject.SuccStruct.prop\">prop</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.propArrow\">propArrow</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.functorCategory\">functorCategory</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L146-L150","name":"CategoryTheory.SmallObject.propArrow","line":146,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.propArrow","doc":"The class of morphisms in `Arrow C` which on the left side are\npushouts of coproducts of morphisms in `I`, and which are\nisomorphisms on the right side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.propArrow\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">propArrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L131-L144","name":"CategoryTheory.SmallObject.attachCellsOfSuccStructProp","line":131,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.attachCellsOfSuccStructProp","doc":"For the successor structure `succStruct I κ` on `Arrow C ⥤ Arrow C`,\nthe morphism from an object to its successor induces\nmorphisms in `C` which consists in attaching `I`-cells. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.attachCellsOfSuccStructProp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsOfSuccStructProp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct\">succStruct</a> <span class=\"fn\">I</span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Iteration/Basic.html#CategoryTheory.SmallObject.SuccStruct.prop\">prop</a></span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells\">HomotopicalAlgebra.AttachCells</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L122-L129","name":"CategoryTheory.SmallObject.succStruct","line":122,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct","doc":"The successor structure on `Arrow C ⥤ Arrow C` corresponding\nto the iterations of the natural transformation\n`ε : 𝟭 (Arrow C) ⟶ SmallObject.functor I.homFamily`\n(see the file `SmallObject.Construction`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.succStruct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">succStruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Iteration/Basic.html#CategoryTheory.SmallObject.SuccStruct\">SuccStruct</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L113-L120","name":"CategoryTheory.SmallObject.hasColimitsOfShape_discrete","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasColimitsOfShape_discrete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasColimitsOfShape_discrete\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">hasColimitsOfShape_discrete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span> <span class=\"fn\">p</span>)</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L108-L111","name":"CategoryTheory.SmallObject.preservesColimit","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.preservesColimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.preservesColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">preservesColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/Basic.html#HomotopicalAlgebra.RelativeCellComplex\">HomotopicalAlgebra.RelativeCellComplex</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span>)</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.F\">F</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">A</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L105-L106","name":"CategoryTheory.SmallObject.hasCoproducts","line":105,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasCoproducts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasCoproducts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">hasCoproducts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproducts\">Limits.HasCoproducts</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L102-L103","name":"CategoryTheory.SmallObject.hasPushouts","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasPushouts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasPushouts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">hasPushouts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L99-L100","name":"CategoryTheory.SmallObject.hasIterationOfShape","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasIterationOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.hasIterationOfShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">hasIterationOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/HasIterationOfShape.html#CategoryTheory.Limits.HasIterationOfShape\">Limits.HasIterationOfShape</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L96-L97","name":"CategoryTheory.SmallObject.locallySmall","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.locallySmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.locallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">locallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L93-L94","name":"CategoryTheory.SmallObject.isSmall","line":93,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.isSmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.SmallObject.isSmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">isSmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/IsSmall.html#CategoryTheory.MorphismProperty.IsSmall\">MorphismProperty.IsSmall.{w, v, u}</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L78-L78","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.preservesColimit","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.preservesColimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.preservesColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">preservesColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">i</span></span> →\n  <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/Basic.html#HomotopicalAlgebra.RelativeCellComplex\">HomotopicalAlgebra.RelativeCellComplex</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span>)</span> <span class=\"fn\">f</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.F\">F</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">A</span>)</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L77-L77","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasIterationOfShape","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasIterationOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasIterationOfShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">hasIterationOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/HasIterationOfShape.html#CategoryTheory.Limits.HasIterationOfShape\">Limits.HasIterationOfShape</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L76-L76","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasCoproducts","line":76,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasCoproducts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasCoproducts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">hasCoproducts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproducts\">Limits.HasCoproducts</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L75-L75","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasPushouts","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasPushouts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.hasPushouts\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">hasPushouts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L74-L74","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.locallySmall","line":74,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.locallySmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.locallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">locallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L73-L73","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.isSmall","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.isSmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.isSmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">isSmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/IsSmall.html#CategoryTheory.MorphismProperty.IsSmall\">IsSmall.{w, v, u}</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L71-L71","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.mk","line":71,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isSmall</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/IsSmall.html#CategoryTheory.MorphismProperty.IsSmall\">IsSmall.{w, v, u}</a> <span class=\"fn\">I</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">locallySmall</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v, u}</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasPushouts</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasCoproducts</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasCoproducts\">Limits.HasCoproducts</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasIterationOfShape</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/HasIterationOfShape.html#CategoryTheory.Limits.HasIterationOfShape\">Limits.HasIterationOfShape</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preservesColimit</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">i</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">i</span></span> →\n      <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/Basic.html#HomotopicalAlgebra.RelativeCellComplex\">HomotopicalAlgebra.RelativeCellComplex</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.homFamily\">homFamily</a></span>)</span> <span class=\"fn\">f</span></span>),\n        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">Limits.PreservesColimit</a> <span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/TransfiniteCompositionOfShape.html#CategoryTheory.TransfiniteCompositionOfShape.F\">F</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">A</span>)</span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.lean#L67-L80","name":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument","line":67,"kind":"class","docLink":"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument","doc":"Given `I : MorphismProperty C` and a regular cardinal `κ : Cardinal.{w}`,\nthis property asserts the technical conditions which allow to proceed\nto the small object argument by doing a construction by transfinite\ninduction indexed by the well ordered type `κ.ord.toType`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">IsCardinalForSmallObjectArgument</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}