{"name":"Mathlib.Order.Category.OmegaCompletePartialOrder","instances":[{"typeNames":["ωCPO","_builtin_typeu"],"name":"ωCPO.instCoeSortType","className":"CoeSort"},{"typeNames":["ωCPO"],"name":"ωCPO.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["ωCPO"],"name":"ωCPO.instConcreteCategoryContinuousHomCarrier","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["ωCPO"],"name":"ωCPO.instInhabited","className":"Inhabited"},{"typeNames":[],"name":"ωCPO.HasProducts.instHasProduct","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["Subtype"],"name":"ωCPO.omegaCompletePartialOrderEqualizer","className":"OmegaCompletePartialOrder"},{"typeNames":["CategoryTheory.Discrete","ωCPO"],"name":"ωCPO.instHasProducts","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"ωCPO.instHasLimitWalkingParallelPairParallelPair","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["ωCPO"],"name":"ωCPO.instHasEqualizers","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["ωCPO"],"name":"ωCPO.instHasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"}],"imports":["Init","Mathlib.Order.OmegaCompletePartialOrder","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.CategoryTheory.Limits.Shapes.Equalizers","Mathlib.CategoryTheory.Limits.Constructions.LimitsOfProductsAndEqualizers","Mathlib.CategoryTheory.ConcreteCategory.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L135-L136","name":"ωCPO.instHasLimits","line":135,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasLimits\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instHasLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L132-L133","name":"ωCPO.instHasEqualizers","line":132,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasEqualizers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasEqualizers\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instHasEqualizers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasEqualizers\">CategoryTheory.Limits.HasEqualizers</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L129-L130","name":"ωCPO.instHasLimitWalkingParallelPairParallelPair","line":129,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasLimitWalkingParallelPairParallelPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasLimitWalkingParallelPairParallelPair\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instHasLimitWalkingParallelPairParallelPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimit\">CategoryTheory.Limits.HasLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L126-L127","name":"ωCPO.instHasProducts","line":126,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasProducts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instHasProducts\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instHasProducts</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProducts\">CategoryTheory.Limits.HasProducts</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L114-L122","name":"ωCPO.HasEqualizers.isEqualizer","line":114,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.isEqualizer","doc":"The equalizer fork is a limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.isEqualizer\"><span class=\"name\">ωCPO</span>.<span class=\"name\">HasEqualizers</span>.<span class=\"name\">isEqualizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.equalizer\">equalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L109-L112","name":"ωCPO.HasEqualizers.equalizer","line":109,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.equalizer","doc":"A construction of the equalizer fork. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.equalizer\"><span class=\"name\">ωCPO</span>.<span class=\"name\">HasEqualizers</span>.<span class=\"name\">equalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork\">CategoryTheory.Limits.Fork</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L104-L107","name":"ωCPO.HasEqualizers.equalizerι","line":104,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.equalizerι","doc":"The equalizer inclusion function as a `ContinuousHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasEqualizers.equalizerι\"><span class=\"name\">ωCPO</span>.<span class=\"name\">HasEqualizers</span>.<span class=\"name\">equalizerι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L93-L100","name":"ωCPO.omegaCompletePartialOrderEqualizer","line":93,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.omegaCompletePartialOrderEqualizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.omegaCompletePartialOrderEqualizer\"><span class=\"name\">ωCPO</span>.<span class=\"name\">omegaCompletePartialOrderEqualizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L88-L89","name":"ωCPO.HasProducts.instHasProduct","line":88,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.instHasProduct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.instHasProduct\"><span class=\"name\">ωCPO</span>.<span class=\"name\">HasProducts</span>.<span class=\"name\">instHasProduct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProduct\">CategoryTheory.Limits.HasProduct</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L76-L86","name":"ωCPO.HasProducts.isProduct","line":76,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.isProduct","doc":"The pi-type is a limit cone for the product. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.isProduct\"><span class=\"name\">ωCPO</span>.<span class=\"name\">HasProducts</span>.<span class=\"name\">isProduct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.product\">product</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L72-L74","name":"ωCPO.HasProducts.product","line":72,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.product","doc":"The pi-type gives a cone for a product. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.HasProducts.product\"><span class=\"name\">ωCPO</span>.<span class=\"name\">HasProducts</span>.<span class=\"name\">product</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan\">CategoryTheory.Limits.Fan</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L63-L64","name":"ωCPO.instInhabited","line":63,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instInhabited\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L59-L61","name":"ωCPO.instConcreteCategoryContinuousHomCarrier","line":59,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instConcreteCategoryContinuousHomCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instConcreteCategoryContinuousHomCarrier\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instConcreteCategoryContinuousHomCarrier</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.carrier\">carrier</a></span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.carrier\">carrier</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L54-L57","name":"ωCPO.instLargeCategory","line":54,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instLargeCategory\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L51-L52","name":"ωCPO.coe_of","line":51,"kind":"theorem","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.coe_of\"><span class=\"name\">ωCPO</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.of\">of</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.carrier\">carrier</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L47-L49","name":"ωCPO.of","line":47,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.of","doc":"Construct a bundled ωCPO from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.of\"><span class=\"name\">ωCPO</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L44-L45","name":"ωCPO.instCoeSortType","line":44,"kind":"instance","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.instCoeSortType\"><span class=\"name\">ωCPO</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L36-L36","name":"ωCPO.str","line":36,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.str\"><span class=\"name\">ωCPO</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L35-L35","name":"ωCPO.carrier","line":35,"kind":"def","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.carrier","doc":"The underlying type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.carrier\"><span class=\"name\">ωCPO</span>.<span class=\"name\">carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L33-L33","name":"ωCPO.mk","line":33,"kind":"ctor","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO.mk\"><span class=\"name\">ωCPO</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">carrier</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">str</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">carrier</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\">ωCPO</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/OmegaCompletePartialOrder.lean#L32-L36","name":"ωCPO","line":32,"kind":"structure","docLink":"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO","doc":"The category of types with an omega complete partial order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/OmegaCompletePartialOrder.html#ωCPO\"><span class=\"name\">ωCPO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}