{"name":"Mathlib.Data.W.Constructions","instances":[{"typeNames":["WType.Natα"],"name":"WType.instInhabitedNatα","className":"Inhabited"},{"typeNames":["WType.Natβ"],"name":"WType.instInhabitedNatβSucc","className":"Inhabited"},{"typeNames":["WType.Listα"],"name":"WType.instInhabitedListα","className":"Inhabited"},{"typeNames":["WType.Listβ"],"name":"WType.instInhabitedListβCons","className":"Inhabited"}],"imports":["Init","Mathlib.Data.W.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L167-L183","name":"WType.ListαEquivPUnitSum","line":167,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.ListαEquivPUnitSum","doc":"`WType.Listα` is equivalent to `γ` with an extra point.\nThis is useful when considering the associated polynomial endofunctor\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.ListαEquivPUnitSum\"><span class=\"name\">WType</span>.<span class=\"name\">ListαEquivPUnitSum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Listα\">Listα</a> <span class=\"fn\">γ</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{v + 1}</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L160-L165","name":"WType.equivList","line":160,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.equivList","doc":"Lists are equivalent to their associated `WType` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.equivList\"><span class=\"name\">WType</span>.<span class=\"name\">equivList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Basic.html#WType\">WType</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Listβ\">Listβ</a> <span class=\"fn\">γ</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L156-L158","name":"WType.rightInverse_list","line":156,"kind":"theorem","docLink":"./Mathlib/Data/W/Constructions.html#WType.rightInverse_list","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.rightInverse_list\"><span class=\"name\">WType</span>.<span class=\"name\">rightInverse_list</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.ofList\">ofList</a> <span class=\"fn\">γ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.toList\">toList</a> <span class=\"fn\">γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L147-L154","name":"WType.leftInverse_list","line":147,"kind":"theorem","docLink":"./Mathlib/Data/W/Constructions.html#WType.leftInverse_list","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.leftInverse_list\"><span class=\"name\">WType</span>.<span class=\"name\">leftInverse_list</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.ofList\">ofList</a> <span class=\"fn\">γ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.toList\">toList</a> <span class=\"fn\">γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L141-L145","name":"WType.toList","line":141,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.toList","doc":"The isomorphism from the `WType` construction of lists to lists "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.toList\"><span class=\"name\">WType</span>.<span class=\"name\">toList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Basic.html#WType\">WType</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Listβ\">Listβ</a> <span class=\"fn\">γ</span>)</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L135-L139","name":"WType.ofList","line":135,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.ofList","doc":"The isomorphism from lists to the `WType` construction of lists "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.ofList\"><span class=\"name\">WType</span>.<span class=\"name\">ofList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">γ</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/W/Basic.html#WType\">WType</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Listβ\">Listβ</a> <span class=\"fn\">γ</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L132-L133","name":"WType.instInhabitedListβCons","line":132,"kind":"instance","docLink":"./Mathlib/Data/W/Constructions.html#WType.instInhabitedListβCons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.instInhabitedListβCons\"><span class=\"name\">WType</span>.<span class=\"name\">instInhabitedListβCons</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Listβ\">Listβ</a> <span class=\"fn\">γ</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Listα.cons\">Listα.cons</a> <span class=\"fn\">hd</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L127-L130","name":"WType.Listβ","line":127,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.Listβ","doc":"The arities of each constructor for lists, `nil` takes no arguments, `cons hd` takes one "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Listβ\"><span class=\"name\">WType</span>.<span class=\"name\">Listβ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Listα\">Listα</a> <span class=\"fn\">γ</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L124-L125","name":"WType.instInhabitedListα","line":124,"kind":"instance","docLink":"./Mathlib/Data/W/Constructions.html#WType.instInhabitedListα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.instInhabitedListα\"><span class=\"name\">WType</span>.<span class=\"name\">instInhabitedListα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Listα\">Listα</a> <span class=\"fn\">γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L122-L122","name":"WType.Listα.cons","line":122,"kind":"ctor","docLink":"./Mathlib/Data/W/Constructions.html#WType.Listα.cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Listα.cons\"><span class=\"name\">WType</span>.<span class=\"name\">Listα</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Listα\">Listα</a> <span class=\"fn\">γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L121-L121","name":"WType.Listα.nil","line":121,"kind":"ctor","docLink":"./Mathlib/Data/W/Constructions.html#WType.Listα.nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Listα.nil\"><span class=\"name\">WType</span>.<span class=\"name\">Listα</span>.<span class=\"name\">nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Listα\">Listα</a> <span class=\"fn\">γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L110-L122","name":"WType.Listα","line":110,"kind":"inductive","docLink":"./Mathlib/Data/W/Constructions.html#WType.Listα","doc":"The constructors for lists.\nThere is \"one constructor `cons x` for each `x : γ`\",\nsince we view `List γ` as\n```\n| nil : List γ\n| cons x₀ : List γ → List γ\n| cons x₁ : List γ → List γ\n|   ⋮      γ many times\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Listα\"><span class=\"name\">WType</span>.<span class=\"name\">Listα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L85-L85","name":"WType.NatαEquivPUnitSumPUnit_apply","line":85,"kind":"theorem","docLink":"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit_apply\"><span class=\"name\">WType</span>.<span class=\"name\">NatαEquivPUnitSumPUnit_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\">Natα</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit\">NatαEquivPUnitSumPUnit</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">c</span> with\n  | <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.zero\">Natα.zero</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <a href=\"./Init/Prelude.html#PUnit.unit\">PUnit.unit</a></span>\n  | <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.succ\">Natα.succ</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#PUnit.unit\">PUnit.unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L85-L85","name":"WType.NatαEquivPUnitSumPUnit_symm_apply","line":85,"kind":"theorem","docLink":"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit_symm_apply\"><span class=\"name\">WType</span>.<span class=\"name\">NatαEquivPUnitSumPUnit_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit\">NatαEquivPUnitSumPUnit</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">b</span> with\n  | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">val</span></span> =&gt; <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.zero\">Natα.zero</a>\n  | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">val</span></span> =&gt; <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.succ\">Natα.succ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L82-L102","name":"WType.NatαEquivPUnitSumPUnit","line":82,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit","doc":"`WType.Natα` is equivalent to `PUnit ⊕ PUnit`.\nThis is useful when considering the associated polynomial endofunctor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.NatαEquivPUnitSumPUnit\"><span class=\"name\">WType</span>.<span class=\"name\">NatαEquivPUnitSumPUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\">Natα</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L73-L78","name":"WType.equivNat","line":73,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.equivNat","doc":"The naturals are equivalent to their associated `WType` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.equivNat\"><span class=\"name\">WType</span>.<span class=\"name\">equivNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Basic.html#WType\">WType</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natβ\">Natβ</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L69-L71","name":"WType.rightInverse_nat","line":69,"kind":"theorem","docLink":"./Mathlib/Data/W/Constructions.html#WType.rightInverse_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.rightInverse_nat\"><span class=\"name\">WType</span>.<span class=\"name\">rightInverse_nat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">Function.RightInverse</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.ofNat\">ofNat</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L59-L67","name":"WType.leftInverse_nat","line":59,"kind":"theorem","docLink":"./Mathlib/Data/W/Constructions.html#WType.leftInverse_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.leftInverse_nat\"><span class=\"name\">WType</span>.<span class=\"name\">leftInverse_nat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.LeftInverse\">Function.LeftInverse</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.ofNat\">ofNat</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.toNat\">toNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L53-L57","name":"WType.toNat","line":53,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.toNat","doc":"The isomorphism from the `WType` of the naturals to the naturals "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.toNat\"><span class=\"name\">WType</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Basic.html#WType\">WType</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natβ\">Natβ</a></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L47-L51","name":"WType.ofNat","line":47,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.ofNat","doc":"The isomorphism from the naturals to its corresponding `WType` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.ofNat\"><span class=\"name\">WType</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/W/Basic.html#WType\">WType</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natβ\">Natβ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L44-L45","name":"WType.instInhabitedNatβSucc","line":44,"kind":"instance","docLink":"./Mathlib/Data/W/Constructions.html#WType.instInhabitedNatβSucc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.instInhabitedNatβSucc\"><span class=\"name\">WType</span>.<span class=\"name\">instInhabitedNatβSucc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/W/Constructions.html#WType.Natβ\">Natβ</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.succ\">Natα.succ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L39-L42","name":"WType.Natβ","line":39,"kind":"def","docLink":"./Mathlib/Data/W/Constructions.html#WType.Natβ","doc":"The arity of the constructors for the naturals, `zero` takes no arguments, `succ` takes one "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Natβ\"><span class=\"name\">WType</span>.<span class=\"name\">Natβ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\">Natα</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L36-L37","name":"WType.instInhabitedNatα","line":36,"kind":"instance","docLink":"./Mathlib/Data/W/Constructions.html#WType.instInhabitedNatα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.instInhabitedNatα\"><span class=\"name\">WType</span>.<span class=\"name\">instInhabitedNatα</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\">Natα</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L34-L34","name":"WType.Natα.succ","line":34,"kind":"ctor","docLink":"./Mathlib/Data/W/Constructions.html#WType.Natα.succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.succ\"><span class=\"name\">WType</span>.<span class=\"name\">Natα</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\">Natα</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L33-L33","name":"WType.Natα.zero","line":33,"kind":"ctor","docLink":"./Mathlib/Data/W/Constructions.html#WType.Natα.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Natα.zero\"><span class=\"name\">WType</span>.<span class=\"name\">Natα</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\">Natα</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/W/Constructions.lean#L31-L34","name":"WType.Natα","line":31,"kind":"inductive","docLink":"./Mathlib/Data/W/Constructions.html#WType.Natα","doc":"The constructors for the naturals "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/W/Constructions.html#WType.Natα\"><span class=\"name\">WType</span>.<span class=\"name\">Natα</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}