{"name":"Mathlib.NumberTheory.ModularForms.EisensteinSeries.UniformConvergence","instances":[],"imports":["Init","Mathlib.Analysis.Complex.UpperHalfPlane.Topology","Mathlib.Analysis.NormedSpace.FunctionSeries","Mathlib.Analysis.PSeries","Mathlib.Order.Interval.Finset.Box","Mathlib.NumberTheory.ModularForms.EisensteinSeries.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L183-L194","name":"EisensteinSeries.eisensteinSeries_tendstoLocallyUniformlyOn","line":183,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.eisensteinSeries_tendstoLocallyUniformlyOn","doc":"Variant of `eisensteinSeries_tendstoLocallyUniformly` formulated with maps `ℂ → ℂ`, which is\nnice to have for holomorphicity later. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.eisensteinSeries_tendstoLocallyUniformlyOn\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">eisensteinSeries_tendstoLocallyUniformlyOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergence.html#TendstoLocallyUniformlyOn\">TendstoLocallyUniformlyOn</a>\n  <span class=\"fn\">(fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.gammaSet\">gammaSet</a> <span class=\"fn\">N</span> <span class=\"fn\">a</span>)</span></span></span>) =&gt;\n    <span class=\"fn\">(fun (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>) =&gt; <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisSummand\">eisSummand</a> <span class=\"fn\">k</span> <span class=\"fn\">(↑<span class=\"fn\">x</span>)</span> <span class=\"fn\">z</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Topology.html#UpperHalfPlane.ofComplex\">UpperHalfPlane.ofComplex</a></span>)</span>\n  (<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisensteinSeries_SIF\">eisensteinSeries_SIF</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Topology.html#UpperHalfPlane.ofComplex\">UpperHalfPlane.ofComplex</a></span>) <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">z</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L167-L181","name":"EisensteinSeries.eisensteinSeries_tendstoLocallyUniformly","line":167,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.eisensteinSeries_tendstoLocallyUniformly","doc":"The sum defining the Eisenstein series (of weight `k` and level `Γ(N)` with congruence\ncondition `a : Fin 2 → ZMod N`) converges locally uniformly on `ℍ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.eisensteinSeries_tendstoLocallyUniformly\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">eisensteinSeries_tendstoLocallyUniformly</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergence.html#TendstoLocallyUniformly\">TendstoLocallyUniformly</a> <span class=\"fn\">(fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.gammaSet\">gammaSet</a> <span class=\"fn\">N</span> <span class=\"fn\">a</span>)</span></span></span>) (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>) =&gt; <span class=\"fn\">∑ <span class=\"fn\">x_1</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#EisensteinSeries.eisSummand\">eisSummand</a> <span class=\"fn\">k</span> <span class=\"fn\">(↑<span class=\"fn\">x_1</span>)</span> <span class=\"fn\">x</span></span></span>)</span>\n  <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/Defs.html#eisensteinSeries\">eisensteinSeries</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L148-L165","name":"EisensteinSeries.summable_one_div_norm_rpow","line":148,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.summable_one_div_norm_rpow","doc":"The function `ℤ ^ 2 → ℝ` given by `x ↦ ‖x‖ ^ (-k)` is summable if `2 < k`. We prove this by\nsplitting into boxes using `Finset.box`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.summable_one_div_norm_rpow\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">summable_one_div_norm_rpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>) =&gt; <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L137-L142","name":"EisensteinSeries.summand_bound_of_mem_verticalStrip","line":137,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.summand_bound_of_mem_verticalStrip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.summand_bound_of_mem_verticalStrip\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">summand_bound_of_mem_verticalStrip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Topology.html#UpperHalfPlane.verticalStrip\">UpperHalfPlane.verticalStrip</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">1</span>)</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">⟨<span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">A</span>, <span class=\"fn\">im</span> := <span class=\"fn\">B</span> }</span>, <span class=\"fn\">hB</span>⟩</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L123-L134","name":"EisensteinSeries.summand_bound","line":123,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.summand_bound","doc":"Upper bound for the summand `|c * z + d| ^ (-k)`, as a product of a function of `z` and a\nfunction of `c, d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.summand_bound\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">summand_bound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">1</span>)</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">k</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L113-L121","name":"EisensteinSeries.r_mul_max_le","line":113,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r_mul_max_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r_mul_max_le\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r_mul_max_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">1</span>)</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L99-L111","name":"EisensteinSeries.div_max_sq_ge_one","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.div_max_sq_ge_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.div_max_sq_ge_one\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">div_max_sq_ge_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L93-L97","name":"EisensteinSeries.auxbound2","line":93,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.auxbound2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.auxbound2\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">auxbound2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L85-L91","name":"EisensteinSeries.auxbound1","line":85,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.auxbound1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.auxbound1\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">auxbound1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L76-L83","name":"EisensteinSeries.r_lower_bound_on_verticalStrip","line":76,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r_lower_bound_on_verticalStrip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r_lower_bound_on_verticalStrip\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r_lower_bound_on_verticalStrip</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Topology.html#UpperHalfPlane.verticalStrip\">UpperHalfPlane.verticalStrip</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">⟨<span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">A</span>, <span class=\"fn\">im</span> := <span class=\"fn\">B</span> }</span>, <span class=\"fn\">h</span>⟩</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L73-L74","name":"EisensteinSeries.r_pos","line":73,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r_pos\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\">r</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L69-L71","name":"EisensteinSeries.r","line":69,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r","doc":"This function is used to give an upper bound on the summands in Eisenstein series; it is\ndefined by `z ↦ min z.im √(z.im ^ 2 / (z.re ^ 2 + z.im ^ 2))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L59-L67","name":"EisensteinSeries.r1_aux_bound","line":59,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1_aux_bound","doc":"For `c, d ∈ ℝ` with `1 ≤ d ^ 2`, we have `r1 z ≤ |c * z + d| ^ 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1_aux_bound\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r1_aux_bound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1\">r1</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L55-L57","name":"EisensteinSeries.r1_pos","line":55,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1_pos\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r1_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1\">r1</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L52-L53","name":"EisensteinSeries.r1_eq","line":52,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1_eq\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r1_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1\">r1</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> ((<span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L48-L50","name":"EisensteinSeries.r1","line":48,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1","doc":"Auxiliary function used for bounding Eisenstein series, defined as\n`z.im ^ 2 / (z.re ^ 2 + z.im ^ 2)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.r1\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">r1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean#L41-L44","name":"EisensteinSeries.norm_eq_max_natAbs","line":41,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.norm_eq_max_natAbs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.html#EisensteinSeries.norm_eq_max_natAbs\"><span class=\"name\">EisensteinSeries</span>.<span class=\"name\">norm_eq_max_natAbs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">1</span>)</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>)</span></div></div>"}]}