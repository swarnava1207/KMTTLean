{"name":"Mathlib.SetTheory.PGame.Basic","instances":[{"typeNames":["SetTheory.PGame","SetTheory.PGame.Subsequent"],"name":"SetTheory.PGame.instIsTransSubsequent","className":"IsTrans"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instWellFoundedRelation","className":"WellFoundedRelation"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instZero","className":"Zero"},{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.isEmpty_zero_leftMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.isEmpty_zero_rightMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instInhabited","className":"Inhabited"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instOnePGame","className":"One"},{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.uniqueOneLeftMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.isEmpty_one_rightMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instIsReflIdentical","className":"IsRefl"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instIsSymmIdentical","className":"IsSymm"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instIsTransIdentical","className":"IsTrans"},{"typeNames":["SetTheory.PGame"],"name":"SetTheory.PGame.instIsEquivIdentical","className":"IsEquiv"},{"typeNames":["SetTheory.PGame.Relabelling"],"name":"SetTheory.PGame.Relabelling.instInhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Notation.Defs","Mathlib.Data.Nat.Basic","Mathlib.Logic.Equiv.Defs","Mathlib.Tactic.Convert"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L593-L597","name":"SetTheory.PGame.insertRight_insertLeft","line":593,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight_insertLeft","doc":"Inserting on the left and right commutes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight_insertLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">insertRight_insertLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">x' </span><span class=\"fn\">x''</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertLeft\">insertLeft</a></span> <span class=\"fn\">x'</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight\">insertRight</a></span> <span class=\"fn\">x''</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight\">insertRight</a></span> <span class=\"fn\">x''</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertLeft\">insertLeft</a></span> <span class=\"fn\">x'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L588-L591","name":"SetTheory.PGame.insertRight","line":588,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight","doc":"The pregame constructed by inserting `x'` as a new right option into x. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">insertRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">x'</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L583-L586","name":"SetTheory.PGame.insertLeft","line":583,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertLeft","doc":"The pregame constructed by inserting `x'` as a new left option into x. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">insertLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">x'</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L575-L579","name":"SetTheory.PGame.relabelRelabelling","line":575,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabelRelabelling","doc":"The game obtained by relabelling the next moves is a relabelling of the original game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabelRelabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">relabelRelabelling</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl' </span><span class=\"fn\">xr'</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">el</span> : <span class=\"fn\">xl'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">er</span> : <span class=\"fn\">xr'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel\">relabel</a> <span class=\"fn\">el</span> <span class=\"fn\">er</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L572-L573","name":"SetTheory.PGame.relabel_moveRight","line":572,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">relabel_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl' </span><span class=\"fn\">xr'</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">el</span> : <span class=\"fn\">xl'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">er</span> : <span class=\"fn\">xr'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel\">relabel</a> <span class=\"fn\">el</span> <span class=\"fn\">er</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">er</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L567-L570","name":"SetTheory.PGame.relabel_moveRight'","line":567,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveRight'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveRight'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">relabel_moveRight'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl' </span><span class=\"fn\">xr'</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">el</span> : <span class=\"fn\">xl'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">er</span> : <span class=\"fn\">xr'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">xr'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel\">relabel</a> <span class=\"fn\">el</span> <span class=\"fn\">er</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">er</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L564-L565","name":"SetTheory.PGame.relabel_moveLeft","line":564,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">relabel_moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl' </span><span class=\"fn\">xr'</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">el</span> : <span class=\"fn\">xl'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">er</span> : <span class=\"fn\">xr'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel\">relabel</a> <span class=\"fn\">el</span> <span class=\"fn\">er</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">el</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L559-L562","name":"SetTheory.PGame.relabel_moveLeft'","line":559,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveLeft'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel_moveLeft'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">relabel_moveLeft'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl' </span><span class=\"fn\">xr'</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">el</span> : <span class=\"fn\">xl'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">er</span> : <span class=\"fn\">xr'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">xl'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel\">relabel</a> <span class=\"fn\">el</span> <span class=\"fn\">er</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">el</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L555-L557","name":"SetTheory.PGame.relabel","line":555,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel","doc":"Replace the types indexing the next moves for Left and Right by equivalent types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.relabel\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl' </span><span class=\"fn\">xr'</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">el</span> : <span class=\"fn\">xl'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">er</span> : <span class=\"fn\">xr'</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L549-L551","name":"SetTheory.PGame.Relabelling.isEmpty","line":549,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.isEmpty","doc":"Any game without left or right moves is a relabelling of 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.isEmpty\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L543-L547","name":"SetTheory.PGame.Relabelling.trans","line":543,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.trans","doc":"Transitivity of relabelling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.trans\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L538-L541","name":"SetTheory.PGame.Relabelling.symm","line":538,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.symm","doc":"Flip a relabelling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.symm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L535-L536","name":"SetTheory.PGame.Relabelling.instInhabited","line":535,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.instInhabited\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L529-L533","name":"SetTheory.PGame.Relabelling.refl","line":529,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.refl","doc":"The identity relabelling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.refl\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L524-L527","name":"SetTheory.PGame.Relabelling.moveRightSymm","line":524,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveRightSymm","doc":"A right move of `y` is a relabelling of a right move of `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveRightSymm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">moveRightSymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.rightMovesEquiv\">rightMovesEquiv</a></span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L519-L522","name":"SetTheory.PGame.Relabelling.moveRight","line":519,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveRight","doc":"A right move of `x` is a relabelling of a right move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.rightMovesEquiv\">rightMovesEquiv</a></span> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L514-L517","name":"SetTheory.PGame.Relabelling.moveLeftSymm","line":514,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveLeftSymm","doc":"A left move of `y` is a relabelling of a left move of `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveLeftSymm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">moveLeftSymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.leftMovesEquiv\">leftMovesEquiv</a></span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L510-L512","name":"SetTheory.PGame.Relabelling.moveLeft","line":510,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveLeft","doc":"A left move of `x` is a relabelling of a left move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.leftMovesEquiv\">leftMovesEquiv</a></span> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L505-L508","name":"SetTheory.PGame.Relabelling.mk'_rightMovesEquiv","line":505,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'_rightMovesEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'_rightMovesEquiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">mk'_rightMovesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hL</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hR</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span> <span class=\"fn\">hL</span> <span class=\"fn\">hR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.rightMovesEquiv\">rightMovesEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L501-L503","name":"SetTheory.PGame.Relabelling.mk_rightMovesEquiv","line":501,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk_rightMovesEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk_rightMovesEquiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">mk_rightMovesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hL</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hR</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk\">mk</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span> <span class=\"fn\">hL</span> <span class=\"fn\">hR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.rightMovesEquiv\">rightMovesEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L497-L499","name":"SetTheory.PGame.Relabelling.rightMovesEquiv","line":497,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.rightMovesEquiv","doc":"The equivalence between right moves of `x` and `y` given by the relabelling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.rightMovesEquiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">rightMovesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L492-L495","name":"SetTheory.PGame.Relabelling.mk'_leftMovesEquiv","line":492,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'_leftMovesEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'_leftMovesEquiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">mk'_leftMovesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hL</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hR</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span> <span class=\"fn\">hL</span> <span class=\"fn\">hR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.leftMovesEquiv\">leftMovesEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L488-L490","name":"SetTheory.PGame.Relabelling.mk_leftMovesEquiv","line":488,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk_leftMovesEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk_leftMovesEquiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">mk_leftMovesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hL</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hR</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk\">mk</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span> <span class=\"fn\">hL</span> <span class=\"fn\">hR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.leftMovesEquiv\">leftMovesEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L484-L486","name":"SetTheory.PGame.Relabelling.leftMovesEquiv","line":484,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.leftMovesEquiv","doc":"The equivalence between left moves of `x` and `y` given by the relabelling. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.leftMovesEquiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">leftMovesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L478-L482","name":"SetTheory.PGame.Relabelling.mk'","line":478,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'","doc":"A constructor for relabellings swapping the equivalences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hL</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hR</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L471-L472","name":"SetTheory.PGame.«term_≡r_»","line":471,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_≡r_»","doc":"`Relabelling x y` says that `x` and `y` are really the same game, just dressed up differently.\nSpecifically, there is a bijection between the moves for Left in `x` and in `y`, and similarly\nfor Right, and under these bijections we inductively have `Relabelling`s for the consequent games.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_≡r_»\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">«term_≡r_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L465-L469","name":"SetTheory.PGame.Relabelling.mk","line":465,"kind":"ctor","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>)</span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">j</span>)</span>)</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L460-L469","name":"SetTheory.PGame.Relabelling","line":460,"kind":"inductive","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling","doc":"`Relabelling x y` says that `x` and `y` are really the same game, just dressed up differently.\nSpecifically, there is a bijection between the moves for Left in `x` and in `y`, and similarly\nfor Right, and under these bijections we inductively have `Relabelling`s for the consequent games.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Type</a> (u + 1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L451-L455","name":"SetTheory.PGame.Identical.of_equiv","line":451,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.of_equiv\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">i</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">i</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L440-L449","name":"SetTheory.PGame.Identical.of_fn","line":440,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.of_fn","doc":"Show `x ≡ y` by giving an explicit correspondence between the moves of `x` and `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.of_fn\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">of_fn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">il</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ir</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">i</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hil</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">(<span class=\"fn\">il</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">i</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hir</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">(<span class=\"fn\">ir</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L437-L438","name":"SetTheory.PGame.Identical.congr_left","line":437,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.congr_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.congr_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">congr_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L434-L435","name":"SetTheory.PGame.Identical.congr_right","line":434,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.congr_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.congr_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">congr_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L431-L432","name":"SetTheory.PGame.Identical.ext_iff","line":431,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.ext_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L426-L429","name":"SetTheory.PGame.Identical.ext","line":426,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.ext\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">y</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">y</span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L422-L424","name":"SetTheory.PGame.memᵣ.congr_left","line":422,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ.congr_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ.congr_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memᵣ</span>.<span class=\"name\">congr_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L418-L420","name":"SetTheory.PGame.memₗ.congr_left","line":418,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ.congr_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ.congr_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memₗ</span>.<span class=\"name\">congr_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L412-L416","name":"SetTheory.PGame.memᵣ.congr_right","line":412,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ.congr_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ.congr_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memᵣ</span>.<span class=\"name\">congr_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L406-L410","name":"SetTheory.PGame.memₗ.congr_right","line":406,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ.congr_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ.congr_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memₗ</span>.<span class=\"name\">congr_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L396-L404","name":"SetTheory.PGame.identical_iff'","line":396,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_iff'","doc":"Uses `∈ₗ` and `∈ᵣ` instead of `≡`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_iff'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">identical_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   (<span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">x</span></span></span>) <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L394-L394","name":"SetTheory.PGame.identical_of_eq","line":394,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_of_eq\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">identical_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L388-L392","name":"SetTheory.PGame.Identical.moveRight","line":388,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.moveRight","doc":"If `x` and `y` are identical, then a right move of `x` is identical to some right move of `y`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L383-L386","name":"SetTheory.PGame.Identical.moveLeft","line":383,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.moveLeft","doc":"If `x` and `y` are identical, then a left move of `x` is identical to some left move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">j</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">j</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L381-L381","name":"SetTheory.PGame.instIsEquivIdentical","line":381,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsEquivIdentical","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsEquivIdentical\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instIsEquivIdentical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsEquiv\">IsEquiv</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L380-L380","name":"SetTheory.PGame.instIsTransIdentical","line":380,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsTransIdentical","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsTransIdentical\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instIsTransIdentical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsTrans\">IsTrans</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L379-L379","name":"SetTheory.PGame.instIsSymmIdentical","line":379,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsSymmIdentical","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsSymmIdentical\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instIsSymmIdentical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsSymm\">IsSymm</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L378-L378","name":"SetTheory.PGame.instIsReflIdentical","line":378,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsReflIdentical","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsReflIdentical\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instIsReflIdentical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsRefl\">IsRefl</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L374-L376","name":"SetTheory.PGame.identicalSetoid","line":374,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identicalSetoid","doc":"`Identical` as a `Setoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identicalSetoid\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">identicalSetoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L369-L372","name":"SetTheory.PGame.identical_of_isEmpty","line":369,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_of_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_of_isEmpty\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">identical_of_isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L367-L367","name":"SetTheory.PGame.moveRight_memᵣ","line":367,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight_memᵣ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight_memᵣ\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_memᵣ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L366-L366","name":"SetTheory.PGame.moveLeft_memₗ","line":366,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft_memₗ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft_memₗ\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_memₗ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L365-L365","name":"SetTheory.PGame.memᵣ_def","line":365,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memᵣ_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\">memᵣ</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L364-L364","name":"SetTheory.PGame.memₗ_def","line":364,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memₗ_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\">memₗ</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L362-L362","name":"SetTheory.PGame.«binderTerm∈ᵣ_»","line":362,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«binderTerm∈ᵣ_»","doc":"`x ∈ᵣ y` if `x` is identical to some right move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«binderTerm∈ᵣ_»\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">«binderTerm∈ᵣ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L361-L361","name":"SetTheory.PGame.«binderTerm∈ₗ_»","line":361,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«binderTerm∈ₗ_»","doc":"`x ∈ₗ y` if `x` is identical to some left move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«binderTerm∈ₗ_»\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">«binderTerm∈ₗ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L360-L360","name":"SetTheory.PGame.«term_∈ᵣ_»","line":360,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_∈ᵣ_»","doc":"`x ∈ᵣ y` if `x` is identical to some right move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_∈ᵣ_»\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">«term_∈ᵣ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L359-L359","name":"SetTheory.PGame.«term_∈ₗ_»","line":359,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_∈ₗ_»","doc":"`x ∈ₗ y` if `x` is identical to some left move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_∈ₗ_»\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">«term_∈ₗ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L356-L357","name":"SetTheory.PGame.memᵣ","line":356,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ","doc":"`x ∈ᵣ y` if `x` is identical to some right move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memᵣ\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memᵣ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L353-L354","name":"SetTheory.PGame.memₗ","line":353,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ","doc":"`x ∈ₗ y` if `x` is identical to some left move of `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.memₗ\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">memₗ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L349-L351","name":"SetTheory.PGame.Identical.trans","line":349,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.trans\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L346-L347","name":"SetTheory.PGame.identical_comm","line":346,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_comm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">identical_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L343-L344","name":"SetTheory.PGame.Identical.symm","line":343,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.symm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L341-L341","name":"SetTheory.PGame.Identical.rfl","line":341,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.rfl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.rfl\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">rfl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L338-L339","name":"SetTheory.PGame.Identical.refl","line":338,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical.refl\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L334-L336","name":"SetTheory.PGame.identical_iff","line":334,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.identical_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">identical_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(<a href=\"./Mathlib/Logic/Relator.html#Relator.BiTotal\">Relator.BiTotal</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) (<span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">x1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">x2</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/Logic/Relator.html#Relator.BiTotal\">Relator.BiTotal</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) (<span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">x1</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\">Identical</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">x2</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L332-L332","name":"SetTheory.PGame.«term_≡_»","line":332,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_≡_»","doc":"Two pre-games are identical if their left and right sets are identical.\nThat is, `Identical x y` if every left move of `x` is identical to some left move of `y`,\nevery right move of `x` is identical to some right move of `y`, and vice versa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.«term_≡_»\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">«term_≡_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L324-L330","name":"SetTheory.PGame.Identical","line":324,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical","doc":"Two pre-games are identical if their left and right sets are identical.\nThat is, `Identical x y` if every left move of `x` is identical to some left move of `y`,\nevery right move of `x` is identical to some right move of `y`, and vice versa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Identical\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Identical</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L319-L320","name":"SetTheory.PGame.isEmpty_one_rightMoves","line":319,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isEmpty_one_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isEmpty_one_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_one_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L316-L317","name":"SetTheory.PGame.uniqueOneLeftMoves","line":316,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.uniqueOneLeftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.uniqueOneLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniqueOneLeftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L312-L314","name":"SetTheory.PGame.one_rightMoves","line":312,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.one_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.one_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">one_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PEmpty\">PEmpty.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L308-L310","name":"SetTheory.PGame.one_moveLeft","line":308,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.one_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.one_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">one_moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a> <span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L304-L306","name":"SetTheory.PGame.one_leftMoves","line":304,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.one_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.one_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">one_leftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L300-L302","name":"SetTheory.PGame.instOnePGame","line":300,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instOnePGame","doc":"The pre-game `One` is defined by `1 = { 0 | }`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instOnePGame\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instOnePGame</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L297-L298","name":"SetTheory.PGame.instInhabited","line":297,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instInhabited\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L294-L295","name":"SetTheory.PGame.isEmpty_zero_rightMoves","line":294,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isEmpty_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isEmpty_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L291-L292","name":"SetTheory.PGame.isEmpty_zero_leftMoves","line":291,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isEmpty_zero_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isEmpty_zero_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_zero_leftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L287-L289","name":"SetTheory.PGame.zero_rightMoves","line":287,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PEmpty\">PEmpty.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L283-L285","name":"SetTheory.PGame.zero_leftMoves","line":283,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.zero_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.zero_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">zero_leftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PEmpty\">PEmpty.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L279-L281","name":"SetTheory.PGame.instZero","line":279,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instZero","doc":"The pre-game `Zero` is defined by `0 = { | }`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instZero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L272-L274","name":"SetTheory.PGame.Subsequent.moveLeft_mk_right","line":272,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveLeft_mk_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveLeft_mk_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">moveLeft_mk_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">xr</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L268-L270","name":"SetTheory.PGame.Subsequent.moveLeft_mk_left","line":268,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveLeft_mk_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveLeft_mk_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">moveLeft_mk_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">xl</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L264-L266","name":"SetTheory.PGame.Subsequent.moveRight_mk_right","line":264,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveRight_mk_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveRight_mk_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">moveRight_mk_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">xr</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L260-L262","name":"SetTheory.PGame.Subsequent.moveRight_mk_left","line":260,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveRight_mk_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveRight_mk_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">moveRight_mk_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">xl</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L255-L258","name":"SetTheory.PGame.Subsequent.mk_right'","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.mk_right'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.mk_right'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">mk_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L242-L246","name":"SetTheory.PGame.tacticPgame_wf_tac","line":242,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.tacticPgame_wf_tac","doc":"Discharges proof obligations of the form `⊢ Subsequent ..` arising in termination proofs\nof definitions using well-founded recursion on `PGame`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.tacticPgame_wf_tac\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">tacticPgame_wf_tac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L233-L236","name":"SetTheory.PGame.Subsequent.mk_right","line":233,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.mk_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.mk_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">mk_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">xr</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L228-L231","name":"SetTheory.PGame.Subsequent.mk_left","line":228,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.mk_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.mk_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">mk_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">xl</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L224-L226","name":"SetTheory.PGame.Subsequent.moveRight","line":224,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L220-L222","name":"SetTheory.PGame.Subsequent.moveLeft","line":220,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L217-L218","name":"SetTheory.PGame.instWellFoundedRelation","line":217,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instWellFoundedRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instWellFoundedRelation\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instWellFoundedRelation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFoundedRelation\">WellFoundedRelation</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L214-L215","name":"SetTheory.PGame.wf_subsequent","line":214,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.wf_subsequent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.wf_subsequent\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">wf_subsequent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L210-L212","name":"SetTheory.PGame.Subsequent.trans","line":210,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent.trans\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L207-L208","name":"SetTheory.PGame.instIsTransSubsequent","line":207,"kind":"instance","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsTransSubsequent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.instIsTransSubsequent\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">instIsTransSubsequent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsTrans\">IsTrans</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\">Subsequent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L202-L205","name":"SetTheory.PGame.Subsequent","line":202,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent","doc":"`Subsequent x y` says that `x` can be obtained by playing some nonempty sequence of moves from\n`y`. It is the transitive closure of `IsOption`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Subsequent\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Subsequent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L194-L200","name":"SetTheory.PGame.wf_isOption","line":194,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.wf_isOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.wf_isOption\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">wf_isOption</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L190-L192","name":"SetTheory.PGame.IsOption.mk_right","line":190,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.mk_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.mk_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">IsOption</span>.<span class=\"name\">mk_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">xr</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xR</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L186-L188","name":"SetTheory.PGame.IsOption.mk_left","line":186,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.mk_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.mk_left\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">IsOption</span>.<span class=\"name\">mk_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">xl</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">xL</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L184-L184","name":"SetTheory.PGame.IsOption.moveRight","line":184,"kind":"ctor","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">IsOption</span>.<span class=\"name\">moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L183-L183","name":"SetTheory.PGame.IsOption.moveLeft","line":183,"kind":"ctor","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption.moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">IsOption</span>.<span class=\"name\">moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L181-L181","name":"SetTheory.PGame.isOption_iff","line":181,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isOption_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.isOption_iff\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isOption_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝ </span><span class=\"fn\">a✝¹</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span> <span class=\"fn\">a✝¹</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> (<a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">a✝¹</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">a✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝¹</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span>) <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><span class=\"fn\">a✝¹</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">a✝</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝¹</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L180-L184","name":"SetTheory.PGame.IsOption","line":180,"kind":"inductive","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption","doc":"`IsOption x y` means that `x` is either a left or right option for `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">IsOption</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L172-L178","name":"SetTheory.PGame.moveRecOn","line":172,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRecOn","doc":"A variant of `PGame.recOn` expressed in terms of `PGame.moveLeft` and `PGame.moveRight`.\n\nBoth this and `PGame.recOn` describe Conway induction on games. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRecOn\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IH</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>) → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">y</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L168-L170","name":"SetTheory.PGame.ofLists_moveRight","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ofLists_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">i</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">R</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L163-L166","name":"SetTheory.PGame.ofLists_moveRight'","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveRight'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveRight'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ofLists_moveRight'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">R</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L159-L161","name":"SetTheory.PGame.ofLists_moveLeft","line":159,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ofLists_moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">{ <span class=\"fn\">down</span> := <span class=\"fn\">i</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L154-L157","name":"SetTheory.PGame.ofLists_moveLeft'","line":154,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveLeft'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists_moveLeft'\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ofLists_moveLeft'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L148-L152","name":"SetTheory.PGame.toOfListsRightMoves","line":148,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.toOfListsRightMoves","doc":"Converts a number into a right move for `ofLists`.\n\nThis is just an abbreviation for `Equiv.ulift.symm` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.toOfListsRightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toOfListsRightMoves</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L142-L146","name":"SetTheory.PGame.toOfListsLeftMoves","line":142,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.toOfListsLeftMoves","doc":"Converts a number into a left move for `ofLists`.\n\nThis is just an abbreviation for `Equiv.ulift.symm` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.toOfListsLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">toOfListsLeftMoves</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L139-L140","name":"SetTheory.PGame.rightMoves_ofLists","line":139,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.rightMoves_ofLists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.rightMoves_ofLists\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">rightMoves_ofLists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, 0}</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L136-L137","name":"SetTheory.PGame.leftMoves_ofLists","line":136,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.leftMoves_ofLists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.leftMoves_ofLists\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leftMoves_ofLists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\">ofLists</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, 0}</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L131-L134","name":"SetTheory.PGame.ofLists","line":131,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists","doc":"Construct a pre-game from list of pre-games describing the available moves for Left and Right.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ofLists\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ofLists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L120-L128","name":"SetTheory.PGame.ext","line":120,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.ext\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hL</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hR</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L116-L118","name":"SetTheory.PGame.moveRight_mk","line":116,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight_mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">xR</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L112-L114","name":"SetTheory.PGame.rightMoves_mk","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.rightMoves_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.rightMoves_mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">rightMoves_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">xr</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L108-L110","name":"SetTheory.PGame.moveLeft_mk","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft_mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">xL</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L104-L106","name":"SetTheory.PGame.leftMoves_mk","line":104,"kind":"theorem","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.leftMoves_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.leftMoves_mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">leftMoves_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xl </span><span class=\"fn\">xr</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xL</span> : <span class=\"fn\"><span class=\"fn\">xl</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xR</span> : <span class=\"fn\"><span class=\"fn\">xr</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">xl</span> <span class=\"fn\">xr</span> <span class=\"fn\">xL</span> <span class=\"fn\">xR</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">xl</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L100-L102","name":"SetTheory.PGame.moveRight","line":100,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight","doc":"The new game after Right makes an allowed move. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L96-L98","name":"SetTheory.PGame.moveLeft","line":96,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft","doc":"The new game after Left makes an allowed move. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L92-L94","name":"SetTheory.PGame.RightMoves","line":92,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves","doc":"The indexing type for allowable moves by Right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">RightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L88-L90","name":"SetTheory.PGame.LeftMoves","line":88,"kind":"def","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves","doc":"The indexing type for allowable moves by Left. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">LeftMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L83-L83","name":"SetTheory.PGame.mk","line":83,"kind":"ctor","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">β</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/PGame/Basic.lean#L75-L83","name":"SetTheory.PGame","line":75,"kind":"inductive","docLink":"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame","doc":"The type of pre-games, before we have quotiented\nby equivalence (`PGame.Setoid`). In ZFC, a combinatorial game is constructed from\ntwo sets of combinatorial games that have been constructed at an earlier\nstage. To do this in type theory, we say that a pre-game is built\ninductively from two families of pre-games indexed over any type\nin Type u. The resulting type `PGame.{u}` lives in `Type (u+1)`,\nreflecting that it is a proper class in ZFC. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}