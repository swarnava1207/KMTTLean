{"name":"Mathlib.AlgebraicTopology.SimplexCategory.GeneratorsRelations.Basic","instances":[{"typeNames":["FreeSimplexQuiver"],"name":"FreeSimplexQuiver.quiv","className":"Quiver"},{"typeNames":["SimplexCategoryGenRel"],"name":"instSimplexCategoryGenRelCategory","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplexCategory.Basic","Mathlib.CategoryTheory.PathCategory.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L273-L275","name":"SimplexCategoryGenRel.toSimplexCategory_len","line":273,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_len","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_len\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">toSimplexCategory_len</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\">toSimplexCategory</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L269-L271","name":"SimplexCategoryGenRel.toSimplexCategory_map_σ","line":269,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_map_σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_map_σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">toSimplexCategory_map_σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\">toSimplexCategory</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Basic.html#SimplexCategory.σ\">SimplexCategory.σ</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L265-L267","name":"SimplexCategoryGenRel.toSimplexCategory_map_δ","line":265,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_map_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_map_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">toSimplexCategory_map_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\">toSimplexCategory</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Basic.html#SimplexCategory.δ\">SimplexCategory.δ</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L262-L263","name":"SimplexCategoryGenRel.toSimplexCategory_obj_mk","line":262,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_obj_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory_obj_mk\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">toSimplexCategory_obj_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\">toSimplexCategory</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L245-L260","name":"SimplexCategoryGenRel.toSimplexCategory","line":245,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory","doc":"The canonical functor from `SimplexCategoryGenRel` to SimplexCategory, which exists as the\nsimplicial identities hold in `SimplexCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">toSimplexCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L238-L241","name":"SimplexCategoryGenRel.σ_comp_σ_nat","line":238,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ_comp_σ_nat","doc":"A version of σ_comp_σ with indices in ℕ satisfying relevant inequalities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ_comp_σ_nat\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">σ_comp_σ_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">⋯</span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">⟨<span class=\"fn\">j</span>, <span class=\"fn\">hj</span>⟩</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">⟨<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>, <span class=\"fn\">⋯</span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">hi</span>⟩</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L233-L236","name":"SimplexCategoryGenRel.δ_comp_δ_nat","line":233,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_δ_nat","doc":"A version of δ_comp_δ with indices in ℕ satisfying relevant inequalities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_δ_nat\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_δ_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">hi</span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">⟨<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>, <span class=\"fn\">⋯</span>⟩</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">⟨<span class=\"fn\">j</span>, <span class=\"fn\">hj</span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">⋯</span>⟩</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L227-L227","name":"SimplexCategoryGenRel.σ_comp_σ_assoc","line":227,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ_comp_σ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ_comp_σ_assoc\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">σ_comp_σ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L227-L231","name":"SimplexCategoryGenRel.σ_comp_σ","line":227,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ_comp_σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ_comp_σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">σ_comp_σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L221-L221","name":"SimplexCategoryGenRel.δ_comp_σ_of_gt_assoc","line":221,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_gt_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_gt_assoc\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_of_gt_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L221-L225","name":"SimplexCategoryGenRel.δ_comp_σ_of_gt","line":221,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_gt\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_of_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L216-L216","name":"SimplexCategoryGenRel.δ_comp_σ_succ_assoc","line":216,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_succ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_succ_assoc\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_succ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L216-L219","name":"SimplexCategoryGenRel.δ_comp_σ_succ","line":216,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_succ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L210-L210","name":"SimplexCategoryGenRel.δ_comp_σ_self_assoc","line":210,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_self_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_self_assoc\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_self_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L210-L214","name":"SimplexCategoryGenRel.δ_comp_σ_self","line":210,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_self\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L204-L204","name":"SimplexCategoryGenRel.δ_comp_σ_of_le_assoc","line":204,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_le_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_le_assoc\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_of_le_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L204-L208","name":"SimplexCategoryGenRel.δ_comp_σ_of_le","line":204,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_σ_of_le\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_σ_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L198-L198","name":"SimplexCategoryGenRel.δ_comp_δ_assoc","line":198,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_δ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_δ_assoc\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_δ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L198-L202","name":"SimplexCategoryGenRel.δ_comp_δ","line":198,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ_comp_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ_comp_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L187-L187","name":"SimplexCategoryGenRel.ext_iff","line":187,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.ext_iff\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L186-L192","name":"SimplexCategoryGenRel.ext","line":186,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.ext","doc":"A basic `ext` lemma for objects of `SimplexCategoryGenRel`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.ext\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L177-L184","name":"SimplexCategoryGenRel.rec","line":177,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.rec","doc":"An induction principle for reasonning about objects in `SimplexCategoryGenRel`. This should be\nused instead of identifying an object with `mk` of its `len`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.rec\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L151-L175","name":"SimplexCategoryGenRel.hom_induction'","line":151,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.hom_induction'","doc":"An induction principle for reasonning about morphisms in SimplexCategoryGenRel, where we compose\nwith generators on the right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.hom_induction'\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">hom_induction'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <span class=\"fn\">∀ {<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">δ_comp</span> : <span class=\"fn\">∀ {<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">u</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ_comp</span> : <span class=\"fn\">∀ {<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">u</span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L126-L149","name":"SimplexCategoryGenRel.hom_induction","line":126,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.hom_induction","doc":"An unrolled version of the induction principle obtained in the previous lemma. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.hom_induction\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">hom_induction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <span class=\"fn\">∀ {<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comp_δ</span> : <span class=\"fn\">∀ {<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">m</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">u</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comp_σ</span> : <span class=\"fn\">∀ {<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">u</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L115-L124","name":"SimplexCategoryGenRel.multiplicativeClosure_isGenerator_eq_top","line":115,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.multiplicativeClosure_isGenerator_eq_top","doc":"A property is true for every morphism iff it holds for generators and is multiplicative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.multiplicativeClosure_isGenerator_eq_top\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">multiplicativeClosure_isGenerator_eq_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators\">generators</a>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.multiplicativeClosure\">multiplicativeClosure</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L111-L111","name":"SimplexCategoryGenRel.generators.σ","line":111,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators.σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators.σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">generators</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators\">generators</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">SimplexCategoryGenRel.σ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L109-L109","name":"SimplexCategoryGenRel.generators.δ","line":109,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators.δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators.δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">generators</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators\">generators</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">SimplexCategoryGenRel.δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L104-L105","name":"SimplexCategoryGenRel.generators","line":104,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators","doc":"A morphism is a generator if it is either a face or a degeneracy. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.generators\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">generators</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L102-L102","name":"SimplexCategoryGenRel.degeneracies.σ","line":102,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.degeneracies.σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.degeneracies.σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">degeneracies</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.degeneracies\">degeneracies</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">SimplexCategoryGenRel.σ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L100-L102","name":"SimplexCategoryGenRel.degeneracies","line":100,"kind":"inductive","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.degeneracies","doc":"A morphism is called a degeneracy if it is a `σ i` for some `i : Fin (n + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.degeneracies\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">degeneracies</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L98-L98","name":"SimplexCategoryGenRel.faces.δ","line":98,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.faces.δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.faces.δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">faces</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.faces\">faces</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">SimplexCategoryGenRel.δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L96-L98","name":"SimplexCategoryGenRel.faces","line":96,"kind":"inductive","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.faces","doc":"A morphism is called a face if it is a `δ i` for some `i : Fin (n + 2)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.faces\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">faces</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L91-L92","name":"SimplexCategoryGenRel.mk_len","line":91,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk_len","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk_len\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">mk_len</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L88-L89","name":"SimplexCategoryGenRel.len","line":88,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len","doc":"The length of an object of `SimplexCategoryGenRel`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">len</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L84-L86","name":"SimplexCategoryGenRel.σ","line":84,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ","doc":"`SimplexCategoryGenRel.σ i` is the `i`-th degeneracy map `.mk (n + 1) ⟶ .mk n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L80-L82","name":"SimplexCategoryGenRel.δ","line":80,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ","doc":"`SimplexCategoryGenRel.δ i` is the `i`-th face map `.mk n ⟶ .mk (n + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L74-L76","name":"SimplexCategoryGenRel.mk","line":74,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk","doc":"`SimplexCategoryGenRel.mk` is the main constructor for objects of `SimplexCategoryGenRel`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.mk\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L72-L72","name":"instSimplexCategoryGenRelCategory","line":72,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#instSimplexCategoryGenRelCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#instSimplexCategoryGenRelCategory\"><span class=\"name\">instSimplexCategoryGenRelCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{0, 0}</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L69-L72","name":"SimplexCategoryGenRel","line":69,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel","doc":"SimplexCategory is the category presented by generators and relation by the simplicial\nidentities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\"><span class=\"name\">SimplexCategoryGenRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L63-L65","name":"FreeSimplexQuiver.homRel.σ_comp_σ","line":63,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.σ_comp_σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.σ_comp_σ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span>.<span class=\"name\">σ_comp_σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\">homRel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\">j</span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\">i</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L60-L62","name":"FreeSimplexQuiver.homRel.δ_comp_σ_of_gt","line":60,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_of_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_of_gt\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span>.<span class=\"name\">δ_comp_σ_of_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\">homRel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\">j</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\">i</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L58-L59","name":"FreeSimplexQuiver.homRel.δ_comp_σ_succ","line":58,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_succ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span>.<span class=\"name\">δ_comp_σ_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\">homRel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\">i</span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L56-L57","name":"FreeSimplexQuiver.homRel.δ_comp_σ_self","line":56,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_self\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span>.<span class=\"name\">δ_comp_σ_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\">homRel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\">i</span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L53-L55","name":"FreeSimplexQuiver.homRel.δ_comp_σ_of_le","line":53,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_σ_of_le\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span>.<span class=\"name\">δ_comp_σ_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\">homRel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\">σ</a> <span class=\"fn\">j</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\">i</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L50-L52","name":"FreeSimplexQuiver.homRel.δ_comp_δ","line":50,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel.δ_comp_δ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span>.<span class=\"name\">δ_comp_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\">homRel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\">i</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\">j</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">CategoryTheory.Paths.of</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\">δ</a> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L47-L65","name":"FreeSimplexQuiver.homRel","line":47,"kind":"inductive","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel","doc":"`FreeSimplexQuiver.homRel` is the relation on morphisms freely generated on the\nfive simplicial identities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.homRel\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">homRel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#HomRel\">HomRel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths\">CategoryTheory.Paths</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L43-L45","name":"FreeSimplexQuiver.σ","line":43,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ","doc":"`FreeSimplexQuiver.σ i` represents `i`-th degeneracy map `.mk (n + 1) ⟶ .mk n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.σ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L39-L41","name":"FreeSimplexQuiver.δ","line":39,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ","doc":"`FreeSimplexQuiver.δ i` represents the `i`-th face map `.mk n ⟶ .mk (n + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.δ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L36-L37","name":"FreeSimplexQuiver.quiv","line":36,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.quiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.quiv\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">quiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L34-L34","name":"FreeSimplexQuiver.Hom.σ","line":34,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom.σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom.σ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">Hom</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom\">Hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L33-L33","name":"FreeSimplexQuiver.Hom.δ","line":33,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom.δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom.δ\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">Hom</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom\">Hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\">mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L31-L34","name":"FreeSimplexQuiver.Hom","line":31,"kind":"inductive","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom","doc":"A morphism in `FreeSimplexQuiver` is either a face map (`δ`) or a degeneracy map (`σ`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.Hom\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a> → <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L26-L27","name":"FreeSimplexQuiver.len","line":26,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.len","doc":"Getting back the natural number from the objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.len\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">len</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L23-L24","name":"FreeSimplexQuiver.mk","line":23,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk","doc":"Making an object of `FreeSimplexQuiver` out of a natural number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver.mk\"><span class=\"name\">FreeSimplexQuiver</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\">FreeSimplexQuiver</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.lean#L20-L21","name":"FreeSimplexQuiver","line":20,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver","doc":"The objects of the free simplex quiver are the natural numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#FreeSimplexQuiver\"><span class=\"name\">FreeSimplexQuiver</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}