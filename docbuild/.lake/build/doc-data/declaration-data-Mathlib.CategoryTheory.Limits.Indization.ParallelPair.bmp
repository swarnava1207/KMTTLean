{"name":"Mathlib.CategoryTheory.Limits.Indization.ParallelPair","instances":[{"typeNames":["CategoryTheory.IndParallelPairPresentation.I"],"name":"CategoryTheory.instSmallCategoryI","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.IndParallelPairPresentation.I"],"name":"CategoryTheory.instIsFilteredI","className":"CategoryTheory.IsFiltered"}],"imports":["Init","Mathlib.CategoryTheory.Comma.Final","Mathlib.CategoryTheory.Limits.Indization.IndObject"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L154-L167","name":"CategoryTheory.IndParallelPairPresentation.parallelPairIsoParallelPairCompYoneda","line":154,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.parallelPairIsoParallelPairCompYoneda","doc":"Given an `IndParallelPairPresentation f g`, we can understand the parallel pair `(f, g)`\nas the colimit of `(P.φ, P.ψ)` in `Cᵒᵖ ⥤ Type v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.parallelPairIsoParallelPairCompYoneda\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">parallelPairIsoParallelPairCompYoneda</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">Limits.parallelPair</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.φ\">φ</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ψ\">ψ</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskeringRight\">whiskeringRight</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁))</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colim\">Limits.colim</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L148-L150","name":"CategoryTheory.nonempty_indParallelPairPresentation","line":148,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.nonempty_indParallelPairPresentation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.nonempty_indParallelPairPresentation\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nonempty_indParallelPairPresentation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IsIndObject\">Limits.IsIndObject</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IsIndObject\">Limits.IsIndObject</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L132-L144","name":"CategoryTheory.NonemptyParallelPairPresentationAux.presentation","line":132,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.presentation","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.presentation\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">presentation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L125-L129","name":"CategoryTheory.NonemptyParallelPairPresentationAux.hg","line":125,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.hg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.hg\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">hg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₁\">isColimit₁</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.map\">map</a></span> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₂\">ι₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">whiskerRight</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ψ\">ψ</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L114-L123","name":"CategoryTheory.NonemptyParallelPairPresentationAux.ψ","line":114,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ψ","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ψ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">ψ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₁\">F₁</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₂\">F₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L108-L112","name":"CategoryTheory.NonemptyParallelPairPresentationAux.hf","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.hf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.hf\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">hf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₁\">isColimit₁</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.map\">map</a></span> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₂\">ι₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">whiskerRight</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ϕ\">ϕ</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L97-L106","name":"CategoryTheory.NonemptyParallelPairPresentationAux.ϕ","line":97,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ϕ","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ϕ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">ϕ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₁\">F₁</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₂\">F₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L93-L95","name":"CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₂","line":93,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₂","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">isColimit₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₂\">ι₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L89-L91","name":"CategoryTheory.NonemptyParallelPairPresentationAux.ι₂","line":89,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₂","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">ι₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₂\">F₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.K\">K</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L85-L87","name":"CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₁","line":85,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₁","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.isColimit₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">isColimit₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">A</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₁\">ι₁</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L81-L83","name":"CategoryTheory.NonemptyParallelPairPresentationAux.ι₁","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₁","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.ι₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">ι₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₁\">F₁</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.K\">K</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L78-L79","name":"CategoryTheory.NonemptyParallelPairPresentationAux.F₂","line":78,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₂","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">F₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.K\">K</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L76-L77","name":"CategoryTheory.NonemptyParallelPairPresentationAux.F₁","line":76,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₁","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.F₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">F₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.K\">K</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">P₁</span> <span class=\"fn\">P₂</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L70-L74","name":"CategoryTheory.NonemptyParallelPairPresentationAux.K","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.K","doc":"Implementation; see `nonempty_indParallelPairPresentation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.NonemptyParallelPairPresentationAux.K\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">NonemptyParallelPairPresentationAux</span>.<span class=\"name\">K</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/IndObject.html#CategoryTheory.Limits.IndObjectPresentation\">Limits.IndObjectPresentation</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v₁</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L62-L63","name":"CategoryTheory.instIsFilteredI","line":62,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.instIsFilteredI","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.instIsFilteredI\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instIsFilteredI</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L60-L61","name":"CategoryTheory.instSmallCategoryI","line":60,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.instSmallCategoryI","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.instSmallCategoryI\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instSmallCategoryI</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L58-L58","name":"CategoryTheory.IndParallelPairPresentation.hg","line":58,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.hg","doc":"`g` is in fact presented by `ψ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.hg\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">hg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.isColimit₁\">isColimit₁</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.map\">map</a></span> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₂\">ι₂</a></span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">whiskerRight</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ψ\">ψ</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L56-L56","name":"CategoryTheory.IndParallelPairPresentation.hf","line":56,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.hf","doc":"`f` is in fact presented by `φ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.hf\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">hf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.isColimit₁\">isColimit₁</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.map\">map</a></span> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₂\">ι₂</a></span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">whiskerRight</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.φ\">φ</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L54-L54","name":"CategoryTheory.IndParallelPairPresentation.ψ","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ψ","doc":"The natural transformation presenting `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ψ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">ψ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₁\">F₁</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₂\">F₂</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L52-L52","name":"CategoryTheory.IndParallelPairPresentation.φ","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.φ","doc":"The natural transformation presenting `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.φ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">φ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₁\">F₁</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₂\">F₂</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L50-L50","name":"CategoryTheory.IndParallelPairPresentation.isColimit₂","line":50,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.isColimit₂","doc":"The cocone on `F₂` with apex `B` is a colimit cocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.isColimit₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">isColimit₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₂\">ι₂</a></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L48-L48","name":"CategoryTheory.IndParallelPairPresentation.ι₂","line":48,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₂","doc":"The cocone on `F₂` with apex `B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">ι₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₂\">F₂</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L46-L46","name":"CategoryTheory.IndParallelPairPresentation.isColimit₁","line":46,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.isColimit₁","doc":"The cocone on `F₁` with apex `A` is a colimit cocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.isColimit₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">isColimit₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">A</span>, <span class=\"fn\">ι</span> := <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₁\">ι₁</a></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L44-L44","name":"CategoryTheory.IndParallelPairPresentation.ι₁","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₁","doc":"The cocone on `F₁` with apex `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ι₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">ι₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₁\">F₁</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L42-L42","name":"CategoryTheory.IndParallelPairPresentation.F₂","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₂","doc":"The diagram presenting `B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">F₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L40-L40","name":"CategoryTheory.IndParallelPairPresentation.F₁","line":40,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₁","doc":"The diagram presenting `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.F₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">F₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L38-L38","name":"CategoryTheory.IndParallelPairPresentation.hI","line":38,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.hI","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.hI\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">hI</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L37-L37","name":"CategoryTheory.IndParallelPairPresentation.ℐ","line":37,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ℐ","doc":"Category instance on the indexing category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.ℐ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">ℐ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\">I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L35-L35","name":"CategoryTheory.IndParallelPairPresentation.I","line":35,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I","doc":"The indexing category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.I\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">I</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v₁</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L33-L33","name":"CategoryTheory.IndParallelPairPresentation.mk","line":33,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">ℐ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hI</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Filtered/Basic.html#CategoryTheory.IsFiltered\">IsFiltered</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F₁ </span><span class=\"fn\">F₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F₁</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isColimit₁</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">A</span>, <span class=\"fn\">ι</span> := <span class=\"fn\">ι₁</span> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F₂</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Const.html#CategoryTheory.Functor.const\">Functor.const</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isColimit₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\">ι₂</span> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\">F₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">F₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">isColimit₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.map\">map</a></span> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\">ι₂</span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">whiskerRight</a> <span class=\"fn\">φ</span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">isColimit₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.map\">map</a></span> <span class=\"fn\">{ <span class=\"fn\">pt</span> := <span class=\"fn\">B</span>, <span class=\"fn\">ι</span> := <span class=\"fn\">ι₂</span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">whiskerRight</a> <span class=\"fn\">ψ</span> <a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\">IndParallelPairPresentation</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Indization/ParallelPair.lean#L30-L58","name":"CategoryTheory.IndParallelPairPresentation","line":30,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation","doc":"Structure containing data exhibiting two parallel natural transformations `f` and `g` between\npresheaves `A` and `B` as induced by a natural transformation in a functor category exhibiting\n`A` and `B` as ind-objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Indization/ParallelPair.html#CategoryTheory.IndParallelPairPresentation\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IndParallelPairPresentation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ (v₁ + 1))</div></div>"}]}