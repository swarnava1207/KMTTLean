{"name":"Mathlib.Tactic.Explode.Pretty","instances":[],"imports":["Init","Lean.Meta.Basic","Mathlib.Tactic.Explode.Datatypes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Explode/Pretty.lean#L55-L65","name":"Mathlib.Explode.entriesToMessageData","line":55,"kind":"def","docLink":"./Mathlib/Tactic/Explode/Pretty.html#Mathlib.Explode.entriesToMessageData","doc":"Given all `Entries`, return the entire Fitch table. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Explode/Pretty.html#Mathlib.Explode.entriesToMessageData\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Explode</span>.<span class=\"name\">entriesToMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">entries</span> : <a href=\"./Mathlib/Tactic/Explode/Datatypes.html#Mathlib.Explode.Entries\">Entries</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Explode/Pretty.lean#L39-L53","name":"Mathlib.Explode.rowToMessageData","line":39,"kind":"def","docLink":"./Mathlib/Tactic/Explode/Pretty.html#Mathlib.Explode.rowToMessageData","doc":"Render a particular row of the Fitch table. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Explode/Pretty.html#Mathlib.Explode.rowToMessageData\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Explode</span>.<span class=\"name\">rowToMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Tactic/Explode/Datatypes.html#Mathlib.Explode.Entry\">Entry</a></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Explode/Pretty.lean#L18-L37","name":"Mathlib.Explode.padRight","line":18,"kind":"def","docLink":"./Mathlib/Tactic/Explode/Pretty.html#Mathlib.Explode.padRight","doc":"Given a list of `MessageData`s, make them of equal length.\nWe need this in order to form columns in our Fitch table.\n\n```lean\npadRight [\"hi\", \"hello\"] = [\"hi   \", \"hello\"]\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Explode/Pretty.html#Mathlib.Explode.padRight\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Explode</span>.<span class=\"name\">padRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span></div></div>"}]}