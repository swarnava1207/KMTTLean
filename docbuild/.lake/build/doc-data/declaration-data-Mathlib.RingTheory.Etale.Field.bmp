{"name":"Mathlib.RingTheory.Etale.Field","instances":[],"imports":["Init","Mathlib.RingTheory.Etale.Pi","Mathlib.RingTheory.Unramified.Field"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Etale/Field.lean#L191-L210","name":"Algebra.Etale.iff_exists_algEquiv_prod","line":191,"kind":"theorem","docLink":"./Mathlib/RingTheory/Etale/Field.html#Algebra.Etale.iff_exists_algEquiv_prod","doc":"`A` is étale over a field `K` if and only if\n`A` is a finite product of finite separable field extensions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Etale/Field.html#Algebra.Etale.iff_exists_algEquiv_prod\"><span class=\"name\">Algebra</span>.<span class=\"name\">Etale</span>.<span class=\"name\">iff_exists_algEquiv_prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Etale/Basic.html#Algebra.Etale\">Etale</a> <span class=\"fn\">K</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u) (_ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">Ai</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span></span>) (<span class=\"fn\">x_2</span> :\n    <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">Ai</span> <span class=\"fn\">i</span></span></span>), <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Separable.html#Algebra.IsSeparable\">Algebra.IsSeparable</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Etale/Field.lean#L157-L187","name":"Algebra.FormallyEtale.iff_exists_algEquiv_prod","line":157,"kind":"theorem","docLink":"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.iff_exists_algEquiv_prod","doc":"If `A` is an essentially of finite type algebra over a field `K`, then `A` is formally étale\nover `K` if and only if `A` is a finite product of separable field extensions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.iff_exists_algEquiv_prod\"><span class=\"name\">Algebra</span>.<span class=\"name\">FormallyEtale</span>.<span class=\"name\">iff_exists_algEquiv_prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/EssentialFiniteness.html#Algebra.EssFiniteType\">EssFiniteType</a> <span class=\"fn\">K</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Etale/Basic.html#Algebra.FormallyEtale\">FormallyEtale</a> <span class=\"fn\">K</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u) (_ : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">I</span></span>) (<span class=\"fn\">Ai</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span></span>) (<span class=\"fn\">x_2</span> :\n    <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">Ai</span> <span class=\"fn\">i</span></span></span>), <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>), <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Separable.html#Algebra.IsSeparable\">Algebra.IsSeparable</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\">Ai</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Etale/Field.lean#L152-L154","name":"Algebra.FormallyEtale.iff_isSeparable","line":152,"kind":"theorem","docLink":"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.iff_isSeparable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.iff_isSeparable\"><span class=\"name\">Algebra</span>.<span class=\"name\">FormallyEtale</span>.<span class=\"name\">iff_isSeparable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/EssentialFiniteness.html#Algebra.EssFiniteType\">EssFiniteType</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Etale/Basic.html#Algebra.FormallyEtale\">FormallyEtale</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Separable.html#Algebra.IsSeparable\">Algebra.IsSeparable</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Etale/Field.lean#L91-L150","name":"Algebra.FormallyEtale.of_isSeparable","line":91,"kind":"theorem","docLink":"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.of_isSeparable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.of_isSeparable\"><span class=\"name\">Algebra</span>.<span class=\"name\">FormallyEtale</span>.<span class=\"name\">of_isSeparable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Separable.html#Algebra.IsSeparable\">Algebra.IsSeparable</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Etale/Basic.html#Algebra.FormallyEtale\">FormallyEtale</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Etale/Field.lean#L43-L88","name":"Algebra.FormallyEtale.of_isSeparable_aux","line":43,"kind":"theorem","docLink":"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.of_isSeparable_aux","doc":"This is a weaker version of `of_isSeparable` that additionally assumes `EssFiniteType K L`.\nUse that instead.\n\nThis is Iversen Corollary II.5.3.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Etale/Field.html#Algebra.FormallyEtale.of_isSeparable_aux\"><span class=\"name\">Algebra</span>.<span class=\"name\">FormallyEtale</span>.<span class=\"name\">of_isSeparable_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Separable.html#Algebra.IsSeparable\">Algebra.IsSeparable</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/EssentialFiniteness.html#Algebra.EssFiniteType\">EssFiniteType</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Etale/Basic.html#Algebra.FormallyEtale\">FormallyEtale</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span></span></div></div>"}]}