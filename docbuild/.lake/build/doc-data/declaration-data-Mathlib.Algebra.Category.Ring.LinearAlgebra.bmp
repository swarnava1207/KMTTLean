{"name":"Mathlib.Algebra.Category.Ring.LinearAlgebra","instances":[],"imports":["Init","Mathlib.Algebra.Category.Ring.Constructions","Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq","Mathlib.LinearAlgebra.Basis.VectorSpace","Mathlib.RingTheory.Flat.FaithfullyFlat.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Ring/LinearAlgebra.lean#L27-L36","name":"CommRingCat.nontrivial_of_isPushout_of_isField","line":27,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Ring/LinearAlgebra.html#CommRingCat.nontrivial_of_isPushout_of_isField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Ring/LinearAlgebra.html#CommRingCat.nontrivial_of_isPushout_of_isField\"><span class=\"name\">CommRingCat</span>.<span class=\"name\">nontrivial_of_isPushout_of_isField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C </span><span class=\"fn\">D</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/IsField.html#IsField\">IsField</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">C</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↑<span class=\"fn\">B</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">CategoryTheory.IsPushout</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↑<span class=\"fn\">D</span></span></span></div></div>"}]}