{"name":"Mathlib.NumberTheory.Bernoulli","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Field","Mathlib.RingTheory.PowerSeries.Inverse","Mathlib.RingTheory.PowerSeries.WellKnown"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L332-L373","name":"sum_Ico_pow","line":332,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#sum_Ico_pow","doc":"Alternate form of **Faulhaber's theorem**, relating the sum of p-th powers to the Bernoulli\nnumbers: $$\\sum_{k=1}^{n} k^p = \\sum_{i=0}^p (-1)^iB_i\\binom{p+1}{i}\\frac{n^{p+1-i}}{p+1}.$$\nDeduced from `sum_range_pow`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#sum_Ico_pow\"><span class=\"name\">sum_Ico_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">1</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L263-L330","name":"sum_range_pow","line":263,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#sum_range_pow","doc":"**Faulhaber's theorem** relating the **sum of p-th powers** to the Bernoulli numbers:\n$$\\sum_{k=0}^{n-1} k^p = \\sum_{i=0}^p B_i\\binom{p+1}{i}\\frac{n^{p+1-i}}{p+1}.$$\nSee https://proofwiki.org/wiki/Faulhaber%27s_Formula and [orosi2018faulhaber] for\nthe proof provided here. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#sum_range_pow\"><span class=\"name\">sum_range_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L241-L259","name":"bernoulliPowerSeries_mul_exp_sub_one","line":241,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulliPowerSeries_mul_exp_sub_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulliPowerSeries_mul_exp_sub_one\"><span class=\"name\">bernoulliPowerSeries_mul_exp_sub_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulliPowerSeries\">bernoulliPowerSeries</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/WellKnown.html#PowerSeries.exp\">PowerSeries.exp</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L237-L239","name":"bernoulliPowerSeries","line":237,"kind":"def","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulliPowerSeries","doc":"The exponential generating function for the Bernoulli numbers `bernoulli n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulliPowerSeries\"><span class=\"name\">bernoulliPowerSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L216-L235","name":"bernoulli_spec'","line":216,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_spec'\"><span class=\"name\">bernoulli_spec'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">Finset.antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">k</span>.2</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\"><span class=\"fn\">k</span>.2</span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\"><span class=\"fn\">k</span>.1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L197-L214","name":"sum_bernoulli","line":197,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#sum_bernoulli","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#sum_bernoulli\"><span class=\"name\">sum_bernoulli</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L190-L195","name":"bernoulli_eq_bernoulli'_of_ne_one","line":190,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_eq_bernoulli'_of_ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_eq_bernoulli'_of_ne_one\"><span class=\"name\">bernoulli_eq_bernoulli'_of_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L187-L188","name":"bernoulli_one","line":187,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_one\"><span class=\"name\">bernoulli_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">-<span class=\"fn\">1</span></span> / <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L184-L185","name":"bernoulli_zero","line":184,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli_zero\"><span class=\"name\">bernoulli_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L181-L182","name":"bernoulli'_eq_bernoulli","line":181,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_eq_bernoulli","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_eq_bernoulli\"><span class=\"name\">bernoulli'_eq_bernoulli</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">bernoulli</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L177-L179","name":"bernoulli","line":177,"kind":"def","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli","doc":"The Bernoulli numbers are defined to be `bernoulli'` with a parity sign. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\"><span class=\"name\">bernoulli</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L160-L175","name":"bernoulli'_odd_eq_zero","line":160,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_odd_eq_zero","doc":"Odd Bernoulli numbers (greater than 1) are zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_odd_eq_zero\"><span class=\"name\">bernoulli'_odd_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_odd</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlt</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L140-L158","name":"bernoulli'PowerSeries_mul_exp_sub_one","line":140,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'PowerSeries_mul_exp_sub_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'PowerSeries_mul_exp_sub_one\"><span class=\"name\">bernoulli'PowerSeries_mul_exp_sub_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'PowerSeries\">bernoulli'PowerSeries</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/WellKnown.html#PowerSeries.exp\">PowerSeries.exp</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/WellKnown.html#PowerSeries.exp\">PowerSeries.exp</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L136-L138","name":"bernoulli'PowerSeries","line":136,"kind":"def","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'PowerSeries","doc":"The exponential generating function for the Bernoulli numbers `bernoulli' n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'PowerSeries\"><span class=\"name\">bernoulli'PowerSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L121-L134","name":"sum_bernoulli'","line":121,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#sum_bernoulli'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#sum_bernoulli'\"><span class=\"name\">sum_bernoulli'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L113-L117","name":"bernoulli'_four","line":113,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_four\"><span class=\"name\">bernoulli'_four</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">-<span class=\"fn\">1</span></span> / <span class=\"fn\">30</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L108-L111","name":"bernoulli'_three","line":108,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_three\"><span class=\"name\">bernoulli'_three</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L103-L106","name":"bernoulli'_two","line":103,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_two\"><span class=\"name\">bernoulli'_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">6</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L98-L101","name":"bernoulli'_one","line":98,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_one\"><span class=\"name\">bernoulli'_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L93-L96","name":"bernoulli'_zero","line":93,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_zero\"><span class=\"name\">bernoulli'_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L82-L86","name":"bernoulli'_spec'","line":82,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_spec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_spec'\"><span class=\"name\">bernoulli'_spec'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">Finset.antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">k</span>.2</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\"><span class=\"fn\">k</span>.2</span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">k</span>.2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\"><span class=\"fn\">k</span>.1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L75-L80","name":"bernoulli'_spec","line":75,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_spec\"><span class=\"name\">bernoulli'_spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>))</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L71-L73","name":"bernoulli'_def","line":71,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_def\"><span class=\"name\">bernoulli'_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L67-L69","name":"bernoulli'_def'","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'_def'\"><span class=\"name\">bernoulli'_def'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Bernoulli.lean#L60-L65","name":"bernoulli'","line":60,"kind":"def","docLink":"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'","doc":"The Bernoulli numbers:\nthe $n$-th Bernoulli number $B_n$ is defined recursively via\n$$B_n = 1 - \\sum_{k < n} \\binom{n}{k}\\frac{B_k}{n+1-k}$$ "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\"><span class=\"name\">bernoulli'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"}]}