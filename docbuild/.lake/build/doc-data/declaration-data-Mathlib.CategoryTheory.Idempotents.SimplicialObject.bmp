{"name":"Mathlib.CategoryTheory.Idempotents.SimplicialObject","instances":[{"typeNames":["CategoryTheory.SimplicialObject"],"name":"CategoryTheory.Idempotents.instIsIdempotentCompleteSimplicialObject","className":"CategoryTheory.IsIdempotentComplete"},{"typeNames":["CategoryTheory.CosimplicialObject"],"name":"CategoryTheory.Idempotents.instIsIdempotentCompleteCosimplicialObject","className":"CategoryTheory.IsIdempotentComplete"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialObject.Basic","Mathlib.CategoryTheory.Idempotents.FunctorCategories"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/SimplicialObject.lean#L29-L30","name":"CategoryTheory.Idempotents.instIsIdempotentCompleteCosimplicialObject","line":29,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/SimplicialObject.html#CategoryTheory.Idempotents.instIsIdempotentCompleteCosimplicialObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/SimplicialObject.html#CategoryTheory.Idempotents.instIsIdempotentCompleteCosimplicialObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instIsIdempotentCompleteCosimplicialObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.CosimplicialObject\">CosimplicialObject</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/SimplicialObject.lean#L26-L27","name":"CategoryTheory.Idempotents.instIsIdempotentCompleteSimplicialObject","line":26,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/SimplicialObject.html#CategoryTheory.Idempotents.instIsIdempotentCompleteSimplicialObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/SimplicialObject.html#CategoryTheory.Idempotents.instIsIdempotentCompleteSimplicialObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">instIsIdempotentCompleteSimplicialObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Basic.html#CategoryTheory.IsIdempotentComplete\">IsIdempotentComplete</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">SimplicialObject</a> <span class=\"fn\">C</span>)</span></span></div></div>"}]}