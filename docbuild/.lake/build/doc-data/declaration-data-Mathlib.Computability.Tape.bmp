{"name":"Mathlib.Computability.Tape","instances":[{"typeNames":["Turing.ListBlank"],"name":"Turing.ListBlank.inhabited","className":"Inhabited"},{"typeNames":["Turing.ListBlank"],"name":"Turing.ListBlank.hasEmptyc","className":"EmptyCollection"},{"typeNames":["Turing.PointedMap"],"name":"Turing.instInhabitedPointedMap","className":"Inhabited"},{"typeNames":["Turing.PointedMap"],"name":"Turing.instCoeFunPointedMapForall","className":"CoeFun"},{"typeNames":["Turing.Tape"],"name":"Turing.Tape.inhabited","className":"Inhabited"},{"typeNames":["Eq"],"name":"Turing.instDecidableEqDir","className":"Decidable"},{"typeNames":["Turing.Dir"],"name":"Turing.instInhabitedDir","className":"Inhabited"}],"imports":["Init","Mathlib.Data.Vector.Basic","Mathlib.Logic.Function.Iterate","Mathlib.Order.Basic","Mathlib.Tactic.ApplyFun","Mathlib.Data.List.GetD"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L612-L614","name":"Turing.Tape.map_mk₁","line":612,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map_mk₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map_mk₁\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map_mk₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk₁\">mk₁</a> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk₁\">mk₁</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">l</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L608-L610","name":"Turing.Tape.map_mk₂","line":608,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map_mk₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map_mk₂\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map_mk₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk₂\">mk₂</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk₂\">mk₂</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L603-L606","name":"Turing.Tape.map_mk'","line":603,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map_mk'\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">ListBlank.map</a> <span class=\"fn\">f</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">ListBlank.map</a> <span class=\"fn\">f</span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L597-L601","name":"Turing.Tape.map_move","line":597,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map_move","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map_move\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map_move</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir\">Dir</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <span class=\"fn\">d</span> <span class=\"fn\">T</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <span class=\"fn\">d</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">T</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L587-L595","name":"Turing.Tape.write_move_right_n","line":587,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.write_move_right_n","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write_move_right_n\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">write_move_right_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\">write</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.modifyNth\">ListBlank.modifyNth</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L582-L585","name":"Turing.Tape.map_write","line":582,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map_write","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map_write\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map_write</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\">write</a> <span class=\"fn\">b</span> <span class=\"fn\">T</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\">write</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">T</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L577-L580","name":"Turing.Tape.map_fst","line":577,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map_fst\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\">head</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L573-L575","name":"Turing.Tape.map","line":573,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.map","doc":"Apply a pointed map to a tape to change the alphabet. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.map\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L567-L571","name":"Turing.Tape.write_mk'","line":567,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.write_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write_mk'\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">write_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\">write</a> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">ListBlank.cons</a> <span class=\"fn\">a</span> <span class=\"fn\">R</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">ListBlank.cons</a> <span class=\"fn\">b</span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L560-L565","name":"Turing.Tape.write_nth","line":560,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.write_nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write_nth\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">write_nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\">write</a> <span class=\"fn\">b</span> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L556-L558","name":"Turing.Tape.write_self","line":556,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.write_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write_self\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">write_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\">write</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\">head</a></span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L552-L554","name":"Turing.Tape.write","line":552,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.write","doc":"Replace the current value of the head on the tape. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.write\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">write</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L545-L550","name":"Turing.Tape.move_right_n_head","line":545,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_n_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_n_head\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_right_n_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">i</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L539-L543","name":"Turing.Tape.move_right_nth","line":539,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_nth\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_right_nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L528-L537","name":"Turing.Tape.move_left_nth","line":528,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_left_nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_left_nth\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_left_nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.left\">Dir.left</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L523-L526","name":"Turing.Tape.mk'_nth_nat","line":523,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_nth_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_nth_nat\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'_nth_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L519-L521","name":"Turing.Tape.right₀_nth","line":519,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.right₀_nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right₀_nth\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">right₀_nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right₀\">right₀</a></span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L515-L517","name":"Turing.Tape.nth_zero","line":515,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.nth_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth_zero\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">nth_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\">nth</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\">head</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L508-L513","name":"Turing.Tape.nth","line":508,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.nth","doc":"The `nth` function of a tape is integer-valued, with index `0` being the head, negative indexes\non the left and positive indexes on the right. (Picture a number line.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.nth\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L503-L506","name":"Turing.Tape.mk₁","line":503,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk₁","doc":"Construct a tape from a list, with the head of the list at the TM head and the rest going\nto the right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk₁\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L499-L501","name":"Turing.Tape.mk₂","line":499,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk₂","doc":"Construct a tape from a left side and an inclusive right side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk₂\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L493-L497","name":"Turing.Tape.move_right_mk'","line":493,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_mk'\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_right_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">ListBlank.cons</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L487-L491","name":"Turing.Tape.move_left_mk'","line":487,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_left_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_left_mk'\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_left_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.left\">Dir.left</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">ListBlank.cons</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L484-L485","name":"Turing.Tape.exists_mk'","line":484,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.exists_mk'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.exists_mk'\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">exists_mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>) (<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>), <span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L478-L482","name":"Turing.Tape.mk'_left_right₀","line":478,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_left_right₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_left_right₀\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'_left_right₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.left\">left</a></span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right₀\">right₀</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L474-L476","name":"Turing.Tape.mk'_right₀","line":474,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_right₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_right₀\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'_right₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right₀\">right₀</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L470-L472","name":"Turing.Tape.mk'_right","line":470,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_right\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right\">right</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L466-L468","name":"Turing.Tape.mk'_head","line":466,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_head\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L462-L464","name":"Turing.Tape.mk'_left","line":462,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'_left\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\">mk'</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L458-L460","name":"Turing.Tape.mk'","line":458,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk'","doc":"Construct a tape from a left side and an inclusive right side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk'\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L </span><span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L453-L456","name":"Turing.Tape.move_right_left","line":453,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_right_left\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_right_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.left\">Dir.left</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a> <span class=\"fn\">T</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L448-L451","name":"Turing.Tape.move_left_right","line":448,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move_left_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move_left_right\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move_left_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\">Dir.right</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\">move</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir.left\">Dir.left</a> <span class=\"fn\">T</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L442-L446","name":"Turing.Tape.move","line":442,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.move","doc":"Move the tape in response to a motion of the Turing machine. Note that `T.move Dir.left` makes\n`T.left` smaller; the Turing machine is moving left and the tape is moving right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.move\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">move</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Dir\">Dir</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L438-L440","name":"Turing.Tape.right₀","line":438,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.right₀","doc":"The \"inclusive\" right side of the tape, including both `right` and `head`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right₀\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">right₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L434-L436","name":"Turing.Tape.left₀","line":434,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.left₀","doc":"The \"inclusive\" left side of the tape, including both `left` and `head`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.left₀\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">left₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L432-L432","name":"Turing.instInhabitedDir","line":432,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.instInhabitedDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.instInhabitedDir\"><span class=\"name\">Turing</span>.<span class=\"name\">instInhabitedDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir\">Dir</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L432-L432","name":"Turing.instDecidableEqDir","line":432,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.instDecidableEqDir","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.instDecidableEqDir\"><span class=\"name\">Turing</span>.<span class=\"name\">instDecidableEqDir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.Dir\">Dir</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L431-L431","name":"Turing.Dir.right","line":431,"kind":"ctor","docLink":"./Mathlib/Computability/Tape.html#Turing.Dir.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Dir.right\"><span class=\"name\">Turing</span>.<span class=\"name\">Dir</span>.<span class=\"name\">right</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Dir\">Dir</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L430-L430","name":"Turing.Dir.left","line":430,"kind":"ctor","docLink":"./Mathlib/Computability/Tape.html#Turing.Dir.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Dir.left\"><span class=\"name\">Turing</span>.<span class=\"name\">Dir</span>.<span class=\"name\">left</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Dir\">Dir</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L427-L432","name":"Turing.Dir","line":427,"kind":"inductive","docLink":"./Mathlib/Computability/Tape.html#Turing.Dir","doc":"A direction for the Turing machine `move` command, either\nleft or right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Dir\"><span class=\"name\">Turing</span>.<span class=\"name\">Dir</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L424-L425","name":"Turing.Tape.inhabited","line":424,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.inhabited\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L422-L422","name":"Turing.Tape.right","line":422,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.right","doc":"The portion of the tape going off to the right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.right\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L420-L420","name":"Turing.Tape.left","line":420,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.left","doc":"The portion of the tape going off to the left. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.left\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L418-L418","name":"Turing.Tape.head","line":418,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.head","doc":"The current position of the head. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.head\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L416-L416","name":"Turing.Tape.mk","line":416,"kind":"ctor","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape.mk\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">head</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left </span><span class=\"fn\">right</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.Tape\">Tape</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L412-L422","name":"Turing.Tape","line":412,"kind":"structure","docLink":"./Mathlib/Computability/Tape.html#Turing.Tape","doc":"The tape of a Turing machine is composed of a head element (which we imagine to be the\ncurrent position of the head), together with two `ListBlank`s denoting the portions of the tape\ngoing off to the left and right. When the Turing machine moves right, an element is pulled from the\nright side and becomes the new head, while the head element is `cons`ed onto the left side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.Tape\"><span class=\"name\">Turing</span>.<span class=\"name\">Tape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L406-L406","name":"Turing.ListBlank.cons_bind","line":406,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_bind","doc":"**Alias** of `Turing.ListBlank.cons_flatMap`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_bind\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">cons_bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\">flatMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\">append</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\">flatMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L398-L404","name":"Turing.ListBlank.cons_flatMap","line":398,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_flatMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_flatMap\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">cons_flatMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\">flatMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\">append</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\">flatMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L396-L396","name":"Turing.ListBlank.bind_mk","line":396,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.bind_mk","doc":"**Alias** of `Turing.ListBlank.flatMap_mk`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.bind_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">bind_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\">flatMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.flatMap\">List.flatMap</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L390-L394","name":"Turing.ListBlank.flatMap_mk","line":390,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">flatMap_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\">flatMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.flatMap\">List.flatMap</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L388-L388","name":"Turing.ListBlank.bind","line":388,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.bind","doc":"**Alias** of `Turing.ListBlank.flatMap`.\n\n---\n\nThe `flatMap` function on lists is well defined on `ListBlank`s provided that the default\nelement is sent to a sequence of default elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.bind\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L376-L386","name":"Turing.ListBlank.flatMap","line":376,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap","doc":"The `flatMap` function on lists is well defined on `ListBlank`s provided that the default\nelement is sent to a sequence of default elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.flatMap\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">flatMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L369-L374","name":"Turing.ListBlank.append_assoc","line":369,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.append_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append_assoc\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">append_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₃</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\">append</a> (<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span>) <span class=\"fn\">l₃</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\">append</a> <span class=\"fn\">l₁</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\">append</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l₃</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L363-L367","name":"Turing.ListBlank.append_mk","line":363,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.append_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">append_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\">append</a> <span class=\"fn\">l₁</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> (<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L357-L361","name":"Turing.ListBlank.append","line":357,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.append","doc":"Append a list on the left side of a `ListBlank`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.append\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L351-L355","name":"Turing.ListBlank.map_modifyNth","line":351,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.map_modifyNth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map_modifyNth\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">map_modifyNth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f'</span> : <span class=\"fn\"><span class=\"fn\">Γ'</span> → <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">Γ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.modifyNth\">modifyNth</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">L</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.modifyNth\">modifyNth</a> <span class=\"fn\">f'</span> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">F</span> <span class=\"fn\">L</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L347-L349","name":"Turing.proj_map_nth","line":347,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.proj_map_nth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.proj_map_nth\"><span class=\"name\">Turing</span>.<span class=\"name\">proj_map_nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">Γ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Γ</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">ListBlank.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.proj\">proj</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L342-L345","name":"Turing.proj","line":342,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.proj","doc":"The `i`-th projection as a pointed map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.proj\"><span class=\"name\">Turing</span>.<span class=\"name\">proj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">Γ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Γ</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">Γ</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L332-L340","name":"Turing.ListBlank.nth_map","line":332,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_map\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">nth_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L326-L330","name":"Turing.ListBlank.map_cons","line":326,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.map_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map_cons\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">map_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L320-L324","name":"Turing.ListBlank.tail_map","line":320,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail_map\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">tail_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L314-L318","name":"Turing.ListBlank.head_map","line":314,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.head_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head_map\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">head_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L309-L312","name":"Turing.ListBlank.map_mk","line":309,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.map_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">map_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">l</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L301-L307","name":"Turing.ListBlank.map","line":301,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.map","doc":"The `map` function on lists is well defined on `ListBlank`s provided that the map is\npointed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.map\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L296-L299","name":"Turing.PointedMap.headI_map","line":296,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap.headI_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.headI_map\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span>.<span class=\"name\">headI_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.headI\">headI</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.headI\">headI</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L291-L294","name":"Turing.PointedMap.map_pt","line":291,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap.map_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.map_pt\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span>.<span class=\"name\">map_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L287-L289","name":"Turing.PointedMap.mk_val","line":287,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap.mk_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.mk_val\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span>.<span class=\"name\">mk_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pt</span> : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">f</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_pt'</span> := <span class=\"fn\">pt</span> }</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L283-L284","name":"Turing.instCoeFunPointedMapForall","line":283,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.instCoeFunPointedMapForall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.instCoeFunPointedMapForall\"><span class=\"name\">Turing</span>.<span class=\"name\">instCoeFunPointedMapForall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L280-L281","name":"Turing.instInhabitedPointedMap","line":280,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.instInhabitedPointedMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.instInhabitedPointedMap\"><span class=\"name\">Turing</span>.<span class=\"name\">instInhabitedPointedMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L278-L278","name":"Turing.PointedMap.map_pt'","line":278,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap.map_pt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.map_pt'\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span>.<span class=\"name\">map_pt'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\">f</a></span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L277-L277","name":"Turing.PointedMap.f","line":277,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap.f","doc":"The map underlying this instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.f\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L274-L274","name":"Turing.PointedMap.mk","line":274,"kind":"ctor","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap.mk\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_pt'</span> : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\">PointedMap</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L273-L278","name":"Turing.PointedMap","line":273,"kind":"structure","docLink":"./Mathlib/Computability/Tape.html#Turing.PointedMap","doc":"A pointed map of `Inhabited` types is a map that sends one default value to the other. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.PointedMap\"><span class=\"name\">Turing</span>.<span class=\"name\">PointedMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ'</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L263-L271","name":"Turing.ListBlank.nth_modifyNth","line":263,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_modifyNth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_modifyNth\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">nth_modifyNth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.modifyNth\">modifyNth</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L257-L261","name":"Turing.ListBlank.modifyNth","line":257,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.modifyNth","doc":"Apply a function to a value stored at the nth position of the list. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.modifyNth\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">modifyNth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Γ</span> → <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L240-L240","name":"Turing.ListBlank.ext_iff","line":240,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.ext_iff\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁ </span><span class=\"fn\">L₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">L₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₂</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i_1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L240-L255","name":"Turing.ListBlank.ext","line":240,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.ext\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L₁ </span><span class=\"fn\">L₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₂</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">i_1</span></span>)</span> → <span class=\"fn\">L₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L234-L238","name":"Turing.ListBlank.nth_succ","line":234,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_succ\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">nth_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L229-L232","name":"Turing.ListBlank.nth_zero","line":229,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_zero\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">nth_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L224-L227","name":"Turing.ListBlank.nth_mk","line":224,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">nth_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\">nth</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.getI\">getI</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L213-L222","name":"Turing.ListBlank.nth","line":213,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth","doc":"The n-th element of a `ListBlank` is well defined for all `n : ℕ`, unlike in a `List`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.nth\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">nth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L207-L211","name":"Turing.ListBlank.exists_cons","line":207,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.exists_cons","doc":"The `cons` and `head`/`tail` functions are mutually inverse, unlike in the case of `List` where\nthis only holds for nonempty lists. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.exists_cons\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">exists_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>) (<span class=\"fn\">l'</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>), <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">l'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L197-L205","name":"Turing.ListBlank.cons_head_tail","line":197,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_head_tail","doc":"The `cons` and `head`/`tail` functions are mutually inverse, unlike in the case of `List` where\nthis only holds for nonempty lists. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_head_tail\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">cons_head_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L193-L195","name":"Turing.ListBlank.tail_cons","line":193,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail_cons\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">tail_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L189-L191","name":"Turing.ListBlank.head_cons","line":189,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.head_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head_cons\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">head_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L184-L187","name":"Turing.ListBlank.cons_mk","line":184,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">cons_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L178-L182","name":"Turing.ListBlank.cons","line":178,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons","doc":"We can cons an element onto a `ListBlank`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.cons\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L173-L176","name":"Turing.ListBlank.tail_mk","line":173,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">tail_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.tail\">tail</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L164-L171","name":"Turing.ListBlank.tail","line":164,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail","doc":"The tail of a `ListBlank` is well defined (up to the tail of blanks). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.tail\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L159-L162","name":"Turing.ListBlank.head_mk","line":159,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.head_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head_mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">head_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.headI\">headI</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L151-L157","name":"Turing.ListBlank.head","line":151,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.head","doc":"The head of a `ListBlank` is well defined. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.head\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L146-L149","name":"Turing.ListBlank.induction_on","line":146,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.induction_on","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.induction_on\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">induction_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\">mk</a> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L142-L144","name":"Turing.ListBlank.mk","line":142,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk","doc":"The quotient map turning a `List` into a `ListBlank`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.mk\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L136-L140","name":"Turing.ListBlank.liftOn","line":136,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.liftOn","doc":"A modified version of `Quotient.liftOn'` specialized for `ListBlank`, with the stronger\nprecondition `BlankExtends` instead of `BlankRel`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.liftOn\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">liftOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L133-L134","name":"Turing.ListBlank.hasEmptyc","line":133,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.hasEmptyc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.hasEmptyc\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">hasEmptyc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L130-L131","name":"Turing.ListBlank.inhabited","line":130,"kind":"instance","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank.inhabited\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\">ListBlank</a> <span class=\"fn\">Γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L124-L128","name":"Turing.ListBlank","line":124,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.ListBlank","doc":"A `ListBlank Γ` is a quotient of `List Γ` by extension by blanks at the end. This is used to\nrepresent half-tapes of a Turing machine, so that we can pretend that the list continues\ninfinitely with blanks. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.ListBlank\"><span class=\"name\">Turing</span>.<span class=\"name\">ListBlank</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L120-L122","name":"Turing.BlankRel.setoid","line":120,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.setoid","doc":"Construct a setoid instance for `BlankRel`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.setoid\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">setoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L117-L118","name":"Turing.BlankRel.equivalence","line":117,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.equivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.equivalence\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L108-L115","name":"Turing.BlankRel.below","line":108,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.below","doc":"Given two `BlankRel` lists, there exists (constructively) a common meet. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.below\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">below</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l₂</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L99-L106","name":"Turing.BlankRel.above","line":99,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.above","doc":"Given two `BlankRel` lists, there exists (constructively) a common join. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.above\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">above</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L86-L97","name":"Turing.BlankRel.trans","line":86,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.trans\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂ </span><span class=\"fn\">l₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l₃</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L82-L84","name":"Turing.BlankRel.symm","line":82,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.symm\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L78-L80","name":"Turing.BlankRel.refl","line":78,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel.refl\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\">BlankRel</a> <span class=\"fn\">l</span> <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L73-L76","name":"Turing.BlankRel","line":73,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankRel","doc":"`BlankRel` is the symmetric closure of `BlankExtends`, turning it into an equivalence\nrelation. Two lists are related by `BlankRel` if one extends the other by blanks. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankRel\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankRel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L64-L71","name":"Turing.BlankExtends.above_of_le","line":64,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankExtends.above_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends.above_of_le\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankExtends</span>.<span class=\"name\">above_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L57-L62","name":"Turing.BlankExtends.above","line":57,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankExtends.above","doc":"Any two extensions by blank `l₁,l₂` of `l` have a common join (which can be taken to be the\nlonger of `l₁` and `l₂`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends.above\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankExtends</span>.<span class=\"name\">above</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l'</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L51-L55","name":"Turing.BlankExtends.below_of_le","line":51,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankExtends.below_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends.below_of_le\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankExtends</span>.<span class=\"name\">below_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l </span><span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l₁</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L45-L49","name":"Turing.BlankExtends.trans","line":45,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankExtends.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends.trans\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankExtends</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂ </span><span class=\"fn\">l₃</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₂</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₂</span> <span class=\"fn\">l₃</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l₁</span> <span class=\"fn\">l₃</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L41-L43","name":"Turing.BlankExtends.refl","line":41,"kind":"theorem","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankExtends.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends.refl\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankExtends</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\">BlankExtends</a> <span class=\"fn\">l</span> <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Tape.lean#L36-L39","name":"Turing.BlankExtends","line":36,"kind":"def","docLink":"./Mathlib/Computability/Tape.html#Turing.BlankExtends","doc":"The `BlankExtends` partial order holds of `l₁` and `l₂` if `l₂` is obtained by adding\nblanks (`default : Γ`) to the end of `l₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Tape.html#Turing.BlankExtends\"><span class=\"name\">Turing</span>.<span class=\"name\">BlankExtends</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}