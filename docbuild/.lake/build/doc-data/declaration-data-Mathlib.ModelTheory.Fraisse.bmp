{"name":"Mathlib.ModelTheory.Fraisse","instances":[],"imports":["Init","Mathlib.ModelTheory.FinitelyGenerated","Mathlib.ModelTheory.PartialEquiv","Mathlib.ModelTheory.Bundled","Mathlib.Algebra.Order.Archimedean.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L429-L432","name":"FirstOrder.Language.empty.isFraisse_finite","line":429,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.empty.isFraisse_finite","doc":"The class of finite structures in the empty language is Fraïssé. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.empty.isFraisse_finite\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">empty</span>.<span class=\"name\">isFraisse_finite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">S</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.empty\">Language.empty</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L409-L427","name":"FirstOrder.Language.empty.isFraisseLimit_of_countable_infinite","line":409,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.empty.isFraisseLimit_of_countable_infinite","doc":"Any countable infinite structure in the empty language is a Fraïssé limit of the class of finite\nstructures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.empty.isFraisseLimit_of_countable_infinite\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">empty</span>.<span class=\"name\">isFraisseLimit_of_countable_infinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.empty\">Language.empty</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">S</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.empty\">Language.empty</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L389-L403","name":"FirstOrder.Language.IsFraisseLimit.nonempty_equiv","line":389,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.nonempty_equiv","doc":"The Fraïssé limit of a class is unique, in that any two Fraïssé limits are isomorphic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.nonempty_equiv\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span>.<span class=\"name\">nonempty_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hM</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">M</span> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L374-L387","name":"FirstOrder.Language.IsFraisseLimit.isExtensionPair","line":374,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.isExtensionPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.isExtensionPair\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span>.<span class=\"name\">isExtensionPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hM</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/PartialEquiv.html#FirstOrder.Language.IsExtensionPair\">IsExtensionPair</a></span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L363-L366","name":"FirstOrder.Language.IsFraisseLimit.isFraisse","line":363,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.isFraisse","doc":"If a class has a Fraïssé limit, it must be Fraïssé. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.isFraisse\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span>.<span class=\"name\">isFraisse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L356-L359","name":"FirstOrder.Language.IsUltrahomogeneous.age_isFraisse","line":356,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous.age_isFraisse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous.age_isFraisse\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsUltrahomogeneous</span>.<span class=\"name\">age_isFraisse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\">IsUltrahomogeneous</a></span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L331-L354","name":"FirstOrder.Language.IsUltrahomogeneous.amalgamation_age","line":331,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous.amalgamation_age","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous.amalgamation_age\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsUltrahomogeneous</span>.<span class=\"name\">amalgamation_age</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\">IsUltrahomogeneous</a></span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Amalgamation\">Amalgamation</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L307-L329","name":"FirstOrder.Language.isUltrahomogeneous_iff_IsExtensionPair","line":307,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.isUltrahomogeneous_iff_IsExtensionPair","doc":"A countably generated structure is ultrahomogeneous if and only if any equivalence between\nfinitely generated substructures can be extended to any element in the domain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.isUltrahomogeneous_iff_IsExtensionPair\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">isUltrahomogeneous_iff_IsExtensionPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M_CG</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.CG\">Structure.CG</a> <span class=\"fn\">L</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\">IsUltrahomogeneous</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/PartialEquiv.html#FirstOrder.Language.IsExtensionPair\">IsExtensionPair</a></span> <span class=\"fn\">M</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L287-L305","name":"FirstOrder.Language.IsUltrahomogeneous.extend_embedding","line":287,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous.extend_embedding","doc":"Any embedding from a finitely generated `S` to an ultrahomogeneous structure `M`\ncan be extended to an embedding from any structure with an embedding to `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous.extend_embedding\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsUltrahomogeneous</span>.<span class=\"name\">extend_embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M_homog</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\">IsUltrahomogeneous</a></span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S_FG</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">Structure.FG</a> <span class=\"fn\">L</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding\">Embedding</a></span> <span class=\"fn\">T</span> <span class=\"fn\">M</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding\">Embedding</a></span> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding\">Embedding</a></span> <span class=\"fn\">S</span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding\">Embedding</a></span> <span class=\"fn\">T</span> <span class=\"fn\">M</span></span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f'</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding.comp\">comp</a></span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L283-L283","name":"FirstOrder.Language.IsFraisseLimit.age","line":283,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.age","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.age\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span>.<span class=\"name\">age</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L282-L282","name":"FirstOrder.Language.IsFraisseLimit.ultrahomogeneous","line":282,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.ultrahomogeneous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.ultrahomogeneous\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span>.<span class=\"name\">ultrahomogeneous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\">IsUltrahomogeneous</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L281-L281","name":"FirstOrder.Language.IsFraisseLimit.mk","line":281,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ultrahomogeneous</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\">IsUltrahomogeneous</a></span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">age</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\">IsFraisseLimit</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L279-L283","name":"FirstOrder.Language.IsFraisseLimit","line":279,"kind":"structure","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit","doc":"A structure `M` is a Fraïssé limit for a class `K` if it is countably generated,\nultrahomogeneous, and has age `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisseLimit\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisseLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L271-L275","name":"FirstOrder.Language.IsUltrahomogeneous","line":271,"kind":"def","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous","doc":"A structure `M` is ultrahomogeneous if every embedding of a finitely generated substructure\ninto `M` extends to an automorphism of `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsUltrahomogeneous\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsUltrahomogeneous</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L256-L267","name":"FirstOrder.Language.exists_countable_is_age_of_iff","line":256,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.exists_countable_is_age_of_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.exists_countable_is_age_of_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">exists_countable_is_age_of_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">((<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Functions\">Functions</a></span> <span class=\"fn\">l</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">(∀ (<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span> <span class=\"fn\">↑<span class=\"fn\">N</span></span>)</span></span> → (<span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">(<a href=\"./Init/Core.html#Quotient.mk'\">Quotient.mk'</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">K</span>).<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">M</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">Structure.FG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\">Hereditary</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding\">JointEmbedding</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L220-L254","name":"FirstOrder.Language.exists_cg_is_age_of","line":220,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.exists_cg_is_age_of","doc":"Sufficient conditions for a class to be the age of a countably-generated structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.exists_cg_is_age_of\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">exists_cg_is_age_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">(<a href=\"./Init/Core.html#Quotient.mk'\">Quotient.mk'</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">K</span>).<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fg</span> : <span class=\"fn\">∀ <span class=\"fn\">M</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">Structure.FG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\">Hereditary</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jep</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding\">JointEmbedding</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>), <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.CG\">Structure.CG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L197-L218","name":"FirstOrder.Language.age_directLimit","line":197,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age_directLimit","doc":"The age of a direct limit of structures is the union of the ages of the structures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age_directLimit\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age_directLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#IsDirected\">IsDirected</a> <span class=\"fn\">ι</span> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> (max w w')</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">(<span class=\"fn\">G</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding\">Embedding</a></span> <span class=\"fn\">(<span class=\"fn\">G</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">G</span> <span class=\"fn\">j</span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/DirectedInverseSystem.html#DirectedSystem\">DirectedSystem</a> <span class=\"fn\">G</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> <span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">h</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">h</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/DirectLimit.html#FirstOrder.Language.DirectLimit\">DirectLimit</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">(<span class=\"fn\">G</span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L180-L194","name":"FirstOrder.Language.age.countable_quotient","line":180,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.countable_quotient","doc":"The age of a countable structure is essentially countable (has countably many isomorphism\nclasses). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.countable_quotient\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">countable_quotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Core.html#Quotient.mk'\">Quotient.mk'</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span>).<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L171-L178","name":"FirstOrder.Language.age.has_representative_as_substructure","line":171,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.has_representative_as_substructure","doc":"Any class in the age of a structure has a representative which is a finitely generated\nsubstructure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.has_representative_as_substructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">has_representative_as_substructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Quotient\">Quotient</a> <a href=\"./Mathlib/ModelTheory/Bundled.html#FirstOrder.Language.equivSetoid\">equivSetoid</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Quotient.mk'\">Quotient.mk'</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">V</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Substructures.html#FirstOrder.Language.Substructure\">Substructure</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Substructure.FG\">FG</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>), <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">{ <span class=\"fn\">α</span> := <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">V</span></span></span>, <span class=\"fn\">str</span> := <a href=\"./Init/Prelude.html#inferInstance\">inferInstance</a> }</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L168-L169","name":"FirstOrder.Language.age.fg_substructure","line":168,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.fg_substructure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.fg_substructure\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">fg_substructure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Substructures.html#FirstOrder.Language.Substructure\">Substructure</a></span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fg</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Substructure.FG\">FG</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">α</span> := <span class=\"fn\">↥<span class=\"fn\">S</span></span>, <span class=\"fn\">str</span> := <a href=\"./Init/Prelude.html#inferInstance\">inferInstance</a> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L160-L165","name":"FirstOrder.Language.age.jointEmbedding","line":160,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.jointEmbedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.jointEmbedding\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">jointEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding\">JointEmbedding</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L158-L158","name":"FirstOrder.Language.age.hereditary","line":158,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.hereditary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.hereditary\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">hereditary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\">Hereditary</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L154-L156","name":"FirstOrder.Language.age.nonempty","line":154,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.nonempty\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L148-L150","name":"FirstOrder.Language.IsFraisse.is_equiv_invariant","line":148,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.is_equiv_invariant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.is_equiv_invariant\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">is_equiv_invariant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span> <span class=\"fn\">↑<span class=\"fn\">N</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L142-L146","name":"FirstOrder.Language.Hereditary.is_equiv_invariant_of_fg","line":142,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary.is_equiv_invariant_of_fg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary.is_equiv_invariant_of_fg\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Hereditary</span>.<span class=\"name\">is_equiv_invariant_of_fg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\">Hereditary</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fg</span> : <span class=\"fn\">∀ <span class=\"fn\">M</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">Structure.FG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span> <span class=\"fn\">↑<span class=\"fn\">N</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L138-L140","name":"FirstOrder.Language.Structure.FG.mem_age_of_equiv","line":138,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Structure.FG.mem_age_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Structure.FG.mem_age_of_equiv\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Structure</span>.<span class=\"name\">FG</span>.<span class=\"name\">mem_age_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">FG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">MN</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span> <span class=\"fn\">↑<span class=\"fn\">N</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L135-L136","name":"FirstOrder.Language.Equiv.age_eq_age","line":135,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Equiv.age_eq_age","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Equiv.age_eq_age\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">age_eq_age</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">MN</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L132-L133","name":"FirstOrder.Language.Embedding.age_subset_age","line":132,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Embedding.age_subset_age","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Embedding.age_subset_age\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">age_subset_age</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">MN</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Embedding\">Embedding</a></span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L124-L128","name":"FirstOrder.Language.age.is_equiv_invariant","line":124,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.is_equiv_invariant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age.is_equiv_invariant\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span>.<span class=\"name\">is_equiv_invariant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Equiv\">Equiv</a></span> <span class=\"fn\">↑<span class=\"fn\">N</span></span> <span class=\"fn\">↑<span class=\"fn\">P</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\">age</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L120-L120","name":"FirstOrder.Language.IsFraisse.amalgamation","line":120,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.amalgamation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.amalgamation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">amalgamation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Amalgamation\">Amalgamation</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L119-L119","name":"FirstOrder.Language.IsFraisse.jointEmbedding","line":119,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.jointEmbedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.jointEmbedding\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">jointEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding\">JointEmbedding</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L118-L118","name":"FirstOrder.Language.IsFraisse.hereditary","line":118,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.hereditary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.hereditary\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">hereditary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\">Hereditary</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L117-L117","name":"FirstOrder.Language.IsFraisse.is_essentially_countable","line":117,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.is_essentially_countable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.is_essentially_countable\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">is_essentially_countable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Core.html#Quotient.mk'\">Quotient.mk'</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">K</span>).<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L116-L116","name":"FirstOrder.Language.IsFraisse.FG","line":116,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.FG","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.FG\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">FG</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">K</span> → <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">Structure.FG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L115-L115","name":"FirstOrder.Language.IsFraisse.is_nonempty","line":115,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.is_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.is_nonempty\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">is_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L114-L114","name":"FirstOrder.Language.IsFraisse.mk","line":114,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse.mk\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">is_nonempty</span> : <span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">FG</span> : <span class=\"fn\">∀ <span class=\"fn\">M</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/FinitelyGenerated.html#FirstOrder.Language.Structure.FG\">Structure.FG</a> <span class=\"fn\">L</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">is_essentially_countable</span> : <span class=\"fn\">(<a href=\"./Init/Core.html#Quotient.mk'\">Quotient.mk'</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">K</span>).<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hereditary</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\">Hereditary</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">jointEmbedding</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding\">JointEmbedding</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">amalgamation</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Amalgamation\">Amalgamation</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\">IsFraisse</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L112-L120","name":"FirstOrder.Language.IsFraisse","line":112,"kind":"class","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse","doc":"A Fraïssé class is a nonempty, essentially countable class of structures satisfying the\nhereditary, joint embedding, and amalgamation properties. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.IsFraisse\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">IsFraisse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L104-L110","name":"FirstOrder.Language.Amalgamation","line":104,"kind":"def","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Amalgamation","doc":"A class `K` has the amalgamation property when for any pair of embeddings of a structure `M` in\n`K` into other structures in `K`, those two structures can be embedded into a fourth structure in\n`K` such that the resulting square of embeddings commutes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Amalgamation\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Amalgamation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L99-L102","name":"FirstOrder.Language.JointEmbedding","line":99,"kind":"def","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding","doc":"A class `K` has the joint embedding property when for every `M`, `N` in `K`, there is another\nstructure in `K` into which both `M` and `N` embed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.JointEmbedding\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">JointEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L94-L97","name":"FirstOrder.Language.Hereditary","line":94,"kind":"def","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary","doc":"A class `K` has the hereditary property when all finitely-generated structures that embed into\nstructures in `K` are also in `K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.Hereditary\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Hereditary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Fraisse.lean#L87-L89","name":"FirstOrder.Language.age","line":87,"kind":"def","docLink":"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age","doc":"The age of a structure `M` is the class of finitely-generated structures that embed into it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Fraisse.html#FirstOrder.Language.age\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">age</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span>)</span></span></div></div>"}]}