{"name":"Mathlib.Topology.Category.TopCat.Limits.Products","instances":[],"imports":["Init","Mathlib.Topology.Category.TopCat.EpiMono","Mathlib.Topology.Category.TopCat.Limits.Basic","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.CategoryTheory.Limits.ConcreteCategory.Basic","Mathlib.Data.Set.Subsingleton","Mathlib.Tactic.CategoryTheory.Elementwise","Mathlib.Topology.Homeomorph.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L253-L328","name":"TopCat.binaryCofan_isColimit_iff","line":253,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofan_isColimit_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofan_isColimit_iff\"><span class=\"name\">TopCat</span>.<span class=\"name\">binaryCofan_isColimit_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan\">CategoryTheory.Limits.BinaryCofan</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsOpenEmbedding\">Topology.IsOpenEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inl\">inl</a></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsOpenEmbedding\">Topology.IsOpenEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inr\">inr</a></span>)</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#IsCompl\">IsCompl</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inl\">inl</a></span>)</span></span>)</span>\n        <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan.inr\">inr</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L238-L251","name":"TopCat.binaryCofanIsColimit","line":238,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofanIsColimit","doc":"The constructed binary coproduct cofan in `TopCat` is the coproduct. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofanIsColimit\"><span class=\"name\">TopCat</span>.<span class=\"name\">binaryCofanIsColimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofan\">binaryCofan</a></span> <span class=\"fn\">Y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L234-L236","name":"TopCat.binaryCofan","line":234,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofan","doc":"The binary coproduct cofan in `TopCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.binaryCofan\"><span class=\"name\">TopCat</span>.<span class=\"name\">binaryCofan</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryCofan\">CategoryTheory.Limits.BinaryCofan</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L229-L230","name":"TopCat.embedding_prod_map","line":229,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.embedding_prod_map","doc":"**Alias** of `TopCat.isEmbedding_prodMap`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.embedding_prod_map\"><span class=\"name\">TopCat</span>.<span class=\"name\">embedding_prod_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.map\">CategoryTheory.Limits.prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L222-L227","name":"TopCat.isEmbedding_prodMap","line":222,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.isEmbedding_prodMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.isEmbedding_prodMap\"><span class=\"name\">TopCat</span>.<span class=\"name\">isEmbedding_prodMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.map\">CategoryTheory.Limits.prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L220-L220","name":"TopCat.inducing_prod_map","line":220,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.inducing_prod_map","doc":"**Alias** of `TopCat.isInducing_prodMap`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.inducing_prod_map\"><span class=\"name\">TopCat</span>.<span class=\"name\">inducing_prod_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.map\">CategoryTheory.Limits.prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L213-L218","name":"TopCat.isInducing_prodMap","line":213,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.isInducing_prodMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.isInducing_prodMap\"><span class=\"name\">TopCat</span>.<span class=\"name\">isInducing_prodMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.map\">CategoryTheory.Limits.prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L190-L211","name":"TopCat.range_prod_map","line":190,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.range_prod_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.range_prod_map\"><span class=\"name\">TopCat</span>.<span class=\"name\">range_prod_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.map\">CategoryTheory.Limits.prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a>)</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a>       <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a>     <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a>)</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a>       <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L180-L188","name":"TopCat.prod_topology","line":180,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prod_topology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prod_topology\"><span class=\"name\">TopCat</span>.<span class=\"name\">prod_topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod\">⨯</a> <span class=\"fn\">Y</span>).<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.str\">str</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#TopologicalSpace.induced\">TopologicalSpace.induced</a> <span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a>)</span>)</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.str\">str</a></span></span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a>     <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#TopologicalSpace.induced\">TopologicalSpace.induced</a> <span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a>)</span>)</span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.str\">str</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L176-L176","name":"TopCat.prodIsoProd_inv_snd_apply","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_snd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_snd_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_inv_snd_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> (<span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">x</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L176-L176","name":"TopCat.prodIsoProd_inv_snd_assoc","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_snd_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_snd_assoc\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_inv_snd_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodSnd\">prodSnd</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L176-L178","name":"TopCat.prodIsoProd_inv_snd","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_snd\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_inv_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodSnd\">prodSnd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L172-L172","name":"TopCat.prodIsoProd_inv_fst_apply","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_fst_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_fst_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_inv_fst_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> (<span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">x</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L172-L172","name":"TopCat.prodIsoProd_inv_fst_assoc","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_fst_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_fst_assoc\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_inv_fst_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodFst\">prodFst</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L172-L174","name":"TopCat.prodIsoProd_inv_fst","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_inv_fst\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_inv_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodFst\">prodFst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L165-L170","name":"TopCat.prodIsoProd_hom_apply","line":165,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑(<span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod\">⨯</a> <span class=\"fn\">Y</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a>)</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a>)</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L158-L158","name":"TopCat.prodIsoProd_hom_snd_assoc","line":158,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_snd_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_snd_assoc\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_hom_snd_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodSnd\">prodSnd</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L158-L162","name":"TopCat.prodIsoProd_hom_snd","line":158,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_snd\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_hom_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodSnd\">prodSnd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.snd\">CategoryTheory.Limits.prod.snd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L152-L152","name":"TopCat.prodIsoProd_hom_fst_assoc","line":152,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_fst_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_fst_assoc\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_hom_fst_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodFst\">prodFst</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L152-L156","name":"TopCat.prodIsoProd_hom_fst","line":152,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd_hom_fst\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd_hom_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\">prodIsoProd</a></span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodFst\">prodFst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.fst\">CategoryTheory.Limits.prod.fst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L146-L150","name":"TopCat.prodIsoProd","line":146,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd","doc":"The homeomorphism between `X ⨯ Y` and the set-theoretic product of `X` and `Y`,\nequipped with the product topology.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodIsoProd\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodIsoProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod\">⨯</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> (<span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L127-L144","name":"TopCat.prodBinaryFanIsLimit","line":127,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodBinaryFanIsLimit","doc":"The constructed binary fan is indeed a limit "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodBinaryFanIsLimit\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodBinaryFanIsLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodBinaryFan\">prodBinaryFan</a></span> <span class=\"fn\">Y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L123-L125","name":"TopCat.prodBinaryFan","line":123,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodBinaryFan","doc":"The explicit binary cofan of `X, Y` given by `X × Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodBinaryFan\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodBinaryFan</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.BinaryFan\">CategoryTheory.Limits.BinaryFan</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L119-L121","name":"TopCat.prodSnd","line":119,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodSnd","doc":"The second projection from the product. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodSnd\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodSnd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> (<span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L115-L117","name":"TopCat.prodFst","line":115,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodFst","doc":"The first projection from the product. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.prodFst\"><span class=\"name\">TopCat</span>.<span class=\"name\">prodFst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> (<span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L108-L111","name":"TopCat.sigmaIsoSigma_inv_apply","line":108,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_inv_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaIsoSigma_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma\">sigmaIsoSigma</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">x</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L104-L106","name":"TopCat.sigmaIsoSigma_hom_ι_apply","line":104,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_hom_ι_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_hom_ι_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaIsoSigma_hom_ι_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma\">sigmaIsoSigma</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">x</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L100-L100","name":"TopCat.sigmaIsoSigma_hom_ι_assoc","line":100,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_hom_ι_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_hom_ι_assoc\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaIsoSigma_hom_ι_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma\">sigmaIsoSigma</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaι\">sigmaι</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L100-L102","name":"TopCat.sigmaIsoSigma_hom_ι","line":100,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_hom_ι","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma_hom_ι\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaIsoSigma_hom_ι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma\">sigmaIsoSigma</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaι\">sigmaι</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L95-L98","name":"TopCat.sigmaIsoSigma","line":95,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma","doc":"The coproduct is homeomorphic to the disjoint union of the topological spaces.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaIsoSigma\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaIsoSigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">∐</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L81-L93","name":"TopCat.sigmaCofanIsColimit","line":81,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofanIsColimit","doc":"The constructed cofan is indeed a colimit "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofanIsColimit\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaCofanIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan\">sigmaCofan</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L77-L77","name":"TopCat.sigmaCofan_ι_app","line":77,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan_ι_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan_ι_app\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaCofan_ι_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan\">sigmaCofan</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.ι\">ι</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaι\">sigmaι</a> <span class=\"fn\">α</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L77-L77","name":"TopCat.sigmaCofan_pt","line":77,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan_pt\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaCofan_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan\">sigmaCofan</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L76-L79","name":"TopCat.sigmaCofan","line":76,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan","doc":"The explicit cofan of a family of topological spaces given by the sigma type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaCofan\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaCofan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan\">CategoryTheory.Limits.Cofan</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L69-L74","name":"TopCat.sigmaι","line":69,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaι","doc":"The inclusion to the coproduct as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.sigmaι\"><span class=\"name\">TopCat</span>.<span class=\"name\">sigmaι</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L63-L67","name":"TopCat.piIsoPi_hom_apply","line":63,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_hom_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">piIsoPi_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\">α</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi\">piIsoPi</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">CategoryTheory.Limits.Pi.π</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L59-L61","name":"TopCat.piIsoPi_inv_π_apply","line":59,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_inv_π_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_inv_π_apply\"><span class=\"name\">TopCat</span>.<span class=\"name\">piIsoPi_inv_π_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">CategoryTheory.Limits.Pi.π</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi\">piIsoPi</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L55-L55","name":"TopCat.piIsoPi_inv_π_assoc","line":55,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_inv_π_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_inv_π_assoc\"><span class=\"name\">TopCat</span>.<span class=\"name\">piIsoPi_inv_π_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">α</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi\">piIsoPi</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">CategoryTheory.Limits.Pi.π</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piπ\">piπ</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L55-L57","name":"TopCat.piIsoPi_inv_π","line":55,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_inv_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi_inv_π\"><span class=\"name\">TopCat</span>.<span class=\"name\">piIsoPi_inv_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi\">piIsoPi</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">CategoryTheory.Limits.Pi.π</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piπ\">piπ</a> <span class=\"fn\">α</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L49-L53","name":"TopCat.piIsoPi","line":49,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi","doc":"The product is homeomorphic to the product of the underlying spaces,\nequipped with the product topology.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piIsoPi\"><span class=\"name\">TopCat</span>.<span class=\"name\">piIsoPi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏ᶜ</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L37-L47","name":"TopCat.piFanIsLimit","line":37,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFanIsLimit","doc":"The constructed fan is indeed a limit "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFanIsLimit\"><span class=\"name\">TopCat</span>.<span class=\"name\">piFanIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan\">piFan</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L33-L33","name":"TopCat.piFan_π_app","line":33,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan_π_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan_π_app\"><span class=\"name\">TopCat</span>.<span class=\"name\">piFan_π_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan\">piFan</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.π\">π</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piπ\">piπ</a> <span class=\"fn\">α</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L33-L33","name":"TopCat.piFan_pt","line":33,"kind":"theorem","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan_pt\"><span class=\"name\">TopCat</span>.<span class=\"name\">piFan_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan\">piFan</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L32-L35","name":"TopCat.piFan","line":32,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan","doc":"The explicit fan of a family of topological spaces given by the pi type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piFan\"><span class=\"name\">TopCat</span>.<span class=\"name\">piFan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan\">CategoryTheory.Limits.Fan</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/TopCat/Limits/Products.lean#L28-L30","name":"TopCat.piπ","line":28,"kind":"def","docLink":"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piπ","doc":"The projection from the product as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/TopCat/Limits/Products.html#TopCat.piπ\"><span class=\"name\">TopCat</span>.<span class=\"name\">piπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.of\">of</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">α</span> <span class=\"fn\">i</span>)</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">α</span> <span class=\"fn\">i</span></span></div></div>"}]}