{"name":"Mathlib.CategoryTheory.Galois.Examples","instances":[{"typeNames":["CategoryTheory.FintypeCat.Action.imageComplementIncl"],"name":"CategoryTheory.FintypeCat.instMonoActionFintypeCatImageComplementIncl","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.SingleObj","FintypeCat"],"name":"CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjFintypeCatOfFinite","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":["CategoryTheory.forget"],"name":"CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatForget","className":"CategoryTheory.Limits.PreservesFiniteLimits"},{"typeNames":["Action"],"name":"CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCat","className":"CategoryTheory.PreGaloisCategory"},{"typeNames":["Action.forget"],"name":"CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget","className":"CategoryTheory.PreGaloisCategory.FiberFunctor"},{"typeNames":["CategoryTheory.forget₂"],"name":"CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget₂","className":"CategoryTheory.PreGaloisCategory.FiberFunctor"},{"typeNames":["Action"],"name":"CategoryTheory.FintypeCat.instGaloisCategoryActionFintypeCat","className":"CategoryTheory.GaloisCategory"}],"imports":["Init","Mathlib.CategoryTheory.Galois.Basic","Mathlib.CategoryTheory.Action.Concrete","Mathlib.CategoryTheory.Action.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L159-L172","name":"CategoryTheory.FintypeCat.isoQuotientStabilizerOfIsConnected","line":159,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.isoQuotientStabilizerOfIsConnected","doc":"If `X` is a connected `G`-set and `x` is an element of `X`, `X` is isomorphic\nto the quotient of `G` by the stabilizer of `x` as `G`-sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.isoQuotientStabilizerOfIsConnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">isoQuotientStabilizerOfIsConnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.stabilizer\">MulAction.stabilizer</a> <span class=\"fn\">G</span> <span class=\"fn\">x</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.FintypeCat.ofMulAction\">Action.FintypeCat.ofMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.of\">FintypeCat.of</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.stabilizer\">MulAction.stabilizer</a> <span class=\"fn\">G</span> <span class=\"fn\">x</span></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L152-L155","name":"CategoryTheory.FintypeCat.Action.isConnected_iff_transitive","line":152,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.isConnected_iff_transitive","doc":"A nonempty finite `G`-set is connected if and only if the `G`-action is transitive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.isConnected_iff_transitive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">isConnected_iff_transitive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Pretransitive.html#MulAction.IsPretransitive\">MulAction.IsPretransitive</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L131-L150","name":"CategoryTheory.FintypeCat.Action.isConnected_of_transitive","line":131,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.isConnected_of_transitive","doc":"A nonempty `G`-set with transitive `G`-action is connected. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.isConnected_of_transitive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">isConnected_of_transitive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Pretransitive.html#MulAction.IsPretransitive\">MulAction.IsPretransitive</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">PreGaloisCategory.IsConnected</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.FintypeCat.ofMulAction\">Action.FintypeCat.ofMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L108-L129","name":"CategoryTheory.FintypeCat.Action.pretransitive_of_isConnected","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.pretransitive_of_isConnected","doc":"The `G`-action on a connected finite `G`-set is transitive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.pretransitive_of_isConnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">pretransitive_of_isConnected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.IsConnected\">PreGaloisCategory.IsConnected</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Pretransitive.html#MulAction.IsPretransitive\">MulAction.IsPretransitive</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L104-L106","name":"CategoryTheory.FintypeCat.instGaloisCategoryActionFintypeCat","line":104,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instGaloisCategoryActionFintypeCat","doc":"The category of finite `G`-sets is a `GaloisCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instGaloisCategoryActionFintypeCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instGaloisCategoryActionFintypeCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.GaloisCategory\">GaloisCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L100-L102","name":"CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget₂","line":100,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget₂","doc":"The forgetful functor from finite `G`-sets to sets is a `FiberFunctor`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instFiberFunctorActionFintypeCatForget₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.FiberFunctor\">PreGaloisCategory.FiberFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">forget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span>)</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L94-L98","name":"CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget","line":94,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget","doc":"The forgetful functor from finite `G`-sets to sets is a `FiberFunctor`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instFiberFunctorActionFintypeCatForget\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instFiberFunctorActionFintypeCatForget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.FiberFunctor\">PreGaloisCategory.FiberFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">Action.forget</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L85-L92","name":"CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCat","line":85,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCat","doc":"The category of finite `G`-sets is a `PreGaloisCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instPreGaloisCategoryActionFintypeCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory\">PreGaloisCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L81-L83","name":"CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatForget","line":81,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatForget\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instPreservesFiniteLimitsActionFintypeCatForget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteLimits\">Limits.PreservesFiniteLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">forget</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L76-L79","name":"CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjFintypeCatOfFinite","line":76,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjFintypeCatOfFinite","doc":"The category of finite sets has quotients by finite groups in arbitrary universes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjFintypeCatOfFinite\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instHasColimitsOfShapeSingleObjFintypeCatOfFinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">SingleObj</a> <span class=\"fn\">G</span>)</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L70-L74","name":"CategoryTheory.FintypeCat.instMonoActionFintypeCatImageComplementIncl","line":70,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instMonoActionFintypeCatImageComplementIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instMonoActionFintypeCatImageComplementIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instMonoActionFintypeCatImageComplementIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplementIncl\">Action.imageComplementIncl</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L63-L67","name":"CategoryTheory.FintypeCat.Action.imageComplementIncl","line":63,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplementIncl","doc":"The inclusion from the complement of the image of `f : X ⟶ Y` into `Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplementIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">imageComplementIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplement\">imageComplement</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L41-L61","name":"CategoryTheory.FintypeCat.Action.imageComplement","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplement","doc":"Given `f : X ⟶ Y` for `X Y : Action FintypeCat G`, the complement of the image\nof `f` has a natural `G`-action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplement\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">imageComplement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L34-L37","name":"CategoryTheory.FintypeCat.imageComplementIncl","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplementIncl","doc":"The inclusion from the complement of the image of `f : X ⟶ Y` into `Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplementIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">imageComplementIncl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplement\">imageComplement</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Galois/Examples.lean#L28-L32","name":"CategoryTheory.FintypeCat.imageComplement","line":28,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplement","doc":"Complement of the image of a morphism `f : X ⟶ Y` in `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplement\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">imageComplement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></div></div>"}]}