{"name":"Mathlib.LinearAlgebra.FreeModule.Finite.CardQuotient","instances":[],"imports":["Init","Mathlib.Data.Int.AbsoluteValue","Mathlib.Data.Int.Associated","Mathlib.LinearAlgebra.Determinant","Mathlib.LinearAlgebra.FreeModule.Finite.Quotient"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.lean#L110-L119","name":"AddSubgroup.relindex_eq_abs_det","line":110,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#AddSubgroup.relindex_eq_abs_det","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#AddSubgroup.relindex_eq_abs_det\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">relindex_eq_abs_det</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L₁ </span><span class=\"fn\">L₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">L₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">L₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#AddSubgroup.closure\">closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">b₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">L₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#AddSubgroup.closure\">closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">b₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/GroupTheory/Index.html#AddSubgroup.relindex\">relindex</a></span> <span class=\"fn\">L₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b₂</span>.<a href=\"./Mathlib/LinearAlgebra/Determinant.html#Basis.det\">det</a></span> <span class=\"fn\">⇑<span class=\"fn\">b₁</span></span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.lean#L103-L108","name":"AddSubgroup.relindex_eq_natAbs_det","line":103,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#AddSubgroup.relindex_eq_natAbs_det","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#AddSubgroup.relindex_eq_natAbs_det\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">relindex_eq_natAbs_det</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L₁ </span><span class=\"fn\">L₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">L₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">L₂</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Submodule/Lattice.html#AddSubgroup.toIntSubmodule\">toIntSubmodule</a> <span class=\"fn\">L₁</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₂</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Submodule/Lattice.html#AddSubgroup.toIntSubmodule\">toIntSubmodule</a> <span class=\"fn\">L₂</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L₁</span>.<a href=\"./Mathlib/GroupTheory/Index.html#AddSubgroup.relindex\">relindex</a></span> <span class=\"fn\">L₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b₂</span>.<a href=\"./Mathlib/LinearAlgebra/Determinant.html#Basis.det\">det</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">b₁</span> <span class=\"fn\">i</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.lean#L96-L101","name":"AddSubgroup.index_eq_natAbs_det","line":96,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#AddSubgroup.index_eq_natAbs_det","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#AddSubgroup.index_eq_natAbs_det\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">index_eq_natAbs_det</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bE</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bN</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/GroupTheory/Index.html#AddSubgroup.index\">index</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">bE</span>.<a href=\"./Mathlib/LinearAlgebra/Determinant.html#Basis.det\">det</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">bN</span> <span class=\"fn\">x</span>)</span></span></span>)</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.lean#L80-L90","name":"Submodule.natAbs_det_basis_change","line":80,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#Submodule.natAbs_det_basis_change","doc":"Let `b` be a basis for `M` over `ℤ` and `bN` a basis for `N` over `ℤ` of the same dimension.\nThen an alternative way to compute the cardinality of `M ⧸ N` is given by taking the determinant\nof `bN` over `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#Submodule.natAbs_det_basis_change\"><span class=\"name\">Submodule</span>.<span class=\"name\">natAbs_det_basis_change</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free\">Module.Free</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bN</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basis/Defs.html#Basis\">Basis</a> <span class=\"fn\">ι</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">↥<span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/LinearAlgebra/Determinant.html#Basis.det\">det</a></span> (<a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">bN</span></span>))</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.lean#L27-L78","name":"Submodule.natAbs_det_equiv","line":27,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#Submodule.natAbs_det_equiv","doc":"Let `e : M ≃ N` be an additive isomorphism (therefore a `ℤ`-linear equiv).\nThen an alternative way to compute the cardinality of the quotient `M ⧸ N` is given by taking\nthe determinant of `e`.\nSee `natAbs_det_basis_change` for a more familiar formulation of this result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/FreeModule/Finite/CardQuotient.html#Submodule.natAbs_det_equiv\"><span class=\"name\">Submodule</span>.<span class=\"name\">natAbs_det_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FreeModule/Basic.html#Module.Free\">Module.Free</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Finiteness/Defs.html#Module.Finite\">Module.Finite</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Equiv.html#EquivLike\">EquivLike</a> <span class=\"fn\">E</span> <span class=\"fn\">M</span> <span class=\"fn\">↥<span class=\"fn\">N</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquivClass\">AddEquivClass</a> <span class=\"fn\">E</span> <span class=\"fn\">M</span> <span class=\"fn\">↥<span class=\"fn\">N</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Determinant.html#LinearMap.det\">LinearMap.det</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#AddMonoidHom.toIntLinearMap\">toIntLinearMap</a></span>)</span>)</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">N</span>)</span></div></div>"}]}