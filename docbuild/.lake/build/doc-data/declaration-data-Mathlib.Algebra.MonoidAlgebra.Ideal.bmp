{"name":"Mathlib.Algebra.MonoidAlgebra.Ideal","instances":[],"imports":["Init","Mathlib.RingTheory.Ideal.BigOperators","Mathlib.RingTheory.Ideal.Span","Mathlib.Algebra.MonoidAlgebra.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/MonoidAlgebra/Ideal.lean#L58-L64","name":"AddMonoidAlgebra.mem_ideal_span_of'_image","line":58,"kind":"theorem","docLink":"./Mathlib/Algebra/MonoidAlgebra/Ideal.html#AddMonoidAlgebra.mem_ideal_span_of'_image","doc":"If `x` belongs to the ideal generated by generators in `s`, then every element of the support of\n`x` factors additively through an element of `s`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/MonoidAlgebra/Ideal.html#AddMonoidAlgebra.mem_ideal_span_of'_image\"><span class=\"name\">AddMonoidAlgebra</span>.<span class=\"name\">mem_ideal_span_of'_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/MonoidAlgebra/Defs.html#AddMonoidAlgebra\">AddMonoidAlgebra</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> (<span class=\"fn\"><a href=\"./Mathlib/Algebra/MonoidAlgebra/Defs.html#AddMonoidAlgebra.of'\">of'</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">m</span> ∈ <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.support\">support</a></span>, <span class=\"fn\">∃ <span class=\"fn\">m'</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∃ (<span class=\"fn\">d</span> : <span class=\"fn\">A</span>), <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/MonoidAlgebra/Ideal.lean#L17-L56","name":"MonoidAlgebra.mem_ideal_span_of_image","line":17,"kind":"theorem","docLink":"./Mathlib/Algebra/MonoidAlgebra/Ideal.html#MonoidAlgebra.mem_ideal_span_of_image","doc":"If `x` belongs to the ideal generated by generators in `s`, then every element of the support of\n`x` factors through an element of `s`.\n\nWe could spell `∃ d, m = d * m` as `MulOpposite.op m' ∣ MulOpposite.op m` but this would be worse.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/MonoidAlgebra/Ideal.html#MonoidAlgebra.mem_ideal_span_of_image\"><span class=\"name\">MonoidAlgebra</span>.<span class=\"name\">mem_ideal_span_of_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/MonoidAlgebra/Defs.html#MonoidAlgebra\">MonoidAlgebra</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> (<span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/MonoidAlgebra/Defs.html#MonoidAlgebra.of\">of</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">m</span> ∈ <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.support\">support</a></span>, <span class=\"fn\">∃ <span class=\"fn\">m'</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∃ (<span class=\"fn\">d</span> : <span class=\"fn\">G</span>), <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m'</span></span></span></span></div></div>"}]}