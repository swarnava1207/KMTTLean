{"name":"Mathlib.Tactic.Order.Graph.Tarjan","instances":[],"imports":["Init","Mathlib.Tactic.Order.Graph.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L73-L84","name":"Mathlib.Tactic.Order.Graph.findSCCs","line":73,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCs","doc":"Finds the strongly connected components of the graph `g`. Returns an array where the value at\nindex `v` represents the SCC number containing vertex `v`. The numbering of SCCs is arbitrary. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">findSCCs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph\">Graph</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L67-L71","name":"Mathlib.Tactic.Order.Graph.findSCCsImp","line":67,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCsImp","doc":"Implementation of `findSCCs` in the `StateM TarjanState` monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCsImp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">findSCCsImp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph\">Graph</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L31-L65","name":"Mathlib.Tactic.Order.Graph.tarjanDFS","line":31,"kind":"opaque","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.tarjanDFS","doc":"The Tarjan's algorithm.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.tarjanDFS\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">tarjanDFS</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph\">Graph</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L29-L29","name":"Mathlib.Tactic.Order.Graph.TarjanState.time","line":29,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.time","doc":"A time counter that increments each time the algorithm visits an unvisited vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.time\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">time</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L27-L27","name":"Mathlib.Tactic.Order.Graph.TarjanState.onStack","line":27,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.onStack","doc":"`onStack[v] = true` iff `v` is in `stack`. The structure is used to check it efficiently. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.onStack\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">onStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L25-L25","name":"Mathlib.Tactic.Order.Graph.TarjanState.stack","line":25,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.stack","doc":"The stack of visited vertices used in Tarjan's algorithm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.stack\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">stack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L23-L23","name":"Mathlib.Tactic.Order.Graph.TarjanState.lowlink","line":23,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.lowlink","doc":"`lowlink[v]` is the smallest index of any node on the stack that is reachable from `v`\nthrough `v`'s DFS subtree. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.lowlink\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">lowlink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L20-L20","name":"Mathlib.Tactic.Order.Graph.TarjanState.id","line":20,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.id","doc":"`id[v]` is the index of the vertex `v` in the DFS traversal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.id\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L18-L18","name":"Mathlib.Tactic.Order.Graph.TarjanState.mk","line":18,"kind":"ctor","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDFSState</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph.DFSState\">DFSState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id </span><span class=\"fn\">lowlink </span><span class=\"fn\">stack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onStack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L18-L29","name":"Mathlib.Tactic.Order.Graph.TarjanState.toDFSState","line":18,"kind":"def","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.toDFSState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.toDFSState\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">toDFSState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph.DFSState\">DFSState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Order/Graph/Tarjan.lean#L17-L29","name":"Mathlib.Tactic.Order.Graph.TarjanState","line":17,"kind":"structure","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState","doc":"State for Tarjan's algorithm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph.DFSState\">Mathlib.Tactic.Order.Graph.DFSState</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}