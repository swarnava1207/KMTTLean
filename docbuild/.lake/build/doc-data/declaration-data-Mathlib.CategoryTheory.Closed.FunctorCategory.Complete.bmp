{"name":"Mathlib.CategoryTheory.Closed.FunctorCategory.Complete","instances":[{"typeNames":["Prefunctor.obj"],"name":"CategoryTheory.Functor.instReflectsIsomorphismsDiscreteObjWhiskeringLeftIncl","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["Prefunctor.obj"],"name":"CategoryTheory.Functor.instPreservesLimitOfIsCoreflexivePairDiscreteObjWhiskeringLeftIncl","className":"CategoryTheory.Comonad.PreservesLimitOfIsCoreflexivePair"},{"typeNames":["Prefunctor.obj"],"name":"CategoryTheory.Functor.instComonadicLeftAdjointDiscreteObjWhiskeringLeftIncl","className":"CategoryTheory.ComonadicLeftAdjoint"},{"typeNames":["CategoryTheory.MonoidalCategory.tensorLeft"],"name":"CategoryTheory.Functor.instIsLeftAdjointDiscreteTensorLeftCompIncl","className":"CategoryTheory.Functor.IsLeftAdjoint"}],"imports":["Init","Mathlib.CategoryTheory.Adjunction.Lifting.Right","Mathlib.CategoryTheory.Closed.FunctorCategory.Groupoid","Mathlib.CategoryTheory.Groupoid.Discrete","Mathlib.CategoryTheory.Limits.Preserves.FunctorCategory","Mathlib.CategoryTheory.Monad.Comonadicity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean#L63-L71","name":"CategoryTheory.Functor.functorCategoryMonoidalClosed","line":63,"kind":"def","docLink":"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.functorCategoryMonoidalClosed","doc":"Assuming the existence of certain limits, functors into a monoidal closed category form a\nmonoidal closed category.\n\nNote: this is defined completely abstractly, and does not have any good definitional properties.\nSee the TODO in the module docstring.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.functorCategoryMonoidalClosed\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">functorCategoryMonoidalClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Monoidal.html#CategoryTheory.MonoidalClosed\">MonoidalClosed</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">C</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.functor\">Discrete.functor</a> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/KanExtension/Basic.html#CategoryTheory.Functor.HasRightKanExtension\">HasRightKanExtension</a></span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Monoidal.html#CategoryTheory.MonoidalClosed\">MonoidalClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean#L55-L61","name":"CategoryTheory.Functor.functorCategoryClosed","line":55,"kind":"def","docLink":"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.functorCategoryClosed","doc":"Auxiliary definition for `functorCategoryMonoidalClosed` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.functorCategoryClosed\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">functorCategoryClosed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Monoidal.html#CategoryTheory.MonoidalClosed\">MonoidalClosed</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">C</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.functor\">Discrete.functor</a> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/KanExtension/Basic.html#CategoryTheory.Functor.HasRightKanExtension\">HasRightKanExtension</a></span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Monoidal.html#CategoryTheory.Closed\">Closed</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean#L52-L53","name":"CategoryTheory.Functor.instIsLeftAdjointDiscreteTensorLeftCompIncl","line":52,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instIsLeftAdjointDiscreteTensorLeftCompIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instIsLeftAdjointDiscreteTensorLeftCompIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instIsLeftAdjointDiscreteTensorLeftCompIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Monoidal.html#CategoryTheory.MonoidalClosed\">MonoidalClosed</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">I</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory.tensorLeft\">MonoidalCategory.tensorLeft</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#_private.Mathlib.CategoryTheory.Closed.FunctorCategory.Complete.0.CategoryTheory.Functor.incl\">CategoryTheory.Functor.incl✝</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Functor.IsLeftAdjoint\">IsLeftAdjoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean#L48-L50","name":"CategoryTheory.Functor.instComonadicLeftAdjointDiscreteObjWhiskeringLeftIncl","line":48,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instComonadicLeftAdjointDiscreteObjWhiskeringLeftIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instComonadicLeftAdjointDiscreteObjWhiskeringLeftIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instComonadicLeftAdjointDiscreteObjWhiskeringLeftIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">C</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.functor\">Discrete.functor</a> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/KanExtension/Basic.html#CategoryTheory.Functor.HasRightKanExtension\">HasRightKanExtension</a></span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.ComonadicLeftAdjoint\">ComonadicLeftAdjoint</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskeringLeft\">whiskeringLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">I</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#_private.Mathlib.CategoryTheory.Closed.FunctorCategory.Complete.0.CategoryTheory.Functor.incl\">CategoryTheory.Functor.incl✝</a> <span class=\"fn\">I</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean#L45-L46","name":"CategoryTheory.Functor.instPreservesLimitOfIsCoreflexivePairDiscreteObjWhiskeringLeftIncl","line":45,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instPreservesLimitOfIsCoreflexivePairDiscreteObjWhiskeringLeftIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instPreservesLimitOfIsCoreflexivePairDiscreteObjWhiskeringLeftIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instPreservesLimitOfIsCoreflexivePairDiscreteObjWhiskeringLeftIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfShape\">Limits.HasLimitsOfShape</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">Limits.WalkingParallelPair</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Comonadicity.html#CategoryTheory.Comonad.PreservesLimitOfIsCoreflexivePair\">Comonad.PreservesLimitOfIsCoreflexivePair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskeringLeft\">whiskeringLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">I</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#_private.Mathlib.CategoryTheory.Closed.FunctorCategory.Complete.0.CategoryTheory.Functor.incl\">CategoryTheory.Functor.incl✝</a> <span class=\"fn\">I</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.lean#L37-L41","name":"CategoryTheory.Functor.instReflectsIsomorphismsDiscreteObjWhiskeringLeftIncl","line":37,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instReflectsIsomorphismsDiscreteObjWhiskeringLeftIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#CategoryTheory.Functor.instReflectsIsomorphismsDiscreteObjWhiskeringLeftIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instReflectsIsomorphismsDiscreteObjWhiskeringLeftIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskeringLeft\">whiskeringLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">I</span>)</span> <span class=\"fn\">I</span> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Closed/FunctorCategory/Complete.html#_private.Mathlib.CategoryTheory.Closed.FunctorCategory.Complete.0.CategoryTheory.Functor.incl\">CategoryTheory.Functor.incl✝</a> <span class=\"fn\">I</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"}]}