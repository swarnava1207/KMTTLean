{"name":"Mathlib.Topology.FiberPartition","instances":[{"typeNames":["Set.Elem"],"name":"TopologicalSpace.Fiber.instCompactSpaceElemValSetMemRangeCoeLocallyConstantPreimageSingleton","className":"CompactSpace"},{"typeNames":["Function.Fiber"],"name":"TopologicalSpace.Fiber.instFiniteFiberCoeLocallyConstant","className":"Finite"}],"imports":["Init","Mathlib.Topology.LocallyConstant.Basic","Mathlib.Logic.Function.FiberPartition"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L65-L67","name":"TopologicalSpace.Fiber.instFiniteFiberCoeLocallyConstant","line":65,"kind":"instance","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.instFiniteFiberCoeLocallyConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.instFiniteFiberCoeLocallyConstant\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">instFiniteFiberCoeLocallyConstant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/LocallyConstant/Basic.html#LocallyConstant\">LocallyConstant</a> <span class=\"fn\">S</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> <span class=\"fn\">⇑<span class=\"fn\">l</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L60-L63","name":"TopologicalSpace.Fiber.instCompactSpaceElemValSetMemRangeCoeLocallyConstantPreimageSingleton","line":60,"kind":"instance","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.instCompactSpaceElemValSetMemRangeCoeLocallyConstantPreimageSingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.instCompactSpaceElemValSetMemRangeCoeLocallyConstantPreimageSingleton\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">instCompactSpaceElemValSetMemRangeCoeLocallyConstantPreimageSingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/LocallyConstant/Basic.html#LocallyConstant\">LocallyConstant</a> <span class=\"fn\">S</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> <span class=\"fn\">⇑<span class=\"fn\">l</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L48-L56","name":"TopologicalSpace.Fiber.sigmaInclIncl","line":48,"kind":"def","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaInclIncl","doc":"The inclusion map from a fiber of a composition into the intermediate fiber. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaInclIncl\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">sigmaInclIncl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIncl\">sigmaIncl</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">a</span>)</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">b</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber.mk\">Function.Fiber.mk</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber.preimage\">Function.Fiber.preimage</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIncl\">sigmaIncl</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">a</span>)</span></span>) <span class=\"fn\">b</span>)</span></span>)</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L44-L46","name":"TopologicalSpace.Fiber.sigmaIncl","line":44,"kind":"def","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIncl","doc":"The inclusion map from a component of the disjoint union induced by `f` into `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIncl\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">sigmaIncl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">a</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">S</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L41-L42","name":"TopologicalSpace.Fiber.sigmaIsoHom_surj","line":41,"kind":"theorem","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom_surj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom_surj\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">sigmaIsoHom_surj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom\">sigmaIsoHom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L34-L39","name":"TopologicalSpace.Fiber.sigmaIsoHom_inj","line":34,"kind":"theorem","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom_inj\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">sigmaIsoHom_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom\">sigmaIsoHom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L30-L30","name":"TopologicalSpace.Fiber.sigmaIsoHom_apply","line":30,"kind":"theorem","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom_apply\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">sigmaIsoHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> <span class=\"fn\">f</span></span>) × <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom\">sigmaIsoHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x✝</span> with\n  | <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">x</span>⟩</span> =&gt; <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/FiberPartition.lean#L29-L32","name":"TopologicalSpace.Fiber.sigmaIsoHom","line":29,"kind":"def","docLink":"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom","doc":"The canonical map from the disjoint union induced by `f` to `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/FiberPartition.html#TopologicalSpace.Fiber.sigmaIsoHom\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">Fiber</span>.<span class=\"name\">sigmaIsoHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/FiberPartition.html#Function.Fiber\">Function.Fiber</a> <span class=\"fn\">f</span></span>) × <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">S</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"}]}