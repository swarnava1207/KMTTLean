{"name":"Mathlib.CategoryTheory.Idempotents.KaroubiKaroubi","instances":[{"typeNames":["CategoryTheory.Idempotents.KaroubiKaroubi.inverse"],"name":"CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiInverse","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Equivalence.functor"],"name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor","className":"CategoryTheory.Functor.Additive"},{"typeNames":["CategoryTheory.Equivalence.inverse"],"name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse","className":"CategoryTheory.Functor.Additive"}],"imports":["Init","Mathlib.CategoryTheory.Idempotents.Karoubi"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L69-L70","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse","line":69,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence</span>.<span class=\"name\">additive_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">equivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L66-L67","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor","line":66,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence.additive_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence</span>.<span class=\"name\">additive_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">equivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L59-L59","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_inverse","line":59,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">equivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L59-L59","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_counitIso","line":59,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">equivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\">counitIso</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L59-L59","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_functor","line":59,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">equivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L59-L59","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_unitIso","line":59,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence_unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\">equivalence</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\">unitIso</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L58-L64","name":"CategoryTheory.Idempotents.KaroubiKaroubi.equivalence","line":58,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence","doc":"The equivalence `Karoubi C ≌ Karoubi (Karoubi C)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.equivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L53-L53","name":"CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_inv_app_f_f","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_inv_app_f_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_inv_app_f_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">counitIso_inv_app_f_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L53-L53","name":"CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_hom_app_f_f","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_hom_app_f_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso_hom_app_f_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">counitIso_hom_app_f_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\">counitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L52-L56","name":"CategoryTheory.Idempotents.KaroubiKaroubi.counitIso","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso","doc":"The counit isomorphism of the equivalence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L47-L47","name":"CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_inv_app_f","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_inv_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_inv_app_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">unitIso_inv_app_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\">unitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L47-L47","name":"CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_hom_app_f","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_hom_app_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso_hom_app_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">unitIso_hom_app_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\">unitIso</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L46-L49","name":"CategoryTheory.Idempotents.KaroubiKaroubi.unitIso","line":46,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso","doc":"The unit isomorphism of the equivalence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.toKaroubi\">toKaroubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L44-L44","name":"CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiInverse","line":44,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiInverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.instAdditiveKaroubiInverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">instAdditiveKaroubiInverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L39-L39","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_p","line":39,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse_obj_p</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L39-L39","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_X","line":39,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_obj_X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L39-L39","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse_map_f","line":39,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse_map_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse_map_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\">inverse</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L38-L42","name":"CategoryTheory.Idempotents.KaroubiKaroubi.inverse","line":38,"kind":"def","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse","doc":"The canonical functor `Karoubi (Karoubi C) ⥤ Karoubi C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L34-L34","name":"CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f_assoc","line":34,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">p_comm_f_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L34-L36","name":"CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f","line":34,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.p_comm_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">p_comm_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L30-L30","name":"CategoryTheory.Idempotents.KaroubiKaroubi.idem_f_assoc","line":30,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">idem_f_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.lean#L30-L32","name":"CategoryTheory.Idempotents.KaroubiKaroubi.idem_f","line":30,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Idempotents/KaroubiKaroubi.html#CategoryTheory.Idempotents.KaroubiKaroubi.idem_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Idempotents</span>.<span class=\"name\">KaroubiKaroubi</span>.<span class=\"name\">idem_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">Karoubi</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span></div></div>"}]}