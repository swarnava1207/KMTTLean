{"name":"Lean.Meta.Tactic.Grind.Arith.Cutsat.Proof","instances":[{"typeNames":["Int.Linear.Expr"],"name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean","className":"Hashable"},{"typeNames":["Int.OfNat.Expr"],"name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean_1","className":"Hashable"}],"imports":["Lean.Meta.Tactic.Grind.Diseq","Lean.Meta.Tactic.Grind.Arith.Cutsat.Util","Lean.Meta.Tactic.Grind.Arith.Cutsat.Nat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L432-L434","name":"Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM.run","line":432,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CollectDecVarsM</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decVars</span> : <a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L427-L430","name":"Lean.Meta.Grind.Arith.Cutsat.UnsatProof.collectDecVars","line":427,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.collectDecVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">UnsatProof</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L419-L423","name":"Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.collectDecVars","line":419,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.collectDecVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DiseqCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L409-L417","name":"Lean.Meta.Grind.Arith.Cutsat.LeCnstr.collectDecVars","line":409,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr.collectDecVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">LeCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L402-L407","name":"Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.collectDecVars","line":402,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.collectDecVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L393-L400","name":"Lean.Meta.Grind.Arith.Cutsat.CooperSplit.collectDecVars","line":393,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.collectDecVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CooperSplit</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit\">CooperSplit</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L387-L391","name":"Lean.Meta.Grind.Arith.Cutsat.EqCnstr.collectDecVars","line":387,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr.collectDecVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr.collectDecVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">EqCnstr</span>.<span class=\"name\">collectDecVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr\">EqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\">CollectDecVarsM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L375-L375","name":"Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM","line":375,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVarsM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CollectDecVarsM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L374-L374","name":"Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.found","line":374,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.found","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.found\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CollectDecVars</span>.<span class=\"name\">State</span>.<span class=\"name\">found</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L373-L373","name":"Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.visited","line":373,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.visited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.visited\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CollectDecVars</span>.<span class=\"name\">State</span>.<span class=\"name\">visited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L372-L372","name":"Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.mk","line":372,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CollectDecVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">found</span> : <a href=\"./Lean/Expr.html#Lean.FVarIdSet\">FVarIdSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L372-L374","name":"Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State","line":372,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CollectDecVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CollectDecVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L358-L365","name":"Lean.Meta.Grind.Arith.Cutsat.setInconsistent","line":358,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.setInconsistent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.setInconsistent\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">setInconsistent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L355-L356","name":"Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProof","line":355,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">UnsatProof</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L331-L351","name":"Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProofCore","line":331,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProofCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof.toExprProofCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">UnsatProof</span>.<span class=\"name\">toExprProofCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.UnsatProof\">UnsatProof</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L291-L329","name":"Lean.Meta.Grind.Arith.Cutsat.CooperSplit.toExprProof","line":291,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.toExprProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">CooperSplit</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.CooperSplit\">CooperSplit</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L267-L289","name":"Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.toExprProof","line":267,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.toExprProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DiseqCnstr</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DiseqCnstr\">DiseqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L191-L265","name":"Lean.Meta.Grind.Arith.Cutsat.LeCnstr.toExprProof","line":191,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr.toExprProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">LeCnstr</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.LeCnstr\">LeCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L130-L189","name":"Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.toExprProof","line":130,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.toExprProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">DvdCnstr</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.DvdCnstr\">DvdCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L104-L128","name":"Lean.Meta.Grind.Arith.Cutsat.EqCnstr.toExprProof","line":104,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr.toExprProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr.toExprProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">EqCnstr</span>.<span class=\"name\">toExprProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c'</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Types.html#Lean.Meta.Grind.Arith.Cutsat.EqCnstr\">EqCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L89-L96","name":"Lean.Meta.Grind.Arith.Cutsat.withProofContext.go","line":89,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.withProofContext.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.withProofContext.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">withProofContext</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L85-L96","name":"Lean.Meta.Grind.Arith.Cutsat.withProofContext","line":85,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.withProofContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.withProofContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">withProofContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L60-L65","name":"Lean.Meta.Grind.Arith.Cutsat.mkNatExprDecl","line":60,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkNatExprDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkNatExprDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">mkNatExprDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Int.OfNat.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L53-L58","name":"Lean.Meta.Grind.Arith.Cutsat.mkExprDecl","line":53,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkExprDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkExprDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">mkExprDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Expr\">Int.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L46-L51","name":"Lean.Meta.Grind.Arith.Cutsat.mkNatCtxDecl","line":46,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkNatCtxDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkNatCtxDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">mkNatCtxDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L39-L44","name":"Lean.Meta.Grind.Arith.Cutsat.mkPolyDecl","line":39,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkPolyDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.mkPolyDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">mkPolyDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L30-L37","name":"Lean.Meta.Grind.Arith.Cutsat.caching","line":30,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.caching","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.caching\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">caching</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L26-L28","name":"Lean.Meta.Grind.Arith.Cutsat.getContext","line":26,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.getContext","doc":"Returns a Lean expression representing the variable context used to construct cutsat proofs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.getContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">getContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\">ProofM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L23-L24","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM","line":23,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM","doc":"Auxiliary monad for constructing cutsat proofs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L21-L21","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State.natExprMap","line":21,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.natExprMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.natExprMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span>.<span class=\"name\">natExprMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Int.OfNat.Expr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L20-L20","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State.exprMap","line":20,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.exprMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.exprMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span>.<span class=\"name\">exprMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Expr\">Int.Linear.Expr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L19-L19","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State.natCtxMap","line":19,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.natCtxMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.natCtxMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span>.<span class=\"name\">natCtxMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L18-L18","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State.polyMap","line":18,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.polyMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.polyMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span>.<span class=\"name\">polyMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L17-L17","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State.cache","line":17,"kind":"def","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L16-L16","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State.mk","line":16,"kind":"ctor","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cache</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">polyMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Poly\">Poly</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">natCtxMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Expr\">Int.Linear.Expr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">natExprMap</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Int.OfNat.Expr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L16-L21","name":"Lean.Meta.Grind.Arith.Cutsat.ProofM.State","line":16,"kind":"structure","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.ProofM.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">ProofM</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L14-L14","name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean_1","line":14,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instHashableExpr_lean_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Init/Data/Int/OfNat.html#Int.OfNat.Expr\">Int.OfNat.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.lean#L13-L13","name":"Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean","line":13,"kind":"instance","docLink":"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/Cutsat/Proof.html#Lean.Meta.Grind.Arith.Cutsat.instHashableExpr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Cutsat</span>.<span class=\"name\">instHashableExpr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Init/Data/Int/Linear.html#Int.Linear.Expr\">Int.Linear.Expr</a></span></div></div>"}]}