{"name":"Mathlib.Analysis.Normed.Order.Hom.Ultra","instances":[],"imports":["Init","Mathlib.Analysis.Normed.Order.Hom.Basic","Mathlib.Topology.MetricSpace.Ultra.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Normed/Order/Hom/Ultra.lean#L25-L32","name":"AddGroupSeminormClass.isUltrametricDist","line":25,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Order/Hom/Ultra.html#AddGroupSeminormClass.isUltrametricDist","doc":"Proves that when a `SeminormedAddGroup` structure is constructed from an\n`AddGroupSeminormClass` that satisfies `IsNonarchimedean`, the group has an `IsUltrametricDist`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Order/Hom/Ultra.html#AddGroupSeminormClass.isUltrametricDist\"><span class=\"name\">AddGroupSeminormClass</span>.<span class=\"name\">isUltrametricDist</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Hom/Basic.html#AddGroupSeminormClass\">AddGroupSeminormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist\">Dist</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hna</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Basic.html#IsNonarchimedean\">IsNonarchimedean</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">inst</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace.toDist\">PseudoMetricSpace.toDist</a> := by rfl)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Ultra/Basic.html#IsUltrametricDist\">IsUltrametricDist</a> <span class=\"fn\">α</span></span></div></div>"}]}