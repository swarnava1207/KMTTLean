{"name":"Mathlib.Order.Category.FinBoolAlg","instances":[{"typeNames":["FinBoolAlg","_builtin_typeu"],"name":"FinBoolAlg.instCoeSortType","className":"CoeSort"},{"typeNames":["FinBoolAlg"],"name":"FinBoolAlg.instInhabited","className":"Inhabited"},{"typeNames":["FinBoolAlg"],"name":"FinBoolAlg.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["FinBoolAlg"],"name":"FinBoolAlg.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["FinBoolAlg","BoolAlg"],"name":"FinBoolAlg.hasForgetToBoolAlg","className":"CategoryTheory.HasForget₂"},{"typeNames":["FinBoolAlg","FinBddDistLat"],"name":"FinBoolAlg.hasForgetToFinBddDistLat","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"FinBoolAlg.forgetToBoolAlg_full","className":"CategoryTheory.Functor.Full"},{"typeNames":["CategoryTheory.forget₂"],"name":"FinBoolAlg.forgetToBoolAlgFaithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FinBoolAlg","FinPartOrd"],"name":"FinBoolAlg.hasForgetToFinPartOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"FinBoolAlg.forgetToFinPartOrdFaithful","className":"CategoryTheory.Functor.Faithful"}],"imports":["Init","Mathlib.Data.Fintype.Powerset","Mathlib.Order.Category.BoolAlg","Mathlib.Order.Category.FinBddDistLat","Mathlib.Order.Hom.CompleteLattice","Mathlib.Tactic.ApplyFun","Mathlib.Data.Set.Subsingleton"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L116-L116","name":"fintypeToFinBoolAlgOp_map","line":116,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_map\"><span class=\"name\">fintypeToFinBoolAlgOp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp\">fintypeToFinBoolAlgOp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.ofHom\">BoolAlg.ofHom</a>\n      <span class=\"fn\">(let <span class=\"fn\">__src</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span>)</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span> }</span>;\n      <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span>)</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_top'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_bot'</span> := <span class=\"fn\">⋯</span> }</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L116-L116","name":"fintypeToFinBoolAlgOp_obj","line":116,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_obj\"><span class=\"name\">fintypeToFinBoolAlgOp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp\">fintypeToFinBoolAlgOp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\">FinBoolAlg.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L115-L120","name":"fintypeToFinBoolAlgOp","line":115,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp","doc":"The powerset functor. `Set` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp\"><span class=\"name\">fintypeToFinBoolAlgOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L110-L113","name":"finBoolAlg_dual_comp_forget_to_finBddDistLat","line":110,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#finBoolAlg_dual_comp_forget_to_finBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#finBoolAlg_dual_comp_forget_to_finBddDistLat\"><span class=\"name\">finBoolAlg_dual_comp_forget_to_finBddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">FinBoolAlg.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat\">FinBddDistLat</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat\">FinBddDistLat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat.dual\">FinBddDistLat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L101-L101","name":"FinBoolAlg.dualEquiv_functor","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_functor\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L101-L101","name":"FinBoolAlg.dualEquiv_inverse","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_inverse\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L100-L106","name":"FinBoolAlg.dualEquiv","line":100,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv","doc":"The equivalence between `FinBoolAlg` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L95-L95","name":"FinBoolAlg.dual_map","line":95,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual_map\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">dual</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.ofHom\">BoolAlg.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom.dual\">BoundedLatticeHom.dual</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Hom.hom\">BoolAlg.Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L94-L98","name":"FinBoolAlg.dual","line":94,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L87-L87","name":"FinBoolAlg.Iso.mk_hom","line":87,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_hom\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.ofHom\">BoolAlg.ofHom</a>\n    <span class=\"fn\">(let <span class=\"fn\">__src</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">e</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span> }</span>;\n    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">e</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_top'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_bot'</span> := <span class=\"fn\">⋯</span> }</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L87-L87","name":"FinBoolAlg.Iso.mk_inv","line":87,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_inv\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.ofHom\">BoolAlg.ofHom</a>\n    <span class=\"fn\">(let <span class=\"fn\">__src</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span> }</span>;\n    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_top'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_bot'</span> := <span class=\"fn\">⋯</span> }</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L85-L92","name":"FinBoolAlg.Iso.mk","line":85,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk","doc":"Constructs an equivalence between finite Boolean algebras from an order isomorphism between\nthem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L80-L83","name":"FinBoolAlg.forgetToFinPartOrdFaithful","line":80,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToFinPartOrdFaithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToFinPartOrdFaithful\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">forgetToFinPartOrdFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L75-L75","name":"FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_isFintype","line":75,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_isFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_isFintype\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd_forget₂_obj_isFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂.forget₂\">CategoryTheory.HasForget₂.forget₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.isFintype\">isFintype</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.isFintype\">isFintype</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L75-L75","name":"FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_carrier","line":75,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_carrier\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd_forget₂_obj_carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂.forget₂\">CategoryTheory.HasForget₂.forget₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.toPartOrd\">toPartOrd</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L75-L75","name":"FinBoolAlg.hasForgetToFinPartOrd_forget₂_map","line":75,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_map\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd_forget₂_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂.forget₂\">CategoryTheory.HasForget₂.forget₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.ofHom\">PartOrd.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Hom.hom\">BoolAlg.Hom.hom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L75-L75","name":"FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_str","line":75,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj_str\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd_forget₂_obj_str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂.forget₂\">CategoryTheory.HasForget₂.forget₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd.str\">str</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Lattice.html#SemilatticeInf.toPartialOrder\">SemilatticeInf.toPartialOrder</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L75-L78","name":"FinBoolAlg.hasForgetToFinPartOrd","line":75,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L72-L73","name":"FinBoolAlg.forgetToBoolAlgFaithful","line":72,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlgFaithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlgFaithful\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">forgetToBoolAlgFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L69-L70","name":"FinBoolAlg.forgetToBoolAlg_full","line":69,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlg_full","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlg_full\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">forgetToBoolAlg_full</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L65-L67","name":"FinBoolAlg.hasForgetToFinBddDistLat","line":65,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinBddDistLat\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinBddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat\">FinBddDistLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L62-L63","name":"FinBoolAlg.hasForgetToBoolAlg","line":62,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToBoolAlg\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L59-L60","name":"FinBoolAlg.concreteCategory","line":59,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.concreteCategory\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L56-L57","name":"FinBoolAlg.largeCategory","line":56,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.largeCategory\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L53-L54","name":"FinBoolAlg.instInhabited","line":53,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instInhabited\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L50-L51","name":"FinBoolAlg.coe_of","line":50,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.coe_of\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\">of</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L46-L48","name":"FinBoolAlg.of","line":46,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of","doc":"Construct a bundled `FinBoolAlg` from `BooleanAlgebra` + `Fintype`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L43-L44","name":"FinBoolAlg.instCoeSortType","line":43,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instCoeSortType\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L37-L37","name":"FinBoolAlg.isFintype","line":37,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.isFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.isFintype\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">isFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\">toBoolAlg</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L36-L36","name":"FinBoolAlg.mk","line":36,"kind":"ctor","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.mk\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toBoolAlg</span> : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">isFintype</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">toBoolAlg</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L36-L37","name":"FinBoolAlg.toBoolAlg","line":36,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">toBoolAlg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/FinBoolAlg.lean#L35-L37","name":"FinBoolAlg","line":35,"kind":"structure","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg","doc":"The category of finite boolean algebras with bounded lattice morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\"><span class=\"name\">FinBoolAlg</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}