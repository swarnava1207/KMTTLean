{"name":"Mathlib.Algebra.Order.AbsoluteValue.Euclidean","instances":[],"imports":["Init","Mathlib.Algebra.Order.AbsoluteValue.Basic","Mathlib.Algebra.EuclideanDomain.Int"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean#L63-L66","name":"AbsoluteValue.abs_isEuclidean","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.abs_isEuclidean","doc":"`abs : ℤ → ℤ` is a Euclidean absolute value "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.abs_isEuclidean\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">abs_isEuclidean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue.abs\">AbsoluteValue.abs</a>.<a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean\">IsEuclidean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean#L51-L52","name":"AbsoluteValue.IsEuclidean.sub_mod_lt","line":51,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.sub_mod_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.sub_mod_lt\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">IsEuclidean</span>.<span class=\"name\">sub_mod_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain\">EuclideanDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedSemiring\">OrderedSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">abv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue\">AbsoluteValue</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">abv</span>.<a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean\">IsEuclidean</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">abv</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean#L46-L47","name":"AbsoluteValue.IsEuclidean.map_lt_map_iff","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.map_lt_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.map_lt_map_iff\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">IsEuclidean</span>.<span class=\"name\">map_lt_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain\">EuclideanDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedSemiring\">OrderedSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">abv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue\">AbsoluteValue</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">abv</span>.<a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean\">IsEuclidean</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain.r\">EuclideanDomain.r</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean#L39-L39","name":"AbsoluteValue.IsEuclidean.map_lt_map_iff'","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.map_lt_map_iff'","doc":"The requirement of a Euclidean absolute value\nthat `abv` is monotone with respect to `≺` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.map_lt_map_iff'\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">IsEuclidean</span>.<span class=\"name\">map_lt_map_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain\">EuclideanDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedSemiring\">OrderedSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">abv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue\">AbsoluteValue</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">abv</span>.<a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean\">IsEuclidean</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain.r\">EuclideanDomain.r</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean#L36-L36","name":"AbsoluteValue.IsEuclidean.mk","line":36,"kind":"ctor","docLink":"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean.mk\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">IsEuclidean</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain\">EuclideanDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedSemiring\">OrderedSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">abv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue\">AbsoluteValue</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_lt_map_iff'</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}, <span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">abv</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain.r\">EuclideanDomain.r</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">abv</span>.<a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean\">IsEuclidean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Order/AbsoluteValue/Euclidean.lean#L33-L39","name":"AbsoluteValue.IsEuclidean","line":33,"kind":"structure","docLink":"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean","doc":"An absolute value `abv : R → S` is Euclidean if it is compatible with the\n`EuclideanDomain` structure on `R`, namely `abv` is strictly monotone with respect to the well\nfounded relation `≺` on `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/AbsoluteValue/Euclidean.html#AbsoluteValue.IsEuclidean\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">IsEuclidean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/EuclideanDomain/Defs.html#EuclideanDomain\">EuclideanDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedSemiring\">OrderedSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">abv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue\">AbsoluteValue</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}