{"name":"Mathlib.GroupTheory.Nilpotent","instances":[{"typeNames":["upperCentralSeriesStep"],"name":"instNormalUpperCentralSeriesStep","className":"Subgroup.Normal"},{"typeNames":["upperCentralSeries"],"name":"upperCentralSeries_normal","className":"Subgroup.Normal"},{"typeNames":["lowerCentralSeries"],"name":"lowerCentralSeries_normal","className":"Subgroup.Normal"},{"typeNames":["Subtype"],"name":"Subgroup.isNilpotent","className":"Group.IsNilpotent"},{"typeNames":[],"name":"Group.isNilpotent_of_subsingleton","className":"Group.IsNilpotent"},{"typeNames":["HasQuotient.Quotient"],"name":"nilpotent_quotient_of_nilpotent","className":"Group.IsNilpotent"},{"typeNames":[],"name":"CommGroup.isNilpotent","className":"Group.IsNilpotent"},{"typeNames":["Prod"],"name":"isNilpotent_prod","className":"Group.IsNilpotent"},{"typeNames":[],"name":"isNilpotent_pi","className":"Group.IsNilpotent"},{"typeNames":[],"name":"IsNilpotent.to_isSolvable","className":"IsSolvable"}],"imports":["Init","Mathlib.GroupTheory.Solvable","Mathlib.GroupTheory.Sylow","Mathlib.Algebra.Group.Subgroup.Order","Mathlib.GroupTheory.Commutator.Finite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L839-L857","name":"isNilpotent_of_finite_tfae","line":839,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_of_finite_tfae","doc":"A finite group is nilpotent iff the normalizer condition holds, and iff all maximal groups are\nnormal and iff all Sylow groups are normal and iff the group is the direct product of its Sylow\ngroups. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_of_finite_tfae\"><span class=\"name\">isNilpotent_of_finite_tfae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#NormalizerCondition\">NormalizerCondition</a> <span class=\"fn\">G</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">∀ (<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Atoms.html#IsCoatom\">IsCoatom</a> <span class=\"fn\">H</span></span> → <span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></span></span><a href=\"./Init/Prelude.html#List.cons\">,</a>     <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Sylow.html#Sylow\">Sylow</a> <span class=\"fn\">p</span> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></span></span></span><a href=\"./Init/Prelude.html#List.cons\">,</a>     <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\">((<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Sylow.html#Sylow\">Sylow</a> <span class=\"fn\">(↑<span class=\"fn\">p</span>)</span> <span class=\"fn\">G</span></span>) → <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">P</span></span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span>)</span><a href=\"./Init/Prelude.html#List.cons\">]</a>.<a href=\"./Mathlib/Data/List/TFAE.html#List.TFAE\">TFAE</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L827-L837","name":"isNilpotent_of_product_of_sylow_group","line":827,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_of_product_of_sylow_group","doc":"If a finite group is the direct product of its Sylow groups, it is nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_of_product_of_sylow_group\"><span class=\"name\">isNilpotent_of_product_of_sylow_group</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">((<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Sylow.html#Sylow\">Sylow</a> <span class=\"fn\">(↑<span class=\"fn\">p</span>)</span> <span class=\"fn\">G</span></span>) → <span class=\"fn\">↥<span class=\"fn\">↑<span class=\"fn\">P</span></span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L804-L823","name":"IsPGroup.isNilpotent","line":804,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#IsPGroup.isNilpotent","doc":"A p-group is nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#IsPGroup.isNilpotent\"><span class=\"name\">IsPGroup</span>.<span class=\"name\">isNilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/PGroup.html#IsPGroup\">IsPGroup</a> <span class=\"fn\">p</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L778-L794","name":"normalizerCondition_of_isNilpotent","line":778,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#normalizerCondition_of_isNilpotent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#normalizerCondition_of_isNilpotent\"><span class=\"name\">normalizerCondition_of_isNilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#NormalizerCondition\">NormalizerCondition</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L771-L776","name":"IsNilpotent.to_isSolvable","line":771,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#IsNilpotent.to_isSolvable","doc":"A nilpotent subgroup is solvable "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#IsNilpotent.to_isSolvable\"><span class=\"name\">IsNilpotent</span>.<span class=\"name\">to_isSolvable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Solvable.html#IsSolvable\">IsSolvable</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L761-L767","name":"nilpotencyClass_pi","line":761,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_pi","doc":"The nilpotency class of an n-ary product is the sup of the nilpotency classes of the factors "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_pi\"><span class=\"name\">nilpotencyClass_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Gs</span> : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">Gs</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L751-L759","name":"isNilpotent_pi","line":751,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_pi","doc":"n-ary products of nilpotent groups are nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_pi\"><span class=\"name\">isNilpotent_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Gs</span> : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">Gs</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L738-L749","name":"lowerCentralSeries_pi_of_finite","line":738,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_pi_of_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_pi_of_finite\"><span class=\"name\">lowerCentralSeries_pi_of_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Gs</span> : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">Gs</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L720-L729","name":"isNilpotent_pi_of_bounded_class","line":720,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_pi_of_bounded_class","doc":"products of nilpotent groups are nilpotent if their nilpotency class is bounded "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_pi_of_bounded_class\"><span class=\"name\">isNilpotent_pi_of_bounded_class</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Gs</span> : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">Gs</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L707-L718","name":"lowerCentralSeries_pi_le","line":707,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_pi_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_pi_le\"><span class=\"name\">lowerCentralSeries_pi_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Gs</span> : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><span class=\"fn\">Gs</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L692-L698","name":"nilpotencyClass_prod","line":692,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_prod","doc":"The nilpotency class of a product is the max of the nilpotency classes of the factors "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_prod\"><span class=\"name\">nilpotencyClass_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> (<span class=\"fn\">G₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L684-L690","name":"isNilpotent_prod","line":684,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_prod","doc":"Products of nilpotent groups are nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_prod\"><span class=\"name\">isNilpotent_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> (<span class=\"fn\">G₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L671-L682","name":"lowerCentralSeries_prod","line":671,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_prod\"><span class=\"name\">lowerCentralSeries_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> (<span class=\"fn\">G₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G₂</span>) <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G₁</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G₂</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L661-L665","name":"commGroupOfNilpotencyClass","line":661,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#commGroupOfNilpotencyClass","doc":"Groups with nilpotency class at most one are abelian "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#commGroupOfNilpotencyClass\"><span class=\"name\">commGroupOfNilpotencyClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L655-L659","name":"CommGroup.nilpotencyClass_le_one","line":655,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#CommGroup.nilpotencyClass_le_one","doc":"Abelian groups have nilpotency class at most one "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#CommGroup.nilpotencyClass_le_one\"><span class=\"name\">CommGroup</span>.<span class=\"name\">nilpotencyClass_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L649-L653","name":"CommGroup.isNilpotent","line":649,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#CommGroup.isNilpotent","doc":"Abelian groups are nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#CommGroup.isNilpotent\"><span class=\"name\">CommGroup</span>.<span class=\"name\">isNilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L643-L647","name":"derived_le_lower_central","line":643,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#derived_le_lower_central","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#derived_le_lower_central\"><span class=\"name\">derived_le_lower_central</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Solvable.html#derivedSeries\">derivedSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L627-L641","name":"nilpotent_center_quotient_ind","line":627,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_center_quotient_ind","doc":"A custom induction principle for nilpotent groups. The base case is a trivial group\n(`subsingleton G`), and in the induction step, one can assume the hypothesis for\nthe group quotiented by its center. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_center_quotient_ind\"><span class=\"name\">nilpotent_center_quotient_ind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>] → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbase</span> : <span class=\"fn\">∀ (<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>] [<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span>], <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstep</span> : <span class=\"fn\">∀ (<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>] [<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>], <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">G</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L621-L625","name":"of_quotient_center_nilpotent","line":621,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#of_quotient_center_nilpotent","doc":"If the quotient by `center G` is nilpotent, then so is G. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#of_quotient_center_nilpotent\"><span class=\"name\">of_quotient_center_nilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L611-L619","name":"nilpotencyClass_eq_quotient_center_plus_one","line":611,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_eq_quotient_center_plus_one","doc":"The nilpotency class of a non-trivial group is one more than its quotient by the center "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_eq_quotient_center_plus_one\"><span class=\"name\">nilpotencyClass_eq_quotient_center_plus_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hH</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L592-L609","name":"nilpotencyClass_quotient_center","line":592,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_quotient_center","doc":"Quotienting the `center G` reduces the nilpotency class by 1 "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_quotient_center\"><span class=\"name\">nilpotencyClass_quotient_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hH</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L586-L590","name":"nilpotencyClass_zero_iff_subsingleton","line":586,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_zero_iff_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_zero_iff_subsingleton\"><span class=\"name\">nilpotencyClass_zero_iff_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L569-L584","name":"comap_upperCentralSeries_quotient_center","line":569,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#comap_upperCentralSeries_quotient_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#comap_upperCentralSeries_quotient_center\"><span class=\"name\">comap_upperCentralSeries_quotient_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/QuotientGroup/Defs.html#QuotientGroup.mk'\">QuotientGroup.mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>) <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L560-L563","name":"nilpotencyClass_quotient_le","line":560,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_quotient_le","doc":"The nilpotency class of a quotient of `G` is less or equal the nilpotency class of `G` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_quotient_le\"><span class=\"name\">nilpotencyClass_quotient_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L555-L558","name":"nilpotent_quotient_of_nilpotent","line":555,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_quotient_of_nilpotent","doc":"A quotient of a nilpotent group is nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_quotient_of_nilpotent\"><span class=\"name\">nilpotent_quotient_of_nilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L550-L553","name":"nilpotent_of_mulEquiv","line":550,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_of_mulEquiv","doc":"Nilpotency respects isomorphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_of_mulEquiv\"><span class=\"name\">nilpotent_of_mulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">G'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L536-L548","name":"nilpotencyClass_le_of_surjective","line":536,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_le_of_surjective","doc":"The nilpotency class of the range of a surjective homomorphism from a\nnilpotent group is less or equal the nilpotency class of the domain "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_le_of_surjective\"><span class=\"name\">nilpotencyClass_le_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L524-L534","name":"nilpotent_of_surjective","line":524,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_of_surjective","doc":"The range of a surjective homomorphism from a nilpotent group is nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_of_surjective\"><span class=\"name\">nilpotent_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L512-L522","name":"nilpotencyClass_le_of_ker_le_center","line":512,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_le_of_ker_le_center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotencyClass_le_of_ker_le_center\"><span class=\"name\">nilpotencyClass_le_of_ker_le_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf1</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.ker\">ker</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hH</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L502-L510","name":"isNilpotent_of_ker_le_center","line":502,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_of_ker_le_center","doc":"The preimage of a nilpotent group is nilpotent if the kernel of the homomorphism is contained\nin the center "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#isNilpotent_of_ker_le_center\"><span class=\"name\">isNilpotent_of_ker_le_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf1</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.ker\">ker</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hH</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L495-L500","name":"lowerCentralSeries_succ_eq_bot","line":495,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_succ_eq_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_succ_eq_bot\"><span class=\"name\">lowerCentralSeries_succ_eq_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L483-L493","name":"lowerCentralSeries.map","line":483,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries.map\"><span class=\"name\">lowerCentralSeries</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">H</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L475-L481","name":"upperCentralSeries.map","line":475,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries.map\"><span class=\"name\">upperCentralSeries</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">H</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L472-L473","name":"Group.isNilpotent_of_subsingleton","line":472,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_of_subsingleton\"><span class=\"name\">Group</span>.<span class=\"name\">isNilpotent_of_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L462-L470","name":"Subgroup.nilpotencyClass_le","line":462,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Subgroup.nilpotencyClass_le","doc":"The nilpotency class of a subgroup is less or equal to the nilpotency class of the group "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Subgroup.nilpotencyClass_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">nilpotencyClass_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L453-L460","name":"Subgroup.isNilpotent","line":453,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Subgroup.isNilpotent","doc":"A subgroup of a nilpotent group is nilpotent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Subgroup.isNilpotent\"><span class=\"name\">Subgroup</span>.<span class=\"name\">isNilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">↥<span class=\"fn\">H</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L444-L451","name":"lowerCentralSeries_map_subtype_le","line":444,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_map_subtype_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_map_subtype_le\"><span class=\"name\">lowerCentralSeries_map_subtype_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.subtype\">subtype</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">(↥<span class=\"fn\">H</span>)</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L431-L440","name":"lowerCentralSeries_eq_bot_iff_nilpotencyClass_le","line":431,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_eq_bot_iff_nilpotencyClass_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_eq_bot_iff_nilpotencyClass_le\"><span class=\"name\">lowerCentralSeries_eq_bot_iff_nilpotencyClass_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L424-L429","name":"lowerCentralSeries_nilpotencyClass","line":424,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_nilpotencyClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_nilpotencyClass\"><span class=\"name\">lowerCentralSeries_nilpotencyClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L413-L422","name":"lowerCentralSeries_length_eq_nilpotencyClass","line":413,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_length_eq_nilpotencyClass","doc":"The nilpotency class of a nilpotent `G` is equal to the length of the lower central series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_length_eq_nilpotencyClass\"><span class=\"name\">lowerCentralSeries_length_eq_nilpotencyClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Find.html#Nat.find\">Nat.find</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L394-L410","name":"least_descending_central_series_length_eq_nilpotencyClass","line":394,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#least_descending_central_series_length_eq_nilpotencyClass","doc":"The nilpotency class of a nilpotent `G` is equal to the smallest `n` for which the descending\ncentral series reaches `⊥` in its `n`'th term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#least_descending_central_series_length_eq_nilpotencyClass\"><span class=\"name\">least_descending_central_series_length_eq_nilpotencyClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Find.html#Nat.find\">Nat.find</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L381-L391","name":"least_ascending_central_series_length_eq_nilpotencyClass","line":381,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#least_ascending_central_series_length_eq_nilpotencyClass","doc":"The nilpotency class of a nilpotent `G` is equal to the smallest `n` for which an ascending\ncentral series reaches `G` in its `n`'th term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#least_ascending_central_series_length_eq_nilpotencyClass\"><span class=\"name\">least_ascending_central_series_length_eq_nilpotencyClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Find.html#Nat.find\">Nat.find</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L370-L378","name":"upperCentralSeries_eq_top_iff_nilpotencyClass_le","line":370,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_eq_top_iff_nilpotencyClass_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_eq_top_iff_nilpotencyClass_le\"><span class=\"name\">upperCentralSeries_eq_top_iff_nilpotencyClass_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L366-L368","name":"upperCentralSeries_nilpotencyClass","line":366,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_nilpotencyClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_nilpotencyClass\"><span class=\"name\">upperCentralSeries_nilpotencyClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\">Group.nilpotencyClass</a> <span class=\"fn\">G</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L361-L363","name":"Group.nilpotencyClass","line":361,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass","doc":"The nilpotency class of a nilpotent group is the smallest natural `n` such that\nthe `n`'th term of the upper central series is `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.nilpotencyClass\"><span class=\"name\">Group</span>.<span class=\"name\">nilpotencyClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L343-L353","name":"nilpotent_iff_lowerCentralSeries","line":343,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_iff_lowerCentralSeries","doc":"A group is nilpotent if and only if its lower central series eventually reaches\nthe trivial subgroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_iff_lowerCentralSeries\"><span class=\"name\">nilpotent_iff_lowerCentralSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L336-L341","name":"descending_central_series_ge_lower","line":336,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#descending_central_series_ge_lower","doc":"Any descending central series for a group is bounded below by the lower central series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#descending_central_series_ge_lower\"><span class=\"name\">descending_central_series_ge_lower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hH</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\">IsDescendingCentralSeries</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L328-L334","name":"lowerCentralSeries_isDescendingCentralSeries","line":328,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_isDescendingCentralSeries","doc":"The lower central series of a group is a descending central series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_isDescendingCentralSeries\"><span class=\"name\">lowerCentralSeries_isDescendingCentralSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\">IsDescendingCentralSeries</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L317-L325","name":"lowerCentralSeries_antitone","line":317,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_antitone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_antitone\"><span class=\"name\">lowerCentralSeries_antitone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Antitone\">Antitone</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L312-L315","name":"lowerCentralSeries_normal","line":312,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_normal\"><span class=\"name\">lowerCentralSeries_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L307-L310","name":"lowerCentralSeries_succ","line":307,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_succ\"><span class=\"name\">lowerCentralSeries_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">∃ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>, <span class=\"fn\">∃ <span class=\"fn\">q</span> ∈ <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>, <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L302-L305","name":"mem_lowerCentralSeries_succ_iff","line":302,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#mem_lowerCentralSeries_succ_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#mem_lowerCentralSeries_succ_iff\"><span class=\"name\">mem_lowerCentralSeries_succ_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">∃ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>, <span class=\"fn\">∃ <span class=\"fn\">q</span> ∈ <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>, <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L299-L300","name":"lowerCentralSeries_one","line":299,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_one\"><span class=\"name\">lowerCentralSeries_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Abelianization.html#commutator\">commutator</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L296-L297","name":"lowerCentralSeries_zero","line":296,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries_zero\"><span class=\"name\">lowerCentralSeries_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\">lowerCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L288-L292","name":"lowerCentralSeries","line":288,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries","doc":"The lower central series of a group `G` is a sequence `H n` of subgroups of `G`, defined\nby `H 0` is all of `G` and for `n≥1`, `H (n + 1) = ⁅H n, G⁆` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#lowerCentralSeries\"><span class=\"name\">lowerCentralSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L271-L286","name":"nilpotent_iff_finite_descending_central_series","line":271,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_iff_finite_descending_central_series","doc":"A group `G` is nilpotent iff there exists a descending central series which reaches the\ntrivial group in a finite time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_iff_finite_descending_central_series\"><span class=\"name\">nilpotent_iff_finite_descending_central_series</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\">IsDescendingCentralSeries</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L258-L269","name":"is_ascending_rev_series_of_is_descending","line":258,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#is_ascending_rev_series_of_is_descending","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#is_ascending_rev_series_of_is_descending\"><span class=\"name\">is_ascending_rev_series_of_is_descending</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdesc</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\">IsDescendingCentralSeries</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\">IsAscendingCentralSeries</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">H</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L255-L256","name":"is_decending_rev_series_of_is_ascending","line":255,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#is_decending_rev_series_of_is_ascending","doc":"**Alias** of `is_descending_rev_series_of_is_ascending`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#is_decending_rev_series_of_is_ascending\"><span class=\"name\">is_decending_rev_series_of_is_ascending</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasc</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\">IsAscendingCentralSeries</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\">IsDescendingCentralSeries</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">H</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L240-L253","name":"is_descending_rev_series_of_is_ascending","line":240,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#is_descending_rev_series_of_is_ascending","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#is_descending_rev_series_of_is_ascending\"><span class=\"name\">is_descending_rev_series_of_is_ascending</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasc</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\">IsAscendingCentralSeries</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\">IsDescendingCentralSeries</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">H</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L228-L238","name":"nilpotent_iff_finite_ascending_central_series","line":228,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_iff_finite_ascending_central_series","doc":"A group `G` is nilpotent iff there exists an ascending central series which reaches `G` in\nfinitely many steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#nilpotent_iff_finite_ascending_central_series\"><span class=\"name\">nilpotent_iff_finite_ascending_central_series</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">Group.IsNilpotent</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\">IsAscendingCentralSeries</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L222-L226","name":"upperCentralSeries_mono","line":222,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_mono\"><span class=\"name\">upperCentralSeries_mono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L217-L220","name":"upperCentralSeries_isAscendingCentralSeries","line":217,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_isAscendingCentralSeries","doc":"The upper central series of a group is an ascending central series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_isAscendingCentralSeries\"><span class=\"name\">upperCentralSeries_isAscendingCentralSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\">IsAscendingCentralSeries</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L206-L213","name":"ascending_central_series_le_upper","line":206,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#ascending_central_series_le_upper","doc":"Any ascending central series for a group is bounded above by the upper central series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#ascending_central_series_le_upper\"><span class=\"name\">ascending_central_series_le_upper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hH</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\">IsAscendingCentralSeries</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L201-L204","name":"IsDescendingCentralSeries","line":201,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries","doc":"A sequence of subgroups of `G` is a descending central series if `H 0` is `G` and\n`⁅H n, G⁆ ⊆ H (n + 1)` for all `n`. Note that we do not require that `H n = {1}` for some `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#IsDescendingCentralSeries\"><span class=\"name\">IsDescendingCentralSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L196-L199","name":"IsAscendingCentralSeries","line":196,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries","doc":"A sequence of subgroups of `G` is an ascending central series if `H 0` is trivial and\n`⁅H (n + 1), G⁆ ⊆ H n` for all `n`. Note that we do not require that `H n = G` for some `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#IsAscendingCentralSeries\"><span class=\"name\">IsAscendingCentralSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L189-L190","name":"Group.IsNilpotent.isVirtuallyNilpotent","line":189,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.isVirtuallyNilpotent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.isVirtuallyNilpotent\"><span class=\"name\">Group</span>.<span class=\"name\">IsNilpotent</span>.<span class=\"name\">isVirtuallyNilpotent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hG</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsVirtuallyNilpotent\">IsVirtuallyNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L186-L187","name":"Group.IsVirtuallyNilpotent","line":186,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.IsVirtuallyNilpotent","doc":"A group `G` is virtually nilpotent if it has a nilpotent cofinite subgroup `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsVirtuallyNilpotent\"><span class=\"name\">Group</span>.<span class=\"name\">IsVirtuallyNilpotent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L182-L183","name":"Group.isNilpotent_top","line":182,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_top\"><span class=\"name\">Group</span>.<span class=\"name\">isNilpotent_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">↥<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L176-L180","name":"Group.isNilpotent_congr","line":176,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_congr\"><span class=\"name\">Group</span>.<span class=\"name\">isNilpotent_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L173-L174","name":"Group.IsNilpotent.nilpotent","line":173,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.nilpotent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.nilpotent\"><span class=\"name\">Group</span>.<span class=\"name\">IsNilpotent</span>.<span class=\"name\">nilpotent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L171-L171","name":"Group.IsNilpotent.nilpotent'","line":171,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.nilpotent'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.nilpotent'\"><span class=\"name\">Group</span>.<span class=\"name\">IsNilpotent</span>.<span class=\"name\">nilpotent'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L170-L170","name":"Group.IsNilpotent.mk","line":170,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent.mk\"><span class=\"name\">Group</span>.<span class=\"name\">IsNilpotent</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nilpotent'</span> : <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L169-L169","name":"Group.isNilpotent_iff","line":169,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.isNilpotent_iff\"><span class=\"name\">Group</span>.<span class=\"name\">isNilpotent_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\">IsNilpotent</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L168-L171","name":"Group.IsNilpotent","line":168,"kind":"class","docLink":"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent","doc":"A group `G` is nilpotent if its upper central series is eventually `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#Group.IsNilpotent\"><span class=\"name\">Group</span>.<span class=\"name\">IsNilpotent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L155-L161","name":"comap_upperCentralSeries","line":155,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#comap_upperCentralSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#comap_upperCentralSeries\"><span class=\"name\">comap_upperCentralSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">H</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(↑<span class=\"fn\">e</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">H</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L149-L153","name":"mem_upperCentralSeries_succ_iff","line":149,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#mem_upperCentralSeries_succ_iff","doc":"The `n+1`st term of the upper central series `H i` has underlying set equal to the `x` such\nthat `⁅x,G⁆ ⊆ H n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#mem_upperCentralSeries_succ_iff\"><span class=\"name\">mem_upperCentralSeries_succ_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L140-L145","name":"upperCentralSeries_one","line":140,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_one\"><span class=\"name\">upperCentralSeries_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L137-L138","name":"upperCentralSeries_zero","line":137,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_zero\"><span class=\"name\">upperCentralSeries_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L134-L135","name":"upperCentralSeries_normal","line":134,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries_normal\"><span class=\"name\">upperCentralSeries_normal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\">upperCentralSeries</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L130-L132","name":"upperCentralSeries","line":130,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries","doc":"`upperCentralSeries G n` is the `n`th term in the upper central series of `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeries\"><span class=\"name\">upperCentralSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L121-L128","name":"upperCentralSeriesAux","line":121,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesAux","doc":"An auxiliary type-theoretic definition defining both the upper central series of\na group, and a proof that it is normal, all in one go. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesAux\"><span class=\"name\">upperCentralSeriesAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>) ×' <span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L115-L117","name":"instNormalUpperCentralSeriesStep","line":115,"kind":"instance","docLink":"./Mathlib/GroupTheory/Nilpotent.html#instNormalUpperCentralSeriesStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#instNormalUpperCentralSeriesStep\"><span class=\"name\">instNormalUpperCentralSeriesStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep\">upperCentralSeriesStep</a> <span class=\"fn\">H</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L104-L113","name":"upperCentralSeriesStep_eq_comap_center","line":104,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep_eq_comap_center","doc":"The proof that `upperCentralSeriesStep H` is the preimage of the centre of `G/H` under\nthe canonical surjection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep_eq_comap_center\"><span class=\"name\">upperCentralSeriesStep_eq_comap_center</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep\">upperCentralSeriesStep</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/QuotientGroup/Defs.html#QuotientGroup.mk'\">QuotientGroup.mk'</a> <span class=\"fn\">H</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Subgroup/Center.html#Subgroup.center\">Subgroup.center</a> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L99-L100","name":"mem_upperCentralSeriesStep","line":99,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Nilpotent.html#mem_upperCentralSeriesStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#mem_upperCentralSeriesStep\"><span class=\"name\">mem_upperCentralSeriesStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep\">upperCentralSeriesStep</a> <span class=\"fn\">H</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Nilpotent.lean#L84-L97","name":"upperCentralSeriesStep","line":84,"kind":"def","docLink":"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep","doc":"If `H` is a normal subgroup of `G`, then the set `{x : G | ∀ y : G, x*y*x⁻¹*y⁻¹ ∈ H}`\nis a subgroup of `G` (because it is the preimage in `G` of the centre of the\nquotient group `G/H`.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Nilpotent.html#upperCentralSeriesStep\"><span class=\"name\">upperCentralSeriesStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"}]}