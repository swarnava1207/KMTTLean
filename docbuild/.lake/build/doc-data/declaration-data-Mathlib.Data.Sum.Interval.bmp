{"name":"Mathlib.Data.Sum.Interval","instances":[{"typeNames":["Sum"],"name":"Sum.instLocallyFiniteOrder","className":"LocallyFiniteOrder"},{"typeNames":["Lex"],"name":"Sum.Lex.locallyFiniteOrder","className":"LocallyFiniteOrder"}],"imports":["Init","Mathlib.Data.Finset.Sum","Mathlib.Data.Sum.Order","Mathlib.Order.Interval.Finset.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L362-L364","name":"Sum.Lex.Ioo_inr_inr","line":362,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioo_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L358-L360","name":"Sum.Lex.Ioc_inr_inr","line":358,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioc_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L354-L356","name":"Sum.Lex.Ico_inr_inr","line":354,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ico_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L350-L352","name":"Sum.Lex.Icc_inr_inr","line":350,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Icc_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L347-L348","name":"Sum.Lex.Ioo_inr_inl","line":347,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioo_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L344-L345","name":"Sum.Lex.Ioc_inr_inl","line":344,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioc_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L341-L342","name":"Sum.Lex.Ico_inr_inl","line":341,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ico_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L338-L339","name":"Sum.Lex.Icc_inr_inl","line":338,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Icc_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L335-L336","name":"Sum.Lex.Ioo_inl_inr","line":335,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioo_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioi\">Finset.Ioi</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finset/Sum.html#Finset.disjSum\">disjSum</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Iio\">Finset.Iio</a> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L332-L333","name":"Sum.Lex.Ioc_inl_inr","line":332,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioc_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioi\">Finset.Ioi</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finset/Sum.html#Finset.disjSum\">disjSum</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Iic\">Finset.Iic</a> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L329-L330","name":"Sum.Lex.Ico_inl_inr","line":329,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ico_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ici\">Finset.Ici</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finset/Sum.html#Finset.disjSum\">disjSum</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Iio\">Finset.Iio</a> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L326-L327","name":"Sum.Lex.Icc_inl_inr","line":326,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Icc_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inrₗ\">inrₗ</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ici\">Finset.Ici</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Finset/Sum.html#Finset.disjSum\">disjSum</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Iic\">Finset.Iic</a> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L322-L324","name":"Sum.Lex.Ioo_inl_inl","line":322,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioo_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioo_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L318-L320","name":"Sum.Lex.Ioc_inl_inl","line":318,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ioc_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ioc_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L314-L316","name":"Sum.Lex.Ico_inl_inl","line":314,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Ico_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Ico_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L310-L312","name":"Sum.Lex.Icc_inl_inl","line":310,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.Icc_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">Icc_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Order.html#Sum.inlₗ\">inlₗ</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L294-L306","name":"Sum.Lex.locallyFiniteOrder","line":294,"kind":"instance","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Lex.locallyFiniteOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Lex.locallyFiniteOrder\"><span class=\"name\">Sum</span>.<span class=\"name\">Lex</span>.<span class=\"name\">locallyFiniteOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderTop\">OrderTop</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">_root_.Lex</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L277-L278","name":"Sum.Ioo_inr_inr","line":277,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioo_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L274-L275","name":"Sum.Ioc_inr_inr","line":274,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioc_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L271-L272","name":"Sum.Ico_inr_inr","line":271,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Ico_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L268-L269","name":"Sum.Icc_inr_inr","line":268,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inr_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Icc_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inr\">Function.Embedding.inr</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L264-L266","name":"Sum.Ioo_inr_inl","line":264,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioo_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L260-L262","name":"Sum.Ioc_inr_inl","line":260,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioc_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L256-L258","name":"Sum.Ico_inr_inl","line":256,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Ico_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L252-L254","name":"Sum.Icc_inr_inl","line":252,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inr_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Icc_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L248-L250","name":"Sum.Ioo_inl_inr","line":248,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioo_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L244-L246","name":"Sum.Ioc_inl_inr","line":244,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioc_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L240-L242","name":"Sum.Ico_inl_inr","line":240,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Ico_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L236-L238","name":"Sum.Icc_inl_inr","line":236,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inl_inr\"><span class=\"name\">Sum</span>.<span class=\"name\">Icc_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">inr</a> <span class=\"fn\">b₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L233-L234","name":"Sum.Ioo_inl_inl","line":233,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioo_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioo_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioo\">Finset.Ioo</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L230-L231","name":"Sum.Ioc_inl_inl","line":230,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ioc_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Ioc_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L227-L228","name":"Sum.Ico_inl_inl","line":227,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Ico_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Ico_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L224-L225","name":"Sum.Icc_inl_inl","line":224,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.Icc_inl_inl\"><span class=\"name\">Sum</span>.<span class=\"name\">Icc_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₁</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">inl</a> <span class=\"fn\">a₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Icc\">Finset.Icc</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L212-L220","name":"Sum.instLocallyFiniteOrder","line":212,"kind":"instance","docLink":"./Mathlib/Data/Sum/Interval.html#Sum.instLocallyFiniteOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Sum.instLocallyFiniteOrder\"><span class=\"name\">Sum</span>.<span class=\"name\">instLocallyFiniteOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#LocallyFiniteOrder\">LocallyFiniteOrder</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L189-L194","name":"Finset.sumLexLift_nonempty","line":189,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_nonempty\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">g₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">g₂</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span>))</span> <a href=\"./Init/Prelude.html#Or\">∨</a>       <span class=\"fn\">∃ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L175-L187","name":"Finset.sumLexLift_eq_empty","line":175,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_eq_empty\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∀ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> → <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">(∀ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> → <span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">∀ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> → <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L168-L173","name":"Finset.sumLexLift_mono","line":168,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_mono\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₁'</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂ </span><span class=\"fn\">f₂'</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁ </span><span class=\"fn\">g₁'</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₂ </span><span class=\"fn\">g₂'</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₁</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">f₁'</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">f₂'</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg₁</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">g₁'</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">g₂'</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁'</span> <span class=\"fn\">f₂'</span> <span class=\"fn\">g₁'</span> <span class=\"fn\">g₂'</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L162-L166","name":"Finset.inr_mem_sumLexLift","line":162,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.inr_mem_sumLexLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.inr_mem_sumLexLift\"><span class=\"name\">Finset</span>.<span class=\"name\">inr_mem_sumLexLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₂</span> : <span class=\"fn\">γ₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">∃ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L156-L160","name":"Finset.inl_mem_sumLexLift","line":156,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.inl_mem_sumLexLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.inl_mem_sumLexLift\"><span class=\"name\">Finset</span>.<span class=\"name\">inl_mem_sumLexLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁</span> : <span class=\"fn\">γ₁</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">c₁</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L129-L154","name":"Finset.mem_sumLexLift","line":129,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.mem_sumLexLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.mem_sumLexLift\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_sumLexLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\">γ₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">γ₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>) (<span class=\"fn\">c₁</span> : <span class=\"fn\">γ₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">c₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>) (<span class=\"fn\">c₁</span> : <span class=\"fn\">γ₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">c₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>       <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>) (<span class=\"fn\">c₂</span> : <span class=\"fn\">γ₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₂</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>         <span class=\"fn\">∃ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>) (<span class=\"fn\">c₂</span> : <span class=\"fn\">γ₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L123-L125","name":"Finset.sumLexLift_inr_inr","line":123,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inr_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inr_inr\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_inr_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L120-L121","name":"Finset.sumLexLift_inr_inl","line":120,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inr_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inr_inl\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_inr_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L116-L118","name":"Finset.sumLexLift_inl_inr","line":116,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inl_inr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inl_inr\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_inl_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">g₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Data/Finset/Sum.html#Finset.disjSum\">disjSum</a></span> <span class=\"fn\">(<span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L112-L114","name":"Finset.sumLexLift_inl_inl","line":112,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inl_inl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift_inl_inl\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift_inl_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\">sumLexLift</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.inl\">Function.Embedding.inl</a> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L103-L110","name":"Finset.sumLexLift","line":103,"kind":"def","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift","doc":"Lifts maps `α₁ → β₁ → Finset γ₁`, `α₂ → β₂ → Finset γ₂`, `α₁ → β₂ → Finset γ₁`,\n`α₂ → β₂ → Finset γ₂`  to a map `α₁ ⊕ α₂ → β₁ ⊕ β₂ → Finset (γ₁ ⊕ γ₂)`. Could be generalized to\nalternative monads if we can make sure to keep computability and universe polymorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLexLift\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLexLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> (<span class=\"fn\">γ₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">γ₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L90-L95","name":"Finset.sumLift₂_mono","line":90,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂_mono\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLift₂_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">g₁</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂ </span><span class=\"fn\">g₂</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L84-L88","name":"Finset.sumLift₂_nonempty","line":84,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂_nonempty\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLift₂_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">∃ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span>)</span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L70-L82","name":"Finset.sumLift₂_eq_empty","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂_eq_empty\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLift₂_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∀ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> → <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L63-L68","name":"Finset.inr_mem_sumLift₂","line":63,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.inr_mem_sumLift₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.inr_mem_sumLift₂\"><span class=\"name\">Finset</span>.<span class=\"name\">inr_mem_sumLift₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₂</span> : <span class=\"fn\">γ₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L56-L61","name":"Finset.inl_mem_sumLift₂","line":56,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.inl_mem_sumLift₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.inl_mem_sumLift₂\"><span class=\"name\">Finset</span>.<span class=\"name\">inl_mem_sumLift₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁</span> : <span class=\"fn\">γ₁</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">c₁</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L40-L54","name":"Finset.mem_sumLift₂","line":40,"kind":"theorem","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.mem_sumLift₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.mem_sumLift₂\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_sumLift₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\">γ₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">γ₂</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\">sumLift₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">a₁</span> : <span class=\"fn\">α₁</span>) (<span class=\"fn\">b₁</span> : <span class=\"fn\">β₁</span>) (<span class=\"fn\">c₁</span> : <span class=\"fn\">γ₁</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">a₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">b₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">c₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a₁</span> <span class=\"fn\">b₁</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">∃ (<span class=\"fn\">a₂</span> : <span class=\"fn\">α₂</span>) (<span class=\"fn\">b₂</span> : <span class=\"fn\">β₂</span>) (<span class=\"fn\">c₂</span> : <span class=\"fn\">γ₂</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">a₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">b₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">c₂</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a₂</span> <span class=\"fn\">b₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Sum/Interval.lean#L28-L36","name":"Finset.sumLift₂","line":28,"kind":"def","docLink":"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂","doc":"Lifts maps `α₁ → β₁ → Finset γ₁` and `α₂ → β₂ → Finset γ₂` to a map\n`α₁ ⊕ α₂ → β₁ ⊕ β₂ → Finset (γ₁ ⊕ γ₂)`. Could be generalized to `Alternative` functors if we can\nmake sure to keep computability and universe polymorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Sum/Interval.html#Finset.sumLift₂\"><span class=\"name\">Finset</span>.<span class=\"name\">sumLift₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α₁</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">γ₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">α₂</span> → <span class=\"fn\"><span class=\"fn\">β₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β₂</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> (<span class=\"fn\">γ₁</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">γ₂</span>)</span></span></span></div></div>"}]}