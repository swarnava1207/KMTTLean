{"name":"Mathlib.LinearAlgebra.TensorPower.Pairing","instances":[],"imports":["Init","Mathlib.GroupTheory.MonoidLocalization.Basic","Mathlib.LinearAlgebra.Dual.Defs","Mathlib.LinearAlgebra.TensorPower.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/TensorPower/Pairing.lean#L66-L69","name":"TensorPower.pairingDual_tprod_tprod","line":66,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.pairingDual_tprod_tprod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.pairingDual_tprod_tprod\"><span class=\"name\">TensorPower</span>.<span class=\"name\">pairingDual_tprod_tprod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual/Defs.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.pairingDual\">pairingDual</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/PiTensorProduct.html#PiTensorProduct.tprod\">PiTensorProduct.tprod</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/PiTensorProduct.html#PiTensorProduct.tprod\">PiTensorProduct.tprod</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">v</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">v</span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/TensorPower/Pairing.lean#L60-L63","name":"TensorPower.pairingDual","line":60,"kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.pairingDual","doc":"The linear map from the tensor power of the dual to the dual of the tensor power. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.pairingDual\"><span class=\"name\">TensorPower</span>.<span class=\"name\">pairingDual</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/TensorPower/Basic.html#TensorPower\">TensorPower</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dual/Defs.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual/Defs.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorPower/Basic.html#TensorPower\">TensorPower</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/TensorPower/Pairing.lean#L55-L58","name":"TensorPower.multilinearMapToDual_apply_tprod","line":55,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.multilinearMapToDual_apply_tprod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.multilinearMapToDual_apply_tprod\"><span class=\"name\">TensorPower</span>.<span class=\"name\">multilinearMapToDual_apply_tprod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual/Defs.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.multilinearMapToDual\">multilinearMapToDual</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/PiTensorProduct.html#PiTensorProduct.tprod\">PiTensorProduct.tprod</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">v</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">v</span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/TensorPower/Pairing.lean#L27-L52","name":"TensorPower.multilinearMapToDual","line":27,"kind":"def","docLink":"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.multilinearMapToDual","doc":"The canonical multilinear map from `n` copies of the dual of the module `M`\nto the dual of `⨂[R]^n M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/TensorPower/Pairing.html#TensorPower.multilinearMapToDual\"><span class=\"name\">TensorPower</span>.<span class=\"name\">multilinearMapToDual</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Multilinear/Basic.html#MultilinearMap\">MultilinearMap</a> <span class=\"fn\">R</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dual/Defs.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dual/Defs.html#Module.Dual\">Module.Dual</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/TensorPower/Basic.html#TensorPower\">TensorPower</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span> <span class=\"fn\">M</span>)</span>)</span></span></div></div>"}]}