{"name":"Mathlib.CategoryTheory.Category.TwoP","instances":[{"typeNames":["TwoP","_builtin_typeu"],"name":"TwoP.instCoeSortType","className":"CoeSort"},{"typeNames":["TwoP"],"name":"TwoP.instInhabited","className":"Inhabited"},{"typeNames":["TwoP"],"name":"TwoP.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["TwoP"],"name":"TwoP.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["TwoP","Bipointed"],"name":"TwoP.hasForgetToBipointed","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.CategoryTheory.Category.Bipointed","Mathlib.Data.TwoPointing"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L150-L167","name":"pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction","line":150,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction","doc":"Adding a first point is left adjoint to forgetting the first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction\"><span class=\"name\">pointedToTwoPSndForgetCompBipointedToPointedSndAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L131-L148","name":"pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction","line":131,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction","doc":"Adding a second point is left adjoint to forgetting the second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction\"><span class=\"name\">pointedToTwoPFstForgetCompBipointedToPointedFstAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L126-L129","name":"pointedToTwoPSnd_comp_forget_to_bipointed","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_forget_to_bipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_forget_to_bipointed\"><span class=\"name\">pointedToTwoPSnd_comp_forget_to_bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L121-L124","name":"pointedToTwoPFst_comp_forget_to_bipointed","line":121,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_forget_to_bipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_forget_to_bipointed\"><span class=\"name\">pointedToTwoPFst_comp_forget_to_bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L117-L119","name":"pointedToTwoPSnd_comp_swap","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_comp_swap\"><span class=\"name\">pointedToTwoPSnd_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L113-L115","name":"pointedToTwoPFst_comp_swap","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_comp_swap\"><span class=\"name\">pointedToTwoPFst_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L106-L106","name":"pointedToTwoPSnd_obj_toTwoPointing_toProd","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_toTwoPointing_toProd\"><span class=\"name\">pointedToTwoPSnd_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.point\">point</a></span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L106-L106","name":"pointedToTwoPSnd_map_toFun","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_map_toFun\"><span class=\"name\">pointedToTwoPSnd_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L106-L106","name":"pointedToTwoPSnd_obj_X","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd_obj_X\"><span class=\"name\">pointedToTwoPSnd_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\">pointedToTwoPSnd</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L105-L111","name":"pointedToTwoPSnd","line":105,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd","doc":"The functor from `Pointed` to `TwoP` which adds a first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPSnd\"><span class=\"name\">pointedToTwoPSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L98-L98","name":"pointedToTwoPFst_obj_X","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_X\"><span class=\"name\">pointedToTwoPFst_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L98-L98","name":"pointedToTwoPFst_map_toFun","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_map_toFun\"><span class=\"name\">pointedToTwoPFst_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L98-L98","name":"pointedToTwoPFst_obj_toTwoPointing_toProd","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst_obj_toTwoPointing_toProd\"><span class=\"name\">pointedToTwoPFst_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\">pointedToTwoPFst</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.point\">point</a></span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L97-L103","name":"pointedToTwoPFst","line":97,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst","doc":"The functor from `Pointed` to `TwoP` which adds a second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#pointedToTwoPFst\"><span class=\"name\">pointedToTwoPFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L92-L95","name":"TwoP_swap_comp_forget_to_Bipointed","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP_swap_comp_forget_to_Bipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP_swap_comp_forget_to_Bipointed\"><span class=\"name\">TwoP_swap_comp_forget_to_Bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">TwoP.swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L86-L88","name":"TwoP.swapEquiv_symm","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_symm\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_symm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_functor_obj_X","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_X\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_functor_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_counitIso_hom_app_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_hom_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_counitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_unitIso_inv_app_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_inv_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_unitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_functor_map_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_map_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_functor_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_inverse_obj_X","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_X\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_counitIso_inv_app_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_counitIso_inv_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_counitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_inverse_obj_toTwoPointing_toProd","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_obj_toTwoPointing_toProd\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_inverse_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_inverse_map_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_inverse_map_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_inverse_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_functor_obj_toTwoPointing_toProd","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_toTwoPointing_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_functor_obj_toTwoPointing_toProd\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_functor_obj_toTwoPointing_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.toProd\">toProd</a></span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L79-L79","name":"TwoP.swapEquiv_unitIso_hom_app_toFun","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv_unitIso_hom_app_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv_unitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L78-L84","name":"TwoP.swapEquiv","line":78,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv","doc":"The equivalence between `TwoP` and itself induced by `Prod.swap` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swapEquiv\"><span class=\"name\">TwoP</span>.<span class=\"name\">swapEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L73-L73","name":"TwoP.swap_map_toFun","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_map_toFun\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L73-L73","name":"TwoP.swap_obj_toTwoPointing","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_toTwoPointing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_toTwoPointing\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap_obj_toTwoPointing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\">toTwoPointing</a></span>.<a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L73-L73","name":"TwoP.swap_obj_X","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap_obj_X\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\">swap</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L72-L76","name":"TwoP.swap","line":72,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap","doc":"Swaps the pointed elements of a two-pointed type. `TwoPointing.swap` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.swap\"><span class=\"name\">TwoP</span>.<span class=\"name\">swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L68-L69","name":"TwoP.hasForgetToBipointed","line":68,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.hasForgetToBipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.hasForgetToBipointed\"><span class=\"name\">TwoP</span>.<span class=\"name\">hasForgetToBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L64-L66","name":"TwoP.concreteCategory","line":64,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.concreteCategory\"><span class=\"name\">TwoP</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.HomSubtype\">HomSubtype</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L61-L62","name":"TwoP.largeCategory","line":61,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.largeCategory\"><span class=\"name\">TwoP</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L57-L59","name":"TwoP.coe_toBipointed","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_toBipointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_toBipointed\"><span class=\"name\">TwoP</span>.<span class=\"name\">coe_toBipointed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\">toBipointed</a></span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L52-L55","name":"TwoP.toBipointed","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed","doc":"Turns a two-pointed type into a bipointed type, by forgetting that the pointed elements are\ndistinct. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toBipointed\"><span class=\"name\">TwoP</span>.<span class=\"name\">toBipointed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L49-L50","name":"TwoP.instInhabited","line":49,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instInhabited\"><span class=\"name\">TwoP</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L47-L47","name":"TwoPointing.TwoP","line":47,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoPointing.TwoP","doc":"**Alias** of `TwoP.of`.\n\n---\n\nTurns a two-pointing into a two-pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoPointing.TwoP\"><span class=\"name\">TwoPointing</span>.<span class=\"name\">TwoP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTwoPointing</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">_root_.TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L44-L45","name":"TwoP.coe_of","line":44,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.coe_of\"><span class=\"name\">TwoP</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTwoPointing</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.of\">of</a> <span class=\"fn\">toTwoPointing</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L40-L42","name":"TwoP.of","line":40,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.of","doc":"Turns a two-pointing into a two-pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.of\"><span class=\"name\">TwoP</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTwoPointing</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L37-L38","name":"TwoP.instCoeSortType","line":37,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.instCoeSortType\"><span class=\"name\">TwoP</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a> <a href=\"./foundational_types.html\">(Type</a> u_3)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L33-L33","name":"TwoP.toTwoPointing","line":33,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing","doc":"The two points of a bipointed type, bundled together as a pair of distinct elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.toTwoPointing\"><span class=\"name\">TwoP</span>.<span class=\"name\">toTwoPointing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L31-L31","name":"TwoP.X","line":31,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X","doc":"The underlying type of a two-pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.X\"><span class=\"name\">TwoP</span>.<span class=\"name\">X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L29-L29","name":"TwoP.mk","line":29,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP.mk\"><span class=\"name\">TwoP</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTwoPointing</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/TwoPointing.html#TwoPointing\">TwoPointing</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\">TwoP</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/TwoP.lean#L28-L33","name":"TwoP","line":28,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP","doc":"The category of two-pointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/TwoP.html#TwoP\"><span class=\"name\">TwoP</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}