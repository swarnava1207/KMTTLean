{"name":"Mathlib.RingTheory.RingHom.Surjective","instances":[],"imports":["Init","Mathlib.RingTheory.LocalProperties.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Surjective.lean#L83-L90","name":"RingHom.surjective_localRingHom_of_surjective","line":83,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_localRingHom_of_surjective","doc":"A surjective ring homomorphism `R →+* S` induces a surjective homomorphism `R_{f⁻¹(P)} →+* S_P`\nfor every prime ideal `P` of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_localRingHom_of_surjective\"><span class=\"name\">RingHom</span>.<span class=\"name\">surjective_localRingHom_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#Localization.localRingHom\">Localization.localRingHom</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Maps.html#Ideal.comap\">Ideal.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">P</span> <span class=\"fn\">f</span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Surjective.lean#L64-L81","name":"RingHom.surjective_ofLocalizationSpan","line":64,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_ofLocalizationSpan","doc":"`R →+* S` is surjective if there exists a set `{ r }` that spans `R` such that\n`Rᵣ →+* Sᵣ` is surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_ofLocalizationSpan\"><span class=\"name\">RingHom</span>.<span class=\"name\">surjective_ofLocalizationSpan</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.OfLocalizationSpan\">OfLocalizationSpan</a> <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">X</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Y</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Surjective.lean#L55-L62","name":"RingHom.surjective_localizationPreserves","line":55,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_localizationPreserves","doc":"`M⁻¹R →+* M⁻¹S` is surjective if `R →+* S` is surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_localizationPreserves\"><span class=\"name\">RingHom</span>.<span class=\"name\">surjective_localizationPreserves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LocalProperties/Basic.html#RingHom.LocalizationPreserves\">LocalizationPreserves</a> <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">X</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Y</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Surjective.lean#L44-L53","name":"RingHom.surjective_isStableUnderBaseChange","line":44,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_isStableUnderBaseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_isStableUnderBaseChange\"><span class=\"name\">RingHom</span>.<span class=\"name\">surjective_isStableUnderBaseChange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.IsStableUnderBaseChange\">IsStableUnderBaseChange</a> <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">X</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Y</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Surjective.lean#L39-L42","name":"RingHom.surjective_respectsIso","line":39,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_respectsIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_respectsIso\"><span class=\"name\">RingHom</span>.<span class=\"name\">surjective_respectsIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.RespectsIso\">RespectsIso</a> <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">X</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Y</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/RingHom/Surjective.lean#L36-L37","name":"RingHom.surjective_stableUnderComposition","line":36,"kind":"theorem","docLink":"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_stableUnderComposition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RingHom/Surjective.html#RingHom.surjective_stableUnderComposition\"><span class=\"name\">RingHom</span>.<span class=\"name\">surjective_stableUnderComposition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RingHomProperties.html#RingHom.StableUnderComposition\">StableUnderComposition</a> <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1} [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">X</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">Y</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></span></div></div>"}]}