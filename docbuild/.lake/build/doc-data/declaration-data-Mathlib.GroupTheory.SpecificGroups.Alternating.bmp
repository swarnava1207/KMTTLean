{"name":"Mathlib.GroupTheory.SpecificGroups.Alternating","instances":[{"typeNames":["Subtype"],"name":"alternatingGroup.instFintype","className":"Fintype"},{"typeNames":["Subtype"],"name":"instUniqueSubtypePermMemSubgroupAlternatingGroupOfSubsingleton","className":"Unique"},{"typeNames":["alternatingGroup"],"name":"alternatingGroup.normal","className":"Subgroup.Normal"},{"typeNames":["Subtype"],"name":"alternatingGroup.instNontrivialSubtypePermFinHAddNatOfNatMemSubgroup","className":"Nontrivial"},{"typeNames":["Subtype"],"name":"alternatingGroup.isSimpleGroup_five","className":"IsSimpleGroup"},{"typeNames":["alternatingGroup"],"name":"instCharacteristicPermAlternatingGroup","className":"Subgroup.Characteristic"}],"imports":["Init","Mathlib.Algebra.Ring.CharZero","Mathlib.Data.Fintype.Units","Mathlib.GroupTheory.IndexNormal","Mathlib.GroupTheory.Perm.Fin","Mathlib.GroupTheory.Subgroup.Simple","Mathlib.Logic.Equiv.Fin.Rotate","Mathlib.Tactic.IntervalCases"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L399-L404","name":"instCharacteristicPermAlternatingGroup","line":399,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#instCharacteristicPermAlternatingGroup","doc":"The alternating group is a characteristic subgroup of the permutation group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#instCharacteristicPermAlternatingGroup\"><span class=\"name\">instCharacteristicPermAlternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.Characteristic\">Characteristic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L387-L395","name":"Equiv.Perm.alternatingGroup_le_of_index_le_two","line":387,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.alternatingGroup_le_of_index_le_two","doc":"A subgroup of the permutation group of index ≤ 2 contains the alternating group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.alternatingGroup_le_of_index_le_two\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">alternatingGroup_le_of_index_le_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hG</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.index\">index</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L371-L385","name":"Equiv.Perm.eq_alternatingGroup_of_index_eq_two","line":371,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.eq_alternatingGroup_of_index_eq_two","doc":"The alternating group is the only subgroup of index 2 of the permutation group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.eq_alternatingGroup_of_index_eq_two\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">eq_alternatingGroup_of_index_eq_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hG</span> : <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.index\">index</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L315-L363","name":"alternatingGroup.isSimpleGroup_five","line":315,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isSimpleGroup_five","doc":"Shows that $A_5$ is simple by taking an arbitrary non-identity element and showing by casework\non its cycle type that its normal closure is all of $A_5$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isSimpleGroup_five\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isSimpleGroup_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Simple.html#IsSimpleGroup\">IsSimpleGroup</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L287-L313","name":"alternatingGroup.isConj_swap_mul_swap_of_cycleType_two","line":287,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_swap_mul_swap_of_cycleType_two","doc":"Shows that any non-identity element of $A_5$ whose cycle decomposition consists only of swaps\nis conjugate to $(04)(13)$. This is used to show that the normal closure of such a permutation\nin $A_5$ is $A_5$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_swap_mul_swap_of_cycleType_two\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isConj_swap_mul_swap_of_cycleType_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.cycleType\">cycleType</a></span>, <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">0</span> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">1</span> <span class=\"fn\">3</span></span>) <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L265-L285","name":"alternatingGroup.normalClosure_swap_mul_swap_five","line":265,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_swap_mul_swap_five","doc":"The normal closure of $(04)(13)$ within $A_5$ is the whole group. This will be\nused to show that the normal closure of any permutation of cycle type $(2,2)$ is the whole group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_swap_mul_swap_five\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">normalClosure_swap_mul_swap_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">0</span> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">1</span> <span class=\"fn\">3</span></span>, <span class=\"fn\">⋯</span>⟩</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L245-L263","name":"alternatingGroup.normalClosure_finRotate_five","line":245,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_finRotate_five","doc":"The normal closure of the 5-cycle `finRotate 5` within $A_5$ is the whole group. This will be\nused to show that the normal closure of any 5-cycle within $A_5$ is the whole group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_finRotate_five\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">normalClosure_finRotate_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Fin/Rotate.html#finRotate\">finRotate</a> <span class=\"fn\">5</span></span>, <span class=\"fn\">⋯</span>⟩</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L239-L243","name":"alternatingGroup.instNontrivialSubtypePermFinHAddNatOfNatMemSubgroup","line":239,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.instNontrivialSubtypePermFinHAddNatOfNatMemSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.instNontrivialSubtypePermFinHAddNatOfNatMemSubgroup\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">instNontrivialSubtypePermFinHAddNatOfNatMemSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>))</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L232-L237","name":"alternatingGroup.nontrivial_of_three_le_card","line":232,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.nontrivial_of_three_le_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.nontrivial_of_three_le_card\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">nontrivial_of_three_le_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h3</span> : <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L224-L230","name":"alternatingGroup.eq_bot_of_card_le_two","line":224,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.eq_bot_of_card_le_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.eq_bot_of_card_le_two\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">eq_bot_of_card_le_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L200-L216","name":"Equiv.Perm.isThreeCycle_sq_of_three_mem_cycleType_five","line":200,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.isThreeCycle_sq_of_three_mem_cycleType_five","doc":"Part of proving $A_5$ is simple. Shows that the square of any element of $A_5$ with a 3-cycle in\nits cycle decomposition is a 3-cycle, so the normal closure of the original element must be\n$A_5$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.isThreeCycle_sq_of_three_mem_cycleType_five\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isThreeCycle_sq_of_three_mem_cycleType_five</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.cycleType\">cycleType</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">IsThreeCycle</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L183-L198","name":"Equiv.Perm.IsThreeCycle.alternating_normalClosure","line":183,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.alternating_normalClosure","doc":"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.alternating_normalClosure\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsThreeCycle</span>.<span class=\"name\">alternating_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h5</span> : <span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">IsThreeCycle</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">⋯</span>⟩</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L157-L181","name":"Equiv.Perm.closure_three_cycles_eq_alternating","line":157,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.closure_three_cycles_eq_alternating","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.closure_three_cycles_eq_alternating\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">closure_three_cycles_eq_alternating</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">IsThreeCycle</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L146-L149","name":"alternatingGroup.isThreeCycle_isConj","line":146,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isThreeCycle_isConj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isThreeCycle_isConj\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isThreeCycle_isConj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h5</span> : <span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">τ</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hσ</span> : <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">σ</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">IsThreeCycle</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hτ</span> : <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">τ</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">IsThreeCycle</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L122-L144","name":"alternatingGroup.isConj_of","line":122,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_of\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isConj_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">τ</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">↑<span class=\"fn\">σ</span></span> <span class=\"fn\">↑<span class=\"fn\">τ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hσ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">σ</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L119-L120","name":"alternatingGroup.normal","line":119,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normal\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L111-L113","name":"two_mul_card_alternatingGroup","line":111,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#two_mul_card_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#two_mul_card_alternatingGroup\"><span class=\"name\">two_mul_card_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L107-L109","name":"alternatingGroup.index_eq_one","line":107,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.index_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.index_eq_one\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">index_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.index\">index</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L101-L105","name":"alternatingGroup.index_eq_two","line":101,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.index_eq_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.index_eq_two\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">index_eq_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/GroupTheory/Index.html#Subgroup.index\">index</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L95-L97","name":"Equiv.Perm.finRotate_bit1_mem_alternatingGroup","line":95,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.finRotate_bit1_mem_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.finRotate_bit1_mem_alternatingGroup\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">finRotate_bit1_mem_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Fin/Rotate.html#finRotate\">finRotate</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L91-L93","name":"Equiv.Perm.IsThreeCycle.mem_alternatingGroup","line":91,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.mem_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.mem_alternatingGroup\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsThreeCycle</span>.<span class=\"name\">mem_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">IsThreeCycle</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L86-L89","name":"Equiv.Perm.prod_list_swap_mem_alternatingGroup_iff_even_length","line":86,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.prod_list_swap_mem_alternatingGroup_iff_even_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.prod_list_swap_mem_alternatingGroup_iff_even_length\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">prod_list_swap_mem_alternatingGroup_iff_even_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.IsSwap\">IsSwap</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#Even\">Even</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L82-L84","name":"Equiv.Perm.mem_alternatingGroup","line":82,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.mem_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.mem_alternatingGroup\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Sign.html#Equiv.Perm.sign\">sign</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L77-L78","name":"alternatingGroup_eq_sign_ker","line":77,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup_eq_sign_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup_eq_sign_ker\"><span class=\"name\">alternatingGroup_eq_sign_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Sign.html#Equiv.Perm.sign\">Equiv.Perm.sign</a>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.ker\">ker</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L72-L73","name":"instUniqueSubtypePermMemSubgroupAlternatingGroupOfSubsingleton","line":72,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#instUniqueSubtypePermMemSubgroupAlternatingGroupOfSubsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#instUniqueSubtypePermMemSubgroupAlternatingGroupOfSubsingleton\"><span class=\"name\">instUniqueSubtypePermMemSubgroupAlternatingGroupOfSubsingleton</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L69-L70","name":"alternatingGroup.instFintype","line":69,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.instFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.instFintype\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">instFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L64-L67","name":"alternatingGroup","line":64,"kind":"def","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup","doc":"The alternating group on a finite type, realized as a subgroup of `Equiv.Perm`.\nFor $A_n$, use `alternatingGroup (Fin n)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\"><span class=\"name\">alternatingGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span>)</span></span></div></div>"}]}