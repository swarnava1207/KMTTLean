{"name":"Mathlib.Topology.Category.CompHaus.EffectiveEpi","instances":[{"typeNames":["CompHaus"],"name":"CompHaus.instPreregular","className":"CategoryTheory.Preregular"}],"imports":["Init","Mathlib.Topology.Category.CompHaus.Limits","Mathlib.Topology.Category.CompHausLike.EffectiveEpi"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L97-L102","name":"CompHaus.effectiveEpiFamily_of_jointly_surjective","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_of_jointly_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_of_jointly_surjective\"><span class=\"name\">CompHaus</span>.<span class=\"name\">effectiveEpiFamily_of_jointly_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">surj</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>), <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpiFamily\">CategoryTheory.EffectiveEpiFamily</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L54-L95","name":"CompHaus.effectiveEpiFamily_tfae","line":54,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_tfae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_tfae\"><span class=\"name\">CompHaus</span>.<span class=\"name\">effectiveEpiFamily_tfae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpiFamily\">CategoryTheory.EffectiveEpiFamily</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">CategoryTheory.Limits.Sigma.desc</a> <span class=\"fn\">π</span>)</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a>     <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>), <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>.<a href=\"./Mathlib/Data/List/TFAE.html#List.TFAE\">TFAE</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L47-L48","name":"CompHaus.instPreregular","line":47,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.instPreregular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.instPreregular\"><span class=\"name\">CompHaus</span>.<span class=\"name\">instPreregular</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L35-L45","name":"CompHaus.effectiveEpi_tfae","line":35,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpi_tfae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpi_tfae\"><span class=\"name\">CompHaus</span>.<span class=\"name\">effectiveEpi_tfae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B </span><span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">CategoryTheory.EffectiveEpi</a> <span class=\"fn\">π</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">π</span></span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">π</span>)</span></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a>.<a href=\"./Mathlib/Data/List/TFAE.html#List.TFAE\">TFAE</a></span></div></div>"}]}