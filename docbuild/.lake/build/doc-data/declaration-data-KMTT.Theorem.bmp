{"name":"KMTT.Theorem","instances":[{"typeNames":["HSMul.hSMul"],"name":"inv_scalar","className":"Invertible"},{"typeNames":[],"name":"inv_rat","className":"Invertible"},{"typeNames":["DomMulAct","Function.Embedding"],"name":"instMulActionDomMulActPermEmbedding_kMTT","className":"MulAction"},{"typeNames":["Function.Embedding.ModPerm"],"name":"instFintypeModPerm","className":"Fintype"}],"imports":["Init","Mathlib","KMTT.Matrices"],"declarations":[{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L156-L159","name":"inc_minor_incT_eq_lap_minor","line":156,"kind":"theorem","docLink":"./KMTT/Theorem.html#inc_minor_incT_eq_lap_minor","doc":"Theorem showing that the product of the Minor of the incidence matrix and its transpose equals the minor of the Laplacian matrix. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#inc_minor_incT_eq_lap_minor\"><span class=\"name\">inc_minor_incT_eq_lap_minor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">Adj</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./KMTT/Matrices.html#SimpleGraph.IncMinor\">IncMinor</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./KMTT/Matrices.html#SimpleGraph.IncMinor\">IncMinor</a></span>.<a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix.transpose\">transpose</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./KMTT/Matrices.html#SimpleGraph.Lapminor\">Lapminor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L131-L154","name":"inc_incT_eq_lap","line":131,"kind":"theorem","docLink":"./KMTT/Theorem.html#inc_incT_eq_lap","doc":"Proves that the product of the incidence matrix `Inc` and its transpose `Incᵀ` equals the Laplacian matrix of the graph `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#inc_incT_eq_lap\"><span class=\"name\">inc_incT_eq_lap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">Adj</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./KMTT/Matrices.html#SimpleGraph.Inc\">Inc</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./KMTT/Matrices.html#SimpleGraph.Inc\">Inc</a></span>.<a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix.transpose\">transpose</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/LapMatrix.html#SimpleGraph.lapMatrix\">SimpleGraph.lapMatrix</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L108-L128","name":"Matrix.Cauchy_Binet","line":108,"kind":"theorem","docLink":"./KMTT/Theorem.html#Matrix.Cauchy_Binet","doc":"**Cauchy-Binet formula**:\nThe determinant of a product of non-square matrices can be expressed as a sum over\ncertain minors of the factors. See <https://en.wikipedia.org/wiki/Cauchy%E2%80%93Binet_formula>.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#Matrix.Cauchy_Binet\"><span class=\"name\">Matrix</span>.<span class=\"name\">Cauchy_Binet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">B</span>).<a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant/Basic.html#Matrix.det\">det</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./KMTT/Theorem.html#Function.Embedding.ModPerm\">Function.Embedding.ModPerm</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>,\n    <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.liftOn\">Quotient.liftOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">m</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">n</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix.submatrix\">submatrix</a></span> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span>.<a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant/Basic.html#Matrix.det\">det</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix.submatrix\">submatrix</a></span> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.<a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant/Basic.html#Matrix.det\">det</a></span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L102-L104","name":"instFintypeModPerm","line":102,"kind":"instance","docLink":"./KMTT/Theorem.html#instFintypeModPerm","doc":"Noncomputable instance for the quotient type representing unordered embeddings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#instFintypeModPerm\"><span class=\"name\">instFintypeModPerm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./KMTT/Theorem.html#Function.Embedding.ModPerm\">Function.Embedding.ModPerm</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L96-L98","name":"Function.Embedding.ModPerm","line":96,"kind":"def","docLink":"./KMTT/Theorem.html#Function.Embedding.ModPerm","doc":"A choice of `m` elements from `n`, modulo permutation of the domain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#Function.Embedding.ModPerm\"><span class=\"name\">Function</span>.<span class=\"name\">Embedding</span>.<span class=\"name\">ModPerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_4 u_5)</div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L91-L94","name":"DomMulAct.equivPerm_smul_embedding_def","line":91,"kind":"theorem","docLink":"./KMTT/Theorem.html#DomMulAct.equivPerm_smul_embedding_def","doc":"Simplification lemma for the diagonal action of a permutation on embeddings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#DomMulAct.equivPerm_smul_embedding_def\"><span class=\"name\">DomMulAct</span>.<span class=\"name\">equivPerm_smul_embedding_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">m</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/DomAct/Basic.html#DomMulAct.mk\">mk</a> <span class=\"fn\">σ</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">σ</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L85-L89","name":"instMulActionDomMulActPermEmbedding_kMTT","line":85,"kind":"instance","docLink":"./KMTT/Theorem.html#instMulActionDomMulActPermEmbedding_kMTT","doc":"The diagonal action of permutations on injective maps `m ↪ n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#instMulActionDomMulActPermEmbedding_kMTT\"><span class=\"name\">instMulActionDomMulActPermEmbedding_kMTT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">m</span>)</span><a href=\"./Mathlib/GroupTheory/GroupAction/DomAct/Basic.html#DomMulAct\">ᵈᵐᵃ</a> (<span class=\"fn\">m</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">n</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L42-L77","name":"toprove_cauchybinet","line":42,"kind":"theorem","docLink":"./KMTT/Theorem.html#toprove_cauchybinet","doc":"Identity:\n\\[\na^m \\cdot \\det(aI + AB) = a^n \\cdot \\det(aI + BA)\n\\]\nThis is a determinant equality based on block matrix factorization and is used in proofs\nrelated to the matrix-tree theorem.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#toprove_cauchybinet\"><span class=\"name\">toprove_cauchybinet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span>)</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">B</span>).<a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant/Basic.html#Matrix.det\">det</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">A</span>).<a href=\"./Mathlib/LinearAlgebra/Matrix/Determinant/Basic.html#Matrix.det\">det</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L38-L40","name":"inv_rat","line":38,"kind":"instance","docLink":"./KMTT/Theorem.html#inv_rat","doc":"A nonzero rational number is invertible as an element of a field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#inv_rat\"><span class=\"name\">inv_rat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Invertible/Defs.html#Invertible\">Invertible</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/swarnava1207/KMTTLean/blob/73a9cc0d3d7dbc46a1db614d43fb93242a1bdd20/KMTT/Theorem.lean#L32-L36","name":"inv_scalar","line":32,"kind":"instance","docLink":"./KMTT/Theorem.html#inv_scalar","doc":"A scaled identity matrix `a • I` is invertible when `a ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./KMTT/Theorem.html#inv_scalar\"><span class=\"name\">inv_scalar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Invertible/Defs.html#Invertible\">Invertible</a> (<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">1</span>)</span></div></div>"}]}