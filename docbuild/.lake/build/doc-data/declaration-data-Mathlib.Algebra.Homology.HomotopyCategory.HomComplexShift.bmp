{"name":"Mathlib.Algebra.Homology.HomotopyCategory.HomComplexShift","instances":[],"imports":["Init","Mathlib.Algebra.Homology.HomotopyCategory.HomComplex","Mathlib.Algebra.Homology.HomotopyCategory.Shift"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L532-L532","name":"CochainComplex.HomComplex.Cocycle.shift_coe","line":532,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.shift_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.shift_coe\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">shift_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.shift\">shift</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L531-L536","name":"CochainComplex.HomComplex.Cocycle.shift","line":531,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.shift","doc":"The map `Cocycle K L n → Cocycle (K⟦a⟧) (L⟦a⟧) n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.shift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">shift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L524-L524","name":"CochainComplex.HomComplex.Cocycle.leftUnshift_coe","line":524,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftUnshift_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftUnshift_coe\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">leftUnshift_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L523-L529","name":"CochainComplex.HomComplex.Cocycle.leftUnshift","line":523,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftUnshift","doc":"The map `Cocycle (K⟦a⟧) L n' → Cocycle K L n` when `n + a = n'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">leftUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L516-L516","name":"CochainComplex.HomComplex.Cocycle.leftShift_coe","line":516,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftShift_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftShift_coe\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">leftShift_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L515-L521","name":"CochainComplex.HomComplex.Cocycle.leftShift","line":515,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftShift","doc":"The map `Cocycle K L n → Cocycle (K⟦a⟧) L n'` when `n + a = n'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.leftShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">leftShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L508-L508","name":"CochainComplex.HomComplex.Cocycle.rightUnshift_coe","line":508,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightUnshift_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightUnshift_coe\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">rightUnshift_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L507-L513","name":"CochainComplex.HomComplex.Cocycle.rightUnshift","line":507,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightUnshift","doc":"The map `Cocycle K (L⟦a⟧) n' → Cocycle K L n` when `n' + a = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">rightUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L500-L500","name":"CochainComplex.HomComplex.Cocycle.rightShift_coe","line":500,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightShift_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightShift_coe\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">rightShift_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L499-L505","name":"CochainComplex.HomComplex.Cocycle.rightShift","line":499,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightShift","doc":"The map `Cocycle K L n → Cocycle K (L⟦a⟧) n'` when `n' + a = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cocycle.rightShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cocycle</span>.<span class=\"name\">rightShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cocycle\">Cocycle</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L486-L493","name":"CochainComplex.HomComplex.Cochain.leftShift_rightShift_eq_negOnePow_rightShift_leftShift","line":486,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_rightShift_eq_negOnePow_rightShift_leftShift","doc":"The left and right shift of cochains commute only up to a sign. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_rightShift_eq_negOnePow_rightShift_leftShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_rightShift_eq_negOnePow_rightShift_leftShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n' </span><span class=\"fn\">n''</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn''</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n''</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n''</span> <span class=\"fn\">hn''</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n</span> <span class=\"fn\">hn''</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L477-L484","name":"CochainComplex.HomComplex.Cochain.rightShift_leftShift","line":477,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_leftShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_leftShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_leftShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>).<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L468-L475","name":"CochainComplex.HomComplex.Cochain.leftShift_rightShift","line":468,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_rightShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_rightShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_rightShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>).<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L454-L466","name":"CochainComplex.HomComplex.Cochain.δ_shift","line":454,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_shift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_shift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">δ_shift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L446-L452","name":"CochainComplex.HomComplex.Cochain.δ_leftUnshift","line":446,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_leftUnshift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_leftUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">δ_leftUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">m'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n'</span> <span class=\"fn\">m'</span> <span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">m</span> <span class=\"fn\">hm'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L423-L444","name":"CochainComplex.HomComplex.Cochain.δ_leftShift","line":423,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_leftShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_leftShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">δ_leftShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n' </span><span class=\"fn\">m'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n'</span> <span class=\"fn\">m'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">m'</span> <span class=\"fn\">hm'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L415-L421","name":"CochainComplex.HomComplex.Cochain.δ_rightUnshift","line":415,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_rightUnshift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_rightUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">δ_rightUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">m'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n'</span> <span class=\"fn\">m'</span> <span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">m</span> <span class=\"fn\">hm'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L394-L413","name":"CochainComplex.HomComplex.Cochain.δ_rightShift","line":394,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_rightShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.δ_rightShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">δ_rightShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n' </span><span class=\"fn\">m'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n'</span> <span class=\"fn\">m'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.δ\">δ</a> <span class=\"fn\">n</span> <span class=\"fn\">m</span> <span class=\"fn\">γ</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">m'</span> <span class=\"fn\">hm'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L388-L392","name":"CochainComplex.HomComplex.Cochain.leftShift_comp_zero_cochain","line":388,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_comp_zero_cochain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_comp_zero_cochain\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_comp_zero_cochain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L </span><span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">L</span> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.comp\">comp</a></span> <span class=\"fn\">γ'</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.comp\">comp</a></span> <span class=\"fn\">γ'</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L373-L386","name":"CochainComplex.HomComplex.Cochain.leftShift_comp","line":373,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_comp\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L </span><span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">t </span><span class=\"fn\">t'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">L</span> <span class=\"fn\">M</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht'</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.comp\">comp</a></span> <span class=\"fn\">γ'</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">t'</span> <span class=\"fn\">ht'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>).<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.comp\">comp</a></span> <span class=\"fn\">γ'</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L363-L371","name":"CochainComplex.HomComplex.Cochain.rightUnshift_comp","line":363,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_comp\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L </span><span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">L</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">nm</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">nm</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nm'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm'</span> : <span class=\"fn\">nm</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">nm'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.comp\">comp</a></span> <span class=\"fn\">γ'</span> <span class=\"fn\">hnm</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">nm'</span> <span class=\"fn\">hnm'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ'</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">m'</span> <span class=\"fn\">hm'</span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L357-L361","name":"CochainComplex.HomComplex.Cochain.leftUnshift_units_smul","line":357,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_units_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_units_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_units_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L351-L355","name":"CochainComplex.HomComplex.Cochain.leftUnshift_smul","line":351,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L345-L349","name":"CochainComplex.HomComplex.Cochain.rightUnshift_units_smul","line":345,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_units_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_units_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_units_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L339-L343","name":"CochainComplex.HomComplex.Cochain.rightUnshift_smul","line":339,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L332-L337","name":"CochainComplex.HomComplex.Cochain.shift_units_smul","line":332,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_units_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_units_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_units_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L327-L330","name":"CochainComplex.HomComplex.Cochain.leftShift_units_smul","line":327,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_units_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_units_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_units_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L322-L325","name":"CochainComplex.HomComplex.Cochain.rightShift_units_smul","line":322,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_units_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_units_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_units_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L314-L314","name":"CochainComplex.HomComplex.Cochain.shiftLinearMap_apply","line":314,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftLinearMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftLinearMap_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shiftLinearMap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftLinearMap\">shiftLinearMap</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L313-L318","name":"CochainComplex.HomComplex.Cochain.shiftLinearMap","line":313,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftLinearMap","doc":"The linear map `Cochain K L n ≃+ Cochain (K⟦a⟧) (L⟦a⟧) n` when the category is `R`-linear. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftLinearMap\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shiftLinearMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L307-L307","name":"CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv_symm_apply","line":307,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv_symm_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShiftLinearEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv\">leftShiftLinearEquiv</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L307-L307","name":"CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv_apply","line":307,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShiftLinearEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv\">leftShiftLinearEquiv</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L305-L311","name":"CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv","line":305,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv","doc":"The additive equivalence `Cochain K L n ≃+ Cochain (K⟦a⟧) L n'` when `n + a = n'` and\nthe category is `R`-linear. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftLinearEquiv\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShiftLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L299-L299","name":"CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv_apply","line":299,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShiftLinearEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv\">rightShiftLinearEquiv</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L299-L299","name":"CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv_symm_apply","line":299,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv_symm_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShiftLinearEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv\">rightShiftLinearEquiv</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L297-L303","name":"CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv","line":297,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv","doc":"The linear equivalence `Cochain K L n ≃+ Cochain K L⟦a⟧ n'` when `n' + a = n` and\nthe category is `R`-linear. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftLinearEquiv\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShiftLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L288-L293","name":"CochainComplex.HomComplex.Cochain.shift_smul","line":288,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L280-L286","name":"CochainComplex.HomComplex.Cochain.leftShift_smul","line":280,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L273-L278","name":"CochainComplex.HomComplex.Cochain.rightShift_smul","line":273,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_smul\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L267-L271","name":"CochainComplex.HomComplex.Cochain.leftUnshift_add","line":267,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_add\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ₁ </span><span class=\"fn\">γ₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">γ₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">γ₂</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₁</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₂</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L261-L265","name":"CochainComplex.HomComplex.Cochain.rightUnshift_add","line":261,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_add\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ₁ </span><span class=\"fn\">γ₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">γ₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">γ₂</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₁</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₂</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L255-L259","name":"CochainComplex.HomComplex.Cochain.shift_neg","line":255,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_neg\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L249-L253","name":"CochainComplex.HomComplex.Cochain.leftUnshift_neg","line":249,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_neg\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L243-L247","name":"CochainComplex.HomComplex.Cochain.leftShift_neg","line":243,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_neg\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L237-L241","name":"CochainComplex.HomComplex.Cochain.rightUnshift_neg","line":237,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_neg\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L231-L235","name":"CochainComplex.HomComplex.Cochain.rightShift_neg","line":231,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_neg\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">γ</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L223-L227","name":"CochainComplex.HomComplex.Cochain.shift_zero","line":223,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_zero\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L217-L221","name":"CochainComplex.HomComplex.Cochain.leftUnshift_zero","line":217,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_zero\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a> <span class=\"fn\">0</span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L211-L215","name":"CochainComplex.HomComplex.Cochain.leftShift_zero","line":211,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_zero\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L205-L209","name":"CochainComplex.HomComplex.Cochain.rightUnshift_zero","line":205,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_zero\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a> <span class=\"fn\">0</span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L199-L203","name":"CochainComplex.HomComplex.Cochain.rightShift_zero","line":199,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_zero\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L193-L193","name":"CochainComplex.HomComplex.Cochain.shiftAddHom_apply","line":193,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftAddHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftAddHom_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shiftAddHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftAddHom\">shiftAddHom</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L192-L195","name":"CochainComplex.HomComplex.Cochain.shiftAddHom","line":192,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftAddHom","doc":"The additive map `Cochain K L n →+ Cochain (K⟦a⟧) (L⟦a⟧) n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shiftAddHom\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shiftAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L183-L183","name":"CochainComplex.HomComplex.Cochain.leftShiftAddEquiv_apply","line":183,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShiftAddEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv\">leftShiftAddEquiv</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L183-L183","name":"CochainComplex.HomComplex.Cochain.leftShiftAddEquiv_symm_apply","line":183,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv_symm_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShiftAddEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv\">leftShiftAddEquiv</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L182-L190","name":"CochainComplex.HomComplex.Cochain.leftShiftAddEquiv","line":182,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv","doc":"The additive equivalence `Cochain K L n ≃+ Cochain (K⟦a⟧) L n'` when `n + a = n'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShiftAddEquiv\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShiftAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L173-L173","name":"CochainComplex.HomComplex.Cochain.rightShiftAddEquiv_symm_apply","line":173,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv_symm_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShiftAddEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv\">rightShiftAddEquiv</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L173-L173","name":"CochainComplex.HomComplex.Cochain.rightShiftAddEquiv_apply","line":173,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv_apply\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShiftAddEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv\">rightShiftAddEquiv</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L172-L180","name":"CochainComplex.HomComplex.Cochain.rightShiftAddEquiv","line":172,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv","doc":"The additive equivalence `Cochain K L n ≃+ Cochain K L⟦a⟧ n'` when `n' + a = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShiftAddEquiv\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShiftAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L163-L168","name":"CochainComplex.HomComplex.Cochain.shift_add","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_add\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ₁ </span><span class=\"fn\">γ₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">γ₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">γ₂</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₁</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₂</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L156-L161","name":"CochainComplex.HomComplex.Cochain.leftShift_add","line":156,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_add\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ₁ </span><span class=\"fn\">γ₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">γ₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">γ₂</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₁</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₂</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L149-L154","name":"CochainComplex.HomComplex.Cochain.rightShift_add","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_add\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ₁ </span><span class=\"fn\">γ₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">γ₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">γ₂</span>).<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₁</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ₂</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L141-L147","name":"CochainComplex.HomComplex.Cochain.leftShift_leftUnshift","line":141,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_leftUnshift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_leftUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_leftUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L133-L139","name":"CochainComplex.HomComplex.Cochain.leftUnshift_leftShift","line":133,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_leftShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_leftShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_leftShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L125-L131","name":"CochainComplex.HomComplex.Cochain.rightShift_rightUnshift","line":125,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_rightUnshift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_rightUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_rightUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L117-L123","name":"CochainComplex.HomComplex.Cochain.rightUnshift_rightShift","line":117,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_rightShift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_rightShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_rightShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L112-L115","name":"CochainComplex.HomComplex.Cochain.shift_v'","line":112,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_v'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_v'\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_v'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span>) (<span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span>) <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L104-L110","name":"CochainComplex.HomComplex.Cochain.shift_v","line":104,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift_v\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p' </span><span class=\"fn\">q'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp'</span> : <span class=\"fn\">p'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq'</span> : <span class=\"fn\">q'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\">shift</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">a</span> <span class=\"fn\">p</span> <span class=\"fn\">p'</span> <span class=\"fn\">hp'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p'</span> <span class=\"fn\">q'</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">a</span> <span class=\"fn\">q</span> <span class=\"fn\">q'</span> <span class=\"fn\">hq'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L99-L102","name":"CochainComplex.HomComplex.Cochain.shift","line":99,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift","doc":"The map `Cochain K L n → Cochain (K⟦a⟧) (L⟦a⟧) n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.shift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">shift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L92-L97","name":"CochainComplex.HomComplex.Cochain.leftUnshift_v","line":92,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift_v\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp'</span> : <span class=\"fn\">p'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\">leftUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>).<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">a</span> <span class=\"fn\">p'</span> <span class=\"fn\">p</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p'</span> <span class=\"fn\">q</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L86-L90","name":"CochainComplex.HomComplex.Cochain.leftUnshift","line":86,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift","doc":"The map `Cochain (K⟦a⟧) L n' → Cochain K L n` when `n + a = n'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L78-L84","name":"CochainComplex.HomComplex.Cochain.rightUnshift_v","line":78,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift_v\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp'</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\">rightUnshift</a></span> <span class=\"fn\">n</span> <span class=\"fn\">hn</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">p'</span> <span class=\"fn\">hp'</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">a</span> <span class=\"fn\">p'</span> <span class=\"fn\">q</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L72-L76","name":"CochainComplex.HomComplex.Cochain.rightUnshift","line":72,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift","doc":"The map `Cochain K (L⟦a⟧) n' → Cochain K L n` when `n' + a = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightUnshift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightUnshift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L63-L70","name":"CochainComplex.HomComplex.Cochain.leftShift_v","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift_v\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp'</span> : <span class=\"fn\">p'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\">leftShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>).<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">a</span> <span class=\"fn\">p</span> <span class=\"fn\">p'</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p'</span> <span class=\"fn\">q</span> <span class=\"fn\">hp'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L58-L61","name":"CochainComplex.HomComplex.Cochain.leftShift","line":58,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift","doc":"The map `Cochain K L n → Cochain (K⟦a⟧) L n'` when `n + a = n'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.leftShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">leftShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">L</span> <span class=\"fn\">n'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L50-L56","name":"CochainComplex.HomComplex.Cochain.rightShift_v","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift_v\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpq</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp'</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\">rightShift</a></span> <span class=\"fn\">a</span> <span class=\"fn\">n'</span> <span class=\"fn\">hn'</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">q</span> <span class=\"fn\">hpq</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain.v\">v</a></span> <span class=\"fn\">p</span> <span class=\"fn\">p'</span> <span class=\"fn\">hp'</span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">a</span> <span class=\"fn\">q</span> <span class=\"fn\">p'</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.lean#L45-L48","name":"CochainComplex.HomComplex.Cochain.rightShift","line":45,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift","doc":"The map `Cochain K L n → Cochain K (L⟦a⟧) n'` when `n' + a = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplexShift.html#CochainComplex.HomComplex.Cochain.rightShift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">HomComplex</span>.<span class=\"name\">Cochain</span>.<span class=\"name\">rightShift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomComplex.html#CochainComplex.HomComplex.Cochain\">Cochain</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">n'</span></span></div></div>"}]}