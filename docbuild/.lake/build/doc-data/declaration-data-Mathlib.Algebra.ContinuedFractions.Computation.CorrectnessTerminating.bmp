{"name":"Mathlib.Algebra.ContinuedFractions.Computation.CorrectnessTerminating","instances":[],"imports":["Init","Mathlib.Algebra.ContinuedFractions.Computation.Translations","Mathlib.Algebra.ContinuedFractions.TerminatedStable","Mathlib.Algebra.ContinuedFractions.ContinuantsRecurrence","Mathlib.Order.Filter.AtTopBot.Basic","Mathlib.Tactic.FieldSimp","Mathlib.Tactic.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L247-L255","name":"GenContFract.of_correctness_atTop_of_terminates","line":247,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_atTop_of_terminates","doc":"If `GenContFract.of v` terminates, then its convergents will eventually always be `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_atTop_of_terminates\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_correctness_atTop_of_terminates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminates</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Terminates\">Terminates</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L237-L243","name":"GenContFract.of_correctness_of_terminates","line":237,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_of_terminates","doc":"If `GenContFract.of v` terminates, then there is `n : ℕ` such that the `n`th convergent is\nexactly `v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_of_terminates\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_correctness_of_terminates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminates</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Terminates\">Terminates</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L230-L235","name":"GenContFract.of_correctness_of_terminatedAt","line":230,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_of_terminatedAt","doc":"If `GenContFract.of v` terminated at step `n`, then the `n`th convergent is exactly `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_of_terminatedAt\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_correctness_of_terminatedAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">terminatedAt_n</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.TerminatedAt\">TerminatedAt</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L203-L228","name":"GenContFract.of_correctness_of_nth_stream_eq_none","line":203,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_of_nth_stream_eq_none","doc":"The convergent of `GenContFract.of v` at step `n - 1` is exactly `v` if the\n`IntFractPair.stream` of the corresponding continued fraction terminated at step `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.of_correctness_of_nth_stream_eq_none\"><span class=\"name\">GenContFract</span>.<span class=\"name\">of_correctness_of_nth_stream_eq_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nth_stream_eq_none</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.convs\">convs</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L81-L199","name":"GenContFract.compExactValue_correctness_of_stream_eq_some","line":81,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue_correctness_of_stream_eq_some","doc":"Shows the correctness of `compExactValue` in case the continued fraction\n`GenContFract.of v` did not terminate at position `n`. That is, we obtain the\nvalue `v` if we pass the two successive (auxiliary) continuants at positions `n` and `n + 1` as well\nas the fractional part at `IntFractPair.stream n` to `compExactValue`.\n\nThe correctness might be seen more readily if one uses `convs'` to evaluate the continued\nfraction. Here is an example to illustrate the idea:\n\nLet `(v : ℚ) := 3.4`. We have\n- `GenContFract.IntFractPair.stream v 0 = some ⟨3, 0.4⟩`, and\n- `GenContFract.IntFractPair.stream v 1 = some ⟨2, 0.5⟩`.\nNow `(GenContFract.of v).convs' 1 = 3 + 1/2`, and our fractional term at position `2` is `0.5`.\nWe hence have `v = 3 + 1/(2 + 0.5) = 3 + 1/2.5 = 3.4`.\nThis computation corresponds exactly to the one using the recurrence equation in `compExactValue`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue_correctness_of_stream_eq_some\"><span class=\"name\">GenContFract</span>.<span class=\"name\">compExactValue_correctness_of_stream_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ifp_n</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair\">IntFractPair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.stream\">IntFractPair.stream</a> <span class=\"fn\">v</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">ifp_n</span></span> →\n  <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue\">GenContFract.compExactValue</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.of\">GenContFract.of</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.contsAux\">contsAux</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> <span class=\"fn\"><span class=\"fn\">ifp_n</span>.<a href=\"./Mathlib/Algebra/ContinuedFractions/Computation/Basic.html#GenContFract.IntFractPair.fr\">fr</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L70-L76","name":"GenContFract.compExactValue_correctness_of_stream_eq_some_aux_comp","line":70,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue_correctness_of_stream_eq_some_aux_comp","doc":"Just a computational lemma we need for the next main proof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue_correctness_of_stream_eq_some_aux_comp\"><span class=\"name\">GenContFract</span>.<span class=\"name\">compExactValue_correctness_of_stream_eq_some_aux_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#FloorRing\">FloorRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">K</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fract_a_ne_zero</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.lean#L52-L66","name":"GenContFract.compExactValue","line":52,"kind":"def","docLink":"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue","doc":"Given two continuants `pconts` and `conts` and a value `fr`, this function returns\n- `conts.a / conts.b` if `fr = 0`\n- `exactConts.a / exactConts.b` where `exactConts = nextConts 1 fr⁻¹ pconts conts`\n  otherwise.\n\nThis function can be used to compute the exact value approximated by a continued fraction\n`GenContFract.of v` as described in lemma `compExactValue_correctness_of_stream_eq_some`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/Computation/CorrectnessTerminating.html#GenContFract.compExactValue\"><span class=\"name\">GenContFract</span>.<span class=\"name\">compExactValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pconts </span><span class=\"fn\">conts</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GenContFract.Pair\">Pair</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fr</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span></div></div>"}]}