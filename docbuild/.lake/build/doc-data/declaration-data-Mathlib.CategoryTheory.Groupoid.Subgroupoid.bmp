{"name":"Mathlib.CategoryTheory.Groupoid.Subgroupoid","instances":[{"typeNames":["Set.Elem"],"name":"CategoryTheory.Subgroupoid.coe","className":"CategoryTheory.Groupoid"},{"typeNames":["CategoryTheory.Subgroupoid","Sigma"],"name":"CategoryTheory.Subgroupoid.instSetLikeSigmaHom","className":"SetLike"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instTop","className":"Top"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instBot","className":"Bot"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instMin","className":"Min"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instInfSet","className":"InfSet"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instCompleteLattice","className":"CompleteLattice"}],"imports":["Init","Mathlib.Algebra.Group.Subgroup.Defs","Mathlib.CategoryTheory.Groupoid.VertexGroup","Mathlib.CategoryTheory.Groupoid.Basic","Mathlib.CategoryTheory.Groupoid","Mathlib.Data.Set.Lattice"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L608-L610","name":"CategoryTheory.Subgroupoid.full_arrow_eq_iff","line":608,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_arrow_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_arrow_eq_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_arrow_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L601-L605","name":"CategoryTheory.Subgroupoid.full_mono","line":601,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D </span><span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L596-L599","name":"CategoryTheory.Subgroupoid.full_univ","line":596,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_univ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L591-L594","name":"CategoryTheory.Subgroupoid.full_empty","line":591,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_empty\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L588-L589","name":"CategoryTheory.Subgroupoid.mem_full_objs_iff","line":588,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_full_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L584-L586","name":"CategoryTheory.Subgroupoid.mem_full_iff","line":584,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_full_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L581-L582","name":"CategoryTheory.Subgroupoid.full_objs","line":581,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">full</a> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L575-L579","name":"CategoryTheory.Subgroupoid.full","line":575,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full","doc":"The full subgroupoid on a set `D : Set C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L566-L567","name":"CategoryTheory.Subgroupoid.disconnect_isTotallyDisconnected","line":566,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_isTotallyDisconnected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_isTotallyDisconnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_isTotallyDisconnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">disconnect</a></span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected\">IsTotallyDisconnected</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L564-L564","name":"CategoryTheory.Subgroupoid.disconnect_objs","line":564,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">disconnect</a></span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L560-L562","name":"CategoryTheory.Subgroupoid.mem_disconnect_objs_iff","line":560,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_disconnect_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_disconnect_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_disconnect_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">disconnect</a></span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L556-L558","name":"CategoryTheory.Subgroupoid.disconnect_normal","line":556,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_normal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">disconnect</a></span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L554-L554","name":"CategoryTheory.Subgroupoid.disconnect_le","line":554,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">disconnect</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L548-L552","name":"CategoryTheory.Subgroupoid.disconnect","line":548,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect","doc":"The isotropy subgroupoid of `S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L539-L546","name":"CategoryTheory.Subgroupoid.isTotallyDisconnected_iff","line":539,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isTotallyDisconnected_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isTotallyDisconnected_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isTotallyDisconnected_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected\">IsTotallyDisconnected</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span> → <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L535-L537","name":"CategoryTheory.Subgroupoid.IsTotallyDisconnected","line":535,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected","doc":"A subgroupoid `IsTotallyDisconnected` if it has only isotropy arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsTotallyDisconnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L529-L529","name":"CategoryTheory.Subgroupoid.isThin_iff","line":529,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isThin_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isThin_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isThin_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsThin\">IsThin</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>), <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">↑<span class=\"fn\">c</span></span> <span class=\"fn\">↑<span class=\"fn\">c</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L524-L527","name":"CategoryTheory.Subgroupoid.IsThin","line":524,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsThin","doc":"A subgroupoid is thin (`CategoryTheory.Subgroupoid.IsThin`) if it has at most one arrow between\nany two vertices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsThin\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsThin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L499-L518","name":"CategoryTheory.Subgroupoid.isNormal_map","line":499,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isNormal_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L493-L497","name":"CategoryTheory.Subgroupoid.obj_surjective_of_im_eq_top","line":493,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.obj_surjective_of_im_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.obj_surjective_of_im_eq_top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">obj_surjective_of_im_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L489-L491","name":"CategoryTheory.Subgroupoid.mem_im_objs_iff","line":489,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_im_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">c</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L483-L487","name":"CategoryTheory.Subgroupoid.mem_im_iff","line":483,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_im_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>) (<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span>) (<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span>),\n    <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">hb</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L479-L481","name":"CategoryTheory.Subgroupoid.im","line":479,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im","doc":"The image of a functor injective on objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L475-L477","name":"CategoryTheory.Subgroupoid.map_objs_eq","line":475,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_objs_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_objs_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_objs_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L464-L473","name":"CategoryTheory.Subgroupoid.mem_map_objs_iff","line":464,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_map_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">c</span> ∈ <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L460-L462","name":"CategoryTheory.Subgroupoid.map_le_iff_le_comap","line":460,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_le_iff_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_le_iff_le_comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_le_iff_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L456-L458","name":"CategoryTheory.Subgroupoid.map_comap_le","line":456,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_comap_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">T</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L452-L454","name":"CategoryTheory.Subgroupoid.le_comap_map","line":452,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_comap_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_comap_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">le_comap_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L449-L450","name":"CategoryTheory.Subgroupoid.map_mono","line":449,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L442-L447","name":"CategoryTheory.Subgroupoid.galoisConnection_map_comap","line":442,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.galoisConnection_map_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.galoisConnection_map_comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">galoisConnection_map_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection/Defs.html#GaloisConnection\">GaloisConnection</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L436-L440","name":"CategoryTheory.Subgroupoid.mem_map_iff","line":436,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>) (<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span>) (<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span>) (_ : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>),\n    <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">hb</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L423-L434","name":"CategoryTheory.Subgroupoid.map","line":423,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map","doc":"The \"forward\" image of a subgroupoid under a functor injective on objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L415-L421","name":"CategoryTheory.Subgroupoid.Map.arrows_iff","line":415,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.arrows_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.arrows_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Map</span>.<span class=\"name\">arrows_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows\">Arrows</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">b</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">g</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>) (<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span>) (<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span>) (_ : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>),\n    <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">hb</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L413-L413","name":"CategoryTheory.Subgroupoid.Map.Arrows.im","line":413,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows.im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows.im\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Map</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows\">Arrows</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L411-L413","name":"CategoryTheory.Subgroupoid.Map.Arrows","line":411,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows","doc":"The family of arrows of the image of a subgroupoid under a functor injective on objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Map</span>.<span class=\"name\">Arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>) → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L407-L409","name":"CategoryTheory.Subgroupoid.ker_comp","line":407,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ker_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">ker</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">ψ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">ker</a> <span class=\"fn\">ψ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L404-L405","name":"CategoryTheory.Subgroupoid.ker_isNormal","line":404,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ker_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">ker</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L400-L402","name":"CategoryTheory.Subgroupoid.mem_ker_iff","line":400,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_ker_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_ker_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_ker_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">ker</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">d</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L396-L398","name":"CategoryTheory.Subgroupoid.ker","line":396,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker","doc":"The kernel of a functor between subgroupoid is the preimage. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L392-L394","name":"CategoryTheory.Subgroupoid.comap_comp","line":392,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">comap_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">ψ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">ψ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L386-L390","name":"CategoryTheory.Subgroupoid.isNormal_comap","line":386,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isNormal_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L383-L384","name":"CategoryTheory.Subgroupoid.comap_mono","line":383,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">comap_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L372-L381","name":"CategoryTheory.Subgroupoid.comap","line":372,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap","doc":"A functor between groupoid defines a map of subgroupoids in the reverse direction\nby taking preimages.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L355-L364","name":"CategoryTheory.Subgroupoid.IsNormal.generatedNormal_le","line":355,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.generatedNormal_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.generatedNormal_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">generatedNormal_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\">generatedNormal</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L352-L353","name":"CategoryTheory.Subgroupoid.generatedNormal_isNormal","line":352,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generatedNormal_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\">generatedNormal</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L348-L350","name":"CategoryTheory.Subgroupoid.generated_le_generatedNormal","line":348,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated_le_generatedNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated_le_generatedNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generated_le_generatedNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated\">generated</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\">generatedNormal</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L344-L346","name":"CategoryTheory.Subgroupoid.generatedNormal","line":344,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal","doc":"The normal sugroupoid generated by the set of arrows `X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generatedNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L339-L342","name":"CategoryTheory.Subgroupoid.subset_generated","line":339,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.subset_generated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.subset_generated\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">subset_generated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated\">generated</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L335-L337","name":"CategoryTheory.Subgroupoid.generated","line":335,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated","doc":"The subgropoid generated by the set of arrows `X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L326-L328","name":"CategoryTheory.Subgroupoid.IsNormal.vertexSubgroup","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.vertexSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.vertexSubgroup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">vertexSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cS</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.vertexSubgroup\">vertexSubgroup</a></span> <span class=\"fn\">cS</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L320-L324","name":"CategoryTheory.Subgroupoid.discrete_isNormal","line":320,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">discrete_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete\">discrete</a>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L316-L318","name":"CategoryTheory.Subgroupoid.sInf_isNormal","line":316,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.sInf_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.sInf_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">sInf_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sn</span> : <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L312-L314","name":"CategoryTheory.Subgroupoid.top_isNormal","line":312,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.top_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.top_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">top_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L303-L310","name":"CategoryTheory.Subgroupoid.IsNormal.conjugation_bij","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conjugation_bij","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conjugation_bij\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">conjugation_bij</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.BijOn\">Set.BijOn</a> <span class=\"fn\">(fun (<span class=\"fn\">γ</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">p</span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L299-L301","name":"CategoryTheory.Subgroupoid.IsNormal.conj'","line":299,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">conj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sn</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L297-L297","name":"CategoryTheory.Subgroupoid.IsNormal.conj","line":297,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L296-L296","name":"CategoryTheory.Subgroupoid.IsNormal.mk","line":296,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toIsWide</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">conj</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>) {<span class=\"fn\">γ</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>},\n    <span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L296-L297","name":"CategoryTheory.Subgroupoid.IsNormal.toIsWide","line":296,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.toIsWide","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.toIsWide\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">toIsWide</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">IsNormal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L295-L297","name":"CategoryTheory.Subgroupoid.IsNormal","line":295,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal","doc":"A subgroupoid is normal if it is wide and satisfies the expected stability under conjugacy. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L292-L293","name":"CategoryTheory.Subgroupoid.IsWide.eqToHom_mem","line":292,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.eqToHom_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.eqToHom_mem\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">eqToHom_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sw</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L289-L290","name":"CategoryTheory.Subgroupoid.IsWide.id_mem","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.id_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.id_mem\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">id_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Sw</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L279-L287","name":"CategoryTheory.Subgroupoid.isWide_iff_objs_eq_univ","line":279,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isWide_iff_objs_eq_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isWide_iff_objs_eq_univ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isWide_iff_objs_eq_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L277-L277","name":"CategoryTheory.Subgroupoid.IsWide.wide","line":277,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.wide","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.wide\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">wide</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L276-L276","name":"CategoryTheory.Subgroupoid.IsWide.mk","line":276,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wide</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">IsWide</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L275-L277","name":"CategoryTheory.Subgroupoid.IsWide","line":275,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide","doc":"A subgroupoid is wide if its carrier set is all of `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L271-L273","name":"CategoryTheory.Subgroupoid.mem_discrete_iff","line":271,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_discrete_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_discrete_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_discrete_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete\">discrete</a>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L265-L269","name":"CategoryTheory.Subgroupoid.discrete","line":265,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete","doc":"The only arrows of the discrete groupoid are the identity arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">discrete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L263-L263","name":"CategoryTheory.Subgroupoid.Discrete.Arrows.id","line":263,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Discrete</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows\">Arrows</a> <span class=\"fn\">c</span> <span class=\"fn\">c</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L261-L263","name":"CategoryTheory.Subgroupoid.Discrete.Arrows","line":261,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows","doc":"The family of arrows of the discrete groupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Discrete</span>.<span class=\"name\">Arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>) → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L258-L259","name":"CategoryTheory.Subgroupoid.inclusion_comp_embedding","line":258,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_comp_embedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_comp_embedding\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_comp_embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L254-L256","name":"CategoryTheory.Subgroupoid.inclusion_trans","line":254,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_trans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L251-L252","name":"CategoryTheory.Subgroupoid.inclusion_refl","line":251,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_refl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L246-L249","name":"CategoryTheory.Subgroupoid.inclusion_faithful","line":246,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_faithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_faithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\">s</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">t</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L242-L244","name":"CategoryTheory.Subgroupoid.inclusion_inj_on_objects","line":242,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_inj_on_objects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_inj_on_objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_inj_on_objects</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">inclusion</a> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L235-L240","name":"CategoryTheory.Subgroupoid.inclusion","line":235,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion","doc":"The functor associated to the embedding of subgroupoids "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L232-L233","name":"CategoryTheory.Subgroupoid.le_objs","line":232,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">le_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L219-L230","name":"CategoryTheory.Subgroupoid.instCompleteLattice","line":219,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instCompleteLattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instCompleteLattice\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instCompleteLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L215-L217","name":"CategoryTheory.Subgroupoid.mem_sInf","line":215,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">C</span>) × (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L211-L213","name":"CategoryTheory.Subgroupoid.mem_sInf_arrows","line":211,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf_arrows","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf_arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_sInf_arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L203-L209","name":"CategoryTheory.Subgroupoid.instInfSet","line":203,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInfSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInfSet\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instInfSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet\">InfSet</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L197-L201","name":"CategoryTheory.Subgroupoid.instMin","line":197,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instMin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instMin\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instMin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L194-L195","name":"CategoryTheory.Subgroupoid.instInhabited","line":194,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInhabited\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L189-L192","name":"CategoryTheory.Subgroupoid.instBot","line":189,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instBot\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L185-L187","name":"CategoryTheory.Subgroupoid.mem_top_objs","line":185,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_top_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L182-L183","name":"CategoryTheory.Subgroupoid.mem_top","line":182,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L177-L180","name":"CategoryTheory.Subgroupoid.instTop","line":177,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instTop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L174-L175","name":"CategoryTheory.Subgroupoid.le_iff","line":174,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L171-L172","name":"CategoryTheory.Subgroupoid.mem_iff","line":171,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">C</span>) × (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L167-L169","name":"CategoryTheory.Subgroupoid.instSetLikeSigmaHom","line":167,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instSetLikeSigmaHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instSetLikeSigmaHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instSetLikeSigmaHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">((<span class=\"fn\">c</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">C</span>) × (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L163-L165","name":"CategoryTheory.Subgroupoid.toSet","line":163,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.toSet","doc":"The set of all arrows of a subgroupoid, as a set in `Σ c d : C, c ⟶ d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.toSet\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">((<span class=\"fn\">c</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">C</span>) × (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L156-L161","name":"CategoryTheory.Subgroupoid.vertexSubgroup","line":156,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.vertexSubgroup","doc":"The subgroup of the vertex group at `c` given by the subgroupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.vertexSubgroup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">vertexSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L153-L154","name":"CategoryTheory.Subgroupoid.hom.faithful","line":153,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.faithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">hom</span>.<span class=\"name\">faithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">hom</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L149-L151","name":"CategoryTheory.Subgroupoid.hom.inj_on_objects","line":149,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.inj_on_objects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.inj_on_objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">hom</span>.<span class=\"name\">inj_on_objects</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">hom</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L142-L147","name":"CategoryTheory.Subgroupoid.hom","line":142,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom","doc":"The embedding of the coerced subgroupoid to its parent "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L137-L140","name":"CategoryTheory.Subgroupoid.coe_inv_coe'","line":137,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe_inv_coe'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">inv</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">inv</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L130-L130","name":"CategoryTheory.Subgroupoid.coe_inv_coe","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe_inv_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">↑<span class=\"fn\">X✝</span></span> <span class=\"fn\">↑<span class=\"fn\">Y✝</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L130-L130","name":"CategoryTheory.Subgroupoid.coe_comp_coe","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_comp_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_comp_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe_comp_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝ </span><span class=\"fn\">Z✝</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">↑<span class=\"fn\">X✝</span></span> <span class=\"fn\">↑<span class=\"fn\">Y✝</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">↑<span class=\"fn\">Y✝</span></span> <span class=\"fn\">↑<span class=\"fn\">Z✝</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L129-L135","name":"CategoryTheory.Subgroupoid.coe","line":129,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe","doc":"The coercion of a subgroupoid as a groupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L125-L127","name":"CategoryTheory.Subgroupoid.asWideQuiver","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.asWideQuiver","doc":"A subgroupoid seen as a quiver on vertex set `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.asWideQuiver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">asWideQuiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L122-L123","name":"CategoryTheory.Subgroupoid.id_mem_of_tgt","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_tgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_tgt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">id_mem_of_tgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L119-L120","name":"CategoryTheory.Subgroupoid.id_mem_of_src","line":119,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_src","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_src\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">id_mem_of_src</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L114-L117","name":"CategoryTheory.Subgroupoid.id_mem_of_nonempty_isotropy","line":114,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_nonempty_isotropy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_nonempty_isotropy\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">id_mem_of_nonempty_isotropy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L111-L112","name":"CategoryTheory.Subgroupoid.mem_objs_of_tgt","line":111,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_tgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_tgt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_objs_of_tgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L108-L109","name":"CategoryTheory.Subgroupoid.mem_objs_of_src","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_src","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_src\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_objs_of_src</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">objs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L104-L106","name":"CategoryTheory.Subgroupoid.objs","line":104,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs","doc":"The vertices of `C` on which `S` has non-trivial isotropy "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L95-L102","name":"CategoryTheory.Subgroupoid.mul_mem_cancel_right","line":95,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mul_mem_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">e</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L86-L93","name":"CategoryTheory.Subgroupoid.mul_mem_cancel_left","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mul_mem_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">e</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L79-L84","name":"CategoryTheory.Subgroupoid.inv_mem_iff","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv_mem_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inv_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L73-L73","name":"CategoryTheory.Subgroupoid.mul","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">e</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">q</span> : <span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span>}, <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L72-L72","name":"CategoryTheory.Subgroupoid.inv","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <span class=\"fn\">d</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L71-L71","name":"CategoryTheory.Subgroupoid.arrows","line":71,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows","doc":"The arrow choice for each pair of vertices "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L69-L69","name":"CategoryTheory.Subgroupoid.mk","line":69,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arrows</span> : <span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv</span> : <span class=\"fn\">∀ {<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">C</span>} {<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}, <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">Groupoid.inv</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">d</span> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul</span> : <span class=\"fn\">∀ {<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">e</span> : <span class=\"fn\">C</span>} {<span class=\"fn\">p</span> : <span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span>}, <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">q</span> : <span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span>}, <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L68-L68","name":"CategoryTheory.Subgroupoid.ext","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arrows</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L68-L68","name":"CategoryTheory.Subgroupoid.ext_iff","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">arrows</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L65-L73","name":"CategoryTheory.Subgroupoid","line":65,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid","doc":"A sugroupoid of `C` consists of a choice of arrows for each pair of vertices, closed\nunder composition and inverses.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u u_1)</div></div>"}]}