{"name":"Mathlib.CategoryTheory.Localization.LocallySmall","instances":[],"imports":["Init","Mathlib.CategoryTheory.Localization.HasLocalization","Mathlib.CategoryTheory.EssentiallySmall"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/LocallySmall.lean#L62-L69","name":"CategoryTheory.MorphismProperty.locallySmall_of_hasLocalization","line":62,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.locallySmall_of_hasLocalization","doc":"If a class of morphisms `W : MorphismProperty C` satisfies `HasLocalization.{w} W`,\nthen any localized category for `W` (i.e. any target of a localization functor\n`L : C ⥤ D` for `W`) is locally `w`-small. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.locallySmall_of_hasLocalization\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">locallySmall_of_hasLocalization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/CategoryTheory/Localization/Predicate.html#CategoryTheory.Functor.IsLocalization\">IsLocalization</a></span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/CategoryTheory/Localization/HasLocalization.html#CategoryTheory.MorphismProperty.HasLocalization\">HasLocalization</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v₂, u₂}</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/LocallySmall.lean#L38-L60","name":"CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'_def","line":38,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'_def\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">hasLocalizationOfLocallySmall'_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_3}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{u_5, u_4, u_3}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/CategoryTheory/Localization/Predicate.html#CategoryTheory.Functor.IsLocalization\">IsLocalization</a></span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'\">hasLocalizationOfLocallySmall'</a></span> <span class=\"fn\">L</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let_fun <span class=\"fn\">this</span> := <span class=\"fn\">⋯</span>;\n  <span class=\"fn\">let <span class=\"fn\">L'</span> := <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>) =&gt; <span class=\"fn\">X</span></span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span></span>, <span class=\"fn\">map_id</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_comp</span> := <span class=\"fn\">⋯</span> }</span>;\n  <span class=\"fn\">let_fun <span class=\"fn\">this_1</span> := <span class=\"fn\">⋯</span>;\n  <span class=\"fn\">let_fun <span class=\"fn\">this_2</span> := <span class=\"fn\">⋯</span>;\n  <span class=\"fn\">let_fun <span class=\"fn\">this_3</span> := <span class=\"fn\">⋯</span>;\n  <span class=\"fn\">let <span class=\"fn\">e</span> := <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.inducedFunctor\">inducedFunctor</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Functor.asEquivalence\">asEquivalence</a></span>;\n  <span class=\"fn\">let <span class=\"fn\">e'</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.Functor.associator\">associator</a></span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.isoWhiskerLeft\">isoWhiskerLeft</a> <span class=\"fn\">L'</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.symm\">symm</a></span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\"><span class=\"fn\">L'</span>.<a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.Functor.rightUnitor\">rightUnitor</a></span>;\n  <span class=\"fn\">let_fun <span class=\"fn\">this_4</span> := <span class=\"fn\">⋯</span>;\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall\">hasLocalizationOfLocallySmall</a></span> <span class=\"fn\">L'</span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/LocallySmall.lean#L38-L60","name":"CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'","line":38,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'","doc":"If `L : C ⥤ D` is a localization functor for a class of morphisms\n`W : MorphismProperty C`, and `D` is locally `w`-small, we may obtain\na `HasLocalization.{w} W` instance. This should be used only in the\nunlikely situation where the types of objects of `C` and `D` are in\ndifferent universes. Otherwise, use `hasLocalizationOfLocallySmall`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">hasLocalizationOfLocallySmall'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_3}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{u_5, u_4, u_3}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/CategoryTheory/Localization/Predicate.html#CategoryTheory.Functor.IsLocalization\">IsLocalization</a></span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/CategoryTheory/Localization/HasLocalization.html#CategoryTheory.MorphismProperty.HasLocalization\">HasLocalization</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Localization/LocallySmall.lean#L26-L36","name":"CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall","line":26,"kind":"def","docLink":"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall","doc":"If `L : C ⥤ D` is a localization functor for a class of morphisms\n`W : MorphismProperty C`, and `D` is locally `w`-small, we may obtain\na `HasLocalization.{w} W` instance by shrinking the morphisms in `D`.\n(This version assumes that the types of objects of the categories\n`C` and `D` are in the same universe.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Localization/LocallySmall.html#CategoryTheory.MorphismProperty.hasLocalizationOfLocallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">hasLocalizationOfLocallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₁}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v₂, u₁}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/CategoryTheory/Localization/Predicate.html#CategoryTheory.Functor.IsLocalization\">IsLocalization</a></span> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/CategoryTheory/Localization/HasLocalization.html#CategoryTheory.MorphismProperty.HasLocalization\">HasLocalization</a></span></div></div>"}]}