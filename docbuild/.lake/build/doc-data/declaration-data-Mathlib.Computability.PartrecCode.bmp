{"name":"Mathlib.Computability.PartrecCode","instances":[{"typeNames":["Nat.Partrec.Code"],"name":"Nat.Partrec.Code.instInhabited","className":"Inhabited"},{"typeNames":["Nat.Partrec.Code"],"name":"Nat.Partrec.Code.instDenumerable","className":"Denumerable"},{"typeNames":["PFun","Nat.Partrec.Code"],"name":"Nat.Partrec.Code.instMembershipPFun","className":"Membership"},{"typeNames":["Subtype"],"name":"Nat.Partrec.Code.instCountableSubtypePFunPartrec","className":"Countable"},{"typeNames":["Subtype"],"name":"Nat.Partrec.Code.instCountableSubtypeForallComputable","className":"Countable"}],"imports":["Init","Mathlib.Computability.Partrec","Mathlib.Data.Option.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L1015-L1019","name":"Nat.Partrec.Code.instCountableSubtypeForallComputable","line":1015,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instCountableSubtypeForallComputable","doc":"There are only countably many computable functions `ℕ → ℕ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instCountableSubtypeForallComputable\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instCountableSubtypeForallComputable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L1010-L1013","name":"Nat.Partrec.Code.instCountableSubtypePFunPartrec","line":1010,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instCountableSubtypePFunPartrec","doc":"There are only countably many partial recursive partial functions `ℕ →. ℕ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instCountableSubtypePFunPartrec\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instCountableSubtypePFunPartrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Partrec\">_root_.Partrec</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L1002-L1006","name":"Nat.Partrec.Code.fixed_point₂","line":1002,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point₂","doc":"**Kleene's second recursion theorem** "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point₂\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">fixed_point₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Partrec₂\">Partrec₂</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>), <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L981-L1000","name":"Nat.Partrec.Code.fixed_point","line":981,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point","doc":"**Roger's fixed-point theorem**: any total, computable `f` has a fixed point.\nThat is, under the interpretation given by `Nat.Partrec.Code.eval`, there is a code `c`\nsuch that `c` and `f c` have the same evaluation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.fixed_point\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">fixed_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L976-L979","name":"Nat.Partrec.Code.eval_part","line":976,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_part","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_part\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_part</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Partrec₂\">Partrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L971-L974","name":"Nat.Partrec.Code.eval_eq_rfindOpt","line":971,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_eq_rfindOpt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_eq_rfindOpt\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_eq_rfindOpt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.rfindOpt\">rfindOpt</a> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L903-L963","name":"Nat.Partrec.Code.evaln_prim","line":903,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_prim","doc":"The `Nat.Partrec.Code.evaln` function is primitive recursive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : (<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.1</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.1</span>.2</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L677-L743","name":"Nat.Partrec.Code.evaln_complete","line":677,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_complete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_complete\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L640-L675","name":"Nat.Partrec.Code.evaln_sound","line":640,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_sound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_sound\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_sound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L602-L638","name":"Nat.Partrec.Code.evaln_mono","line":602,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_mono\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k₂</span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\">k₁</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\">k₂</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L595-L600","name":"Nat.Partrec.Code.evaln_bound","line":595,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_bound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln_bound\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\">evaln</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span></span> → <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L555-L593","name":"Nat.Partrec.Code.evaln","line":555,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln","doc":"A modified evaluation for the code which returns an `Option ℕ` instead of a `Part ℕ`. To avoid\nundecidability, `evaln` takes a parameter `k` and fails if it encounters a number ≥ k in the course\nof its execution. Other than this, the semantics are the same as in `Nat.Partrec.Code.eval`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.evaln\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">evaln</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L522-L553","name":"Nat.Partrec.Code.exists_code","line":522,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.exists_code","doc":"A function is partial recursive if and only if there is a code implementing it. Therefore,\n`eval` is a **universal partial recursive function**. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.exists_code\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">exists_code</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.Partrec\">Partrec</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>), <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L514-L520","name":"Nat.Partrec.Code.smn","line":514,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.smn","doc":"The $S_n^m$ theorem: There is a computable function, namely `Nat.Partrec.Code.curry`, that takes a\nprogram and a ℕ `n`, and returns a new program using `n` as the first argument.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.smn\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">smn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L508-L512","name":"Nat.Partrec.Code.curry_inj","line":508,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">curry_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₁ </span><span class=\"fn\">c₂</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₁</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\">curry</a></span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₂</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\">curry</a></span> <span class=\"fn\">n₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L504-L506","name":"Nat.Partrec.Code.curry_prim","line":504,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">curry_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\">curry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L498-L502","name":"Nat.Partrec.Code.const_prim","line":498,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">const_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Code.const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L495-L496","name":"Nat.Partrec.Code.eval_curry","line":495,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_curry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_curry\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_curry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\">curry</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L492-L493","name":"Nat.Partrec.Code.eval_id","line":492,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_id\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.id\">Code.id</a>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L487-L490","name":"Nat.Partrec.Code.eval_const","line":487,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_const\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Code.const</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L484-L485","name":"Nat.Partrec.Code.instMembershipPFun","line":484,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instMembershipPFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instMembershipPFun\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instMembershipPFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> (<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L477-L482","name":"Nat.Partrec.Code.eval_prec_succ","line":477,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_succ","doc":"Helper lemma for the evaluation of `prec` in the recursive case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_prec_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cf </span><span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">prec</a></span> <span class=\"fn\">cg</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">do\n  let <span class=\"fn\">ih</span> ← <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">prec</a></span> <span class=\"fn\">cg</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">k</span>)</span></span>\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cg</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">k</span> <span class=\"fn\">ih</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L470-L475","name":"Nat.Partrec.Code.eval_prec_zero","line":470,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_zero","doc":"Helper lemma for the evaluation of `prec` in the base case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval_prec_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval_prec_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cf </span><span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">prec</a></span> <span class=\"fn\">cg</span>)</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\">eval</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L440-L468","name":"Nat.Partrec.Code.eval","line":440,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval","doc":"The interpretation of a `Nat.Partrec.Code` as a partial function.\n* `Nat.Partrec.Code.zero`: The constant zero function.\n* `Nat.Partrec.Code.succ`: The successor function.\n* `Nat.Partrec.Code.left`: Left unpairing of a pair of ℕ (encoded by `Nat.pair`)\n* `Nat.Partrec.Code.right`: Right unpairing of a pair of ℕ (encoded by `Nat.pair`)\n* `Nat.Partrec.Code.pair`: Pairs the outputs of argument codes using `Nat.pair`.\n* `Nat.Partrec.Code.comp`: Composition of two argument codes.\n* `Nat.Partrec.Code.prec`: Primitive recursion. Given an argument of the form `Nat.pair a n`:\n  * If `n = 0`, returns `eval cf a`.\n  * If `n = succ k`, returns `eval cg (pair a (pair k (eval (prec cf cg) (pair a k))))`\n* `Nat.Partrec.Code.rfind'`: Minimization. For `f` an argument of the form `Nat.pair a m`,\n  `rfind' f m` returns the least `a` such that `f a m = 0`, if one exists and `f b m` terminates\n  for `b < a`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.eval\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">eval</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L355-L436","name":"Nat.Partrec.Code.rec_computable","line":355,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_computable","doc":"Recursion on `Nat.Partrec.Code` is computable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_computable\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rec_computable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">pr</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpr</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">pr</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">co</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hco</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">co</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">pc</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpc</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">pc</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rf</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable₂\">Computable₂</a> <span class=\"fn\">rf</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">PR</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">cg</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hg</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">CO</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">cg</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hg</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">PC</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">cg</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hg</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">RF</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">F</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.recOn\">Code.recOn</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\">z</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">PR</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">CO</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">PC</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">RF</span> <span class=\"fn\">a</span>)</span></span></span>;\n<span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Computable\">Computable</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">c</span> <span class=\"fn\">a</span>)</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L328-L345","name":"Nat.Partrec.Code.rec_prim","line":328,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim","doc":"Recursion on `Nat.Partrec.Code` is primitive recursive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rec_prim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">pr</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpr</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">co</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hco</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">pc</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpc</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rf</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.1</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span>.2</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">F</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.recOn\">Code.recOn</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\">z</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">pr</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">co</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">pc</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">rf</span> <span class=\"fn\">a</span>)</span></span></span>;\n<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">c</span> <span class=\"fn\">a</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L248-L326","name":"Nat.Partrec.Code.rec_prim'","line":248,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rec_prim'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rec_prim'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primcodable\">Primcodable</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">pr</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpr</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">pr</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">co</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hco</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">co</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">pc</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpc</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">pc</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rf</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <span class=\"fn\">rf</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">PR</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pr</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">cg</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hg</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">CO</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">co</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">cg</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hg</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">PC</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> <span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> <span class=\"fn\">hg</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">pc</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">cg</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hg</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">RF</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">cf</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) (<span class=\"fn\">hf</span> : <span class=\"fn\">σ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">rf</span> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">cf</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">hf</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>;\n<span class=\"fn\">let <span class=\"fn\">F</span> := <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.recOn\">Code.recOn</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\">z</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">PR</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">CO</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">PC</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">RF</span> <span class=\"fn\">a</span>)</span></span></span>;\n<span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">c</span> <span class=\"fn\">a</span>)</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L240-L246","name":"Nat.Partrec.Code.rfind_prim","line":240,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rfind_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'\">rfind'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L230-L238","name":"Nat.Partrec.Code.prec_prim","line":230,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">prec_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">prec</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L220-L228","name":"Nat.Partrec.Code.comp_prim","line":220,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">comp_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp\">comp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L210-L218","name":"Nat.Partrec.Code.pair_prim","line":210,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair_prim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair_prim\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">pair_prim</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair\">pair</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L200-L202","name":"Nat.Partrec.Code.encode_lt_rfind'","line":200,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_rfind'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_rfind'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_rfind'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cf</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'\">rfind'</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L195-L198","name":"Nat.Partrec.Code.encode_lt_prec","line":195,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_prec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_prec\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_prec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cf </span><span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">prec</a></span> <span class=\"fn\">cg</span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cg</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\">prec</a></span> <span class=\"fn\">cg</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L190-L193","name":"Nat.Partrec.Code.encode_lt_comp","line":190,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_comp\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cf </span><span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp\">comp</a></span> <span class=\"fn\">cg</span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cg</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp\">comp</a></span> <span class=\"fn\">cg</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L182-L188","name":"Nat.Partrec.Code.encode_lt_pair","line":182,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encode_lt_pair\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encode_lt_pair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cf </span><span class=\"fn\">cg</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cf</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair\">pair</a></span> <span class=\"fn\">cg</span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">cg</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cf</span>.<a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair\">pair</a></span> <span class=\"fn\">cg</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L179-L180","name":"Nat.Partrec.Code.ofNatCode_eq","line":179,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">ofNatCode_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Denumerable.html#Denumerable.ofNat\">Denumerable.ofNat</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode\">ofNatCode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L176-L177","name":"Nat.Partrec.Code.encodeCode_eq","line":176,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encodeCode_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Logic/Encodable/Basic.html#Encodable.encode\">Encodable.encode</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode\">encodeCode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L170-L174","name":"Nat.Partrec.Code.instDenumerable","line":170,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instDenumerable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instDenumerable\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instDenumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Denumerable.html#Denumerable\">Denumerable</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L124-L145","name":"Nat.Partrec.Code.ofNatCode","line":124,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode","doc":"A decoder for `Nat.Partrec.Code.encodeCode`, taking any ℕ to the `Nat.Partrec.Code` it represents.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.ofNatCode\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">ofNatCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L113-L122","name":"Nat.Partrec.Code.encodeCode","line":113,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode","doc":"An encoding of a `Nat.Partrec.Code` as a ℕ. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.encodeCode\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">encodeCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L108-L111","name":"Nat.Partrec.Code.curry","line":108,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry","doc":"Given a code `c` taking a pair as input, returns a code using `n` as the first argument to `c`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.curry\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">curry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L104-L106","name":"Nat.Partrec.Code.id","line":104,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.id","doc":"A code for the identity function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.id\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L97-L102","name":"Nat.Partrec.Code.const_inj","line":97,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">const_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Code.const</a> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\">Code.const</a> <span class=\"fn\">n₂</span></span> → <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L92-L95","name":"Nat.Partrec.Code.const","line":92,"kind":"def","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const","doc":"Returns a code for the constant function outputting a particular natural. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.const\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L89-L90","name":"Nat.Partrec.Code.instInhabited","line":89,"kind":"instance","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.instInhabited\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L81-L81","name":"Nat.Partrec.Code.rfind'","line":81,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.rfind'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">rfind'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L80-L80","name":"Nat.Partrec.Code.prec","line":80,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.prec\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">prec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L79-L79","name":"Nat.Partrec.Code.comp","line":79,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.comp\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L78-L78","name":"Nat.Partrec.Code.pair","line":78,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.pair\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">pair</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a> → <a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L77-L77","name":"Nat.Partrec.Code.right","line":77,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.right\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">right</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L76-L76","name":"Nat.Partrec.Code.left","line":76,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.left\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">left</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L75-L75","name":"Nat.Partrec.Code.succ","line":75,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.succ\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L74-L74","name":"Nat.Partrec.Code.zero","line":74,"kind":"ctor","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code.zero\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\">Code</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L70-L81","name":"Nat.Partrec.Code","line":70,"kind":"inductive","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code","doc":"Code for partial recursive functions from ℕ to ℕ.\nSee `Nat.Partrec.Code.eval` for the interpretation of these constructors.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.Code\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">Code</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/PartrecCode.lean#L48-L68","name":"Nat.Partrec.rfind'","line":48,"kind":"theorem","docLink":"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.rfind'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/PartrecCode.html#Nat.Partrec.rfind'\"><span class=\"name\">Nat</span>.<span class=\"name\">Partrec</span>.<span class=\"name\">rfind'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/PFun.html#PFun\">→.</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.Partrec\">Partrec</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Partrec.html#Nat.Partrec\">Partrec</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/Computability/Primrec.html#Nat.unpaired\">unpaired</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> <span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.map\">Part.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/Computability/Partrec.html#Nat.rfind\">Nat.rfind</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span>)</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">a</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span>))</span></span></span>)</span></span></span>)</span></span></div></div>"}]}