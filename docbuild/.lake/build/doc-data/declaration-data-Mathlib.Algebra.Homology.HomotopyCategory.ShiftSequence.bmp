{"name":"Mathlib.Algebra.Homology.HomotopyCategory.ShiftSequence","instances":[{"typeNames":["HomologicalComplex.homologyFunctor","Int"],"name":"CochainComplex.instShiftSequenceHomologicalComplexIntUpHomologyFunctorOfNat","className":"CategoryTheory.Functor.ShiftSequence"},{"typeNames":["Prefunctor.map"],"name":"CochainComplex.instQuasiIsoIntMapHomologicalComplexUpShiftFunctor","className":"QuasiIso"},{"typeNames":["HomologicalComplex.quasiIso","Int"],"name":"CochainComplex.instIsCompatibleWithShiftHomologicalComplexIntUpQuasiIso","className":"CategoryTheory.MorphismProperty.IsCompatibleWithShift"},{"typeNames":["HomotopyCategory.homologyFunctor","Int"],"name":"HomotopyCategory.instShiftSequenceIntUpHomologyFunctorOfNat","className":"CategoryTheory.Functor.ShiftSequence"}],"imports":["Init","Mathlib.CategoryTheory.Shift.InducedShiftSequence","Mathlib.CategoryTheory.Shift.Localization","Mathlib.Algebra.Homology.HomotopyCategory.Shift","Mathlib.Algebra.Homology.ShortComplex.HomologicalComplex","Mathlib.Algebra.Homology.QuasiIso"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L195-L195","name":"HomotopyCategory.homologyFunctor_shiftMap_assoc","line":195,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.homologyFunctor_shiftMap_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.homologyFunctor_shiftMap_assoc\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">homologyFunctor_shiftMap_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">a'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shift\">shift</a></span> <span class=\"fn\">a'</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftMap\">shiftMap</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/CommShift.html#CategoryTheory.Functor.commShiftIso\">commShiftIso</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">L</span>)</span>)</span>\n      <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">h</span>)</span>\n    <span class=\"fn\">h✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctorFactors\">homologyFunctorFactors</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftMap\">shiftMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">h</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctorFactors\">homologyFunctorFactors</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">h✝</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L195-L203","name":"HomotopyCategory.homologyFunctor_shiftMap","line":195,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.homologyFunctor_shiftMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.homologyFunctor_shiftMap\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">homologyFunctor_shiftMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">a'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftMap\">shiftMap</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/CommShift.html#CategoryTheory.Functor.commShiftIso\">commShiftIso</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">L</span>)</span>)</span>\n    <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctorFactors\">homologyFunctorFactors</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftMap\">shiftMap</a></span> <span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">h</span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctorFactors\">homologyFunctorFactors</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">L</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L186-L193","name":"HomotopyCategory.homologyShiftIso_hom_app","line":186,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.homologyShiftIso_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.homologyShiftIso_hom_app\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">homologyShiftIso_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">a'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftIso\">shiftIso</a></span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.quotient\">quotient</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/CommShift.html#CategoryTheory.Functor.commShiftIso\">commShiftIso</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctorFactors\">homologyFunctorFactors</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftIso\">shiftIso</a></span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctorFactors\">homologyFunctorFactors</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L178-L182","name":"HomotopyCategory.instShiftSequenceIntUpHomologyFunctorOfNat","line":178,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.instShiftSequenceIntUpHomologyFunctorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#HomotopyCategory.instShiftSequenceIntUpHomologyFunctorOfNat\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">instShiftSequenceIntUpHomologyFunctorOfNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.ShiftSequence\">ShiftSequence</a></span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L149-L149","name":"CochainComplex.liftCycles_shift_homologyπ_assoc","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.liftCycles_shift_homologyπ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.liftCycles_shift_homologyπ_assoc\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">liftCycles_shift_homologyπ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.next\">next</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.next\">next</a></span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homology\">HomologicalComplex.homology</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.liftCycles\">HomologicalComplex.liftCycles</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span> <span class=\"fn\">hf</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyπ\">HomologicalComplex.homologyπ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.liftCycles\">HomologicalComplex.liftCycles</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">j'</span> <span class=\"fn\">hj'</span>\n      <span class=\"fn\">⋯</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyπ\">HomologicalComplex.homologyπ</a> <span class=\"fn\">K</span> <span class=\"fn\">i'</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftIso\">shiftIso</a></span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L149-L170","name":"CochainComplex.liftCycles_shift_homologyπ","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.liftCycles_shift_homologyπ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.liftCycles_shift_homologyπ\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">liftCycles_shift_homologyπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.next\">next</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.next\">next</a></span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.liftCycles\">HomologicalComplex.liftCycles</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">j</span> <span class=\"fn\">hj</span> <span class=\"fn\">hf</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyπ\">HomologicalComplex.homologyπ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.liftCycles\">HomologicalComplex.liftCycles</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctorObjXIso\">shiftFunctorObjXIso</a></span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">j'</span> <span class=\"fn\">hj'</span>\n      <span class=\"fn\">⋯</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyπ\">HomologicalComplex.homologyπ</a> <span class=\"fn\">K</span> <span class=\"fn\">i'</span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shiftIso\">shiftIso</a></span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L145-L147","name":"CochainComplex.homologyFunctor_shift","line":145,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.homologyFunctor_shift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.homologyFunctor_shift\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">homologyFunctor_shift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.shift\">shift</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L141-L142","name":"CochainComplex.instIsCompatibleWithShiftHomologicalComplexIntUpQuasiIso","line":141,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.instIsCompatibleWithShiftHomologicalComplexIntUpQuasiIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.instIsCompatibleWithShiftHomologicalComplexIntUpQuasiIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">instIsCompatibleWithShiftHomologicalComplexIntUpQuasiIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#HomologicalComplex.quasiIso\">HomologicalComplex.quasiIso</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/Localization.html#CategoryTheory.MorphismProperty.IsCompatibleWithShift\">IsCompatibleWithShift</a></span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L136-L139","name":"CochainComplex.instQuasiIsoIntMapHomologicalComplexUpShiftFunctor","line":136,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.instQuasiIsoIntMapHomologicalComplexUpShiftFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.instQuasiIsoIntMapHomologicalComplexUpShiftFunctor\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">instQuasiIsoIntMapHomologicalComplexUpShiftFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#QuasiIso\">QuasiIso</a> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#QuasiIso\">QuasiIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L126-L134","name":"CochainComplex.quasiIso_shift_iff","line":126,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.quasiIso_shift_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.quasiIso_shift_iff\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">quasiIso_shift_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#QuasiIso\">QuasiIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#QuasiIso\">QuasiIso</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L120-L124","name":"CochainComplex.quasiIsoAt_shift_iff","line":120,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.quasiIsoAt_shift_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.quasiIsoAt_shift_iff\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">quasiIsoAt_shift_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#QuasiIsoAt\">QuasiIsoAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/QuasiIso.html#QuasiIsoAt\">QuasiIsoAt</a> <span class=\"fn\">φ</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L103-L118","name":"CochainComplex.instShiftSequenceHomologicalComplexIntUpHomologyFunctorOfNat","line":103,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.instShiftSequenceHomologicalComplexIntUpHomologyFunctorOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.instShiftSequenceHomologicalComplexIntUpHomologyFunctorOfNat\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">instShiftSequenceHomologicalComplexIntUpHomologyFunctorOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Shift/ShiftSequence.html#CategoryTheory.Functor.ShiftSequence\">ShiftSequence</a></span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L95-L99","name":"CochainComplex.ShiftSequence.shiftIso_inv_app","line":95,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso_inv_app\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">ShiftSequence</span>.<span class=\"name\">shiftIso_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">a'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso\">shiftIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.ShortComplex.homologyMap\">CategoryTheory.ShortComplex.homologyMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L89-L93","name":"CochainComplex.ShiftSequence.shiftIso_hom_app","line":89,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso_hom_app\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">ShiftSequence</span>.<span class=\"name\">shiftIso_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">a'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso\">shiftIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.ShortComplex.homologyMap\">CategoryTheory.ShortComplex.homologyMap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L79-L87","name":"CochainComplex.ShiftSequence.shiftIso","line":79,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso","doc":"The natural isomorphism `(K⟦n⟧).homology a ≅ K.homology a'`when `n + a = a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.ShiftSequence.shiftIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">ShiftSequence</span>.<span class=\"name\">shiftIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Homology.html#CategoryTheory.CategoryWithHomology\">CategoryTheory.CategoryWithHomology</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">a </span><span class=\"fn\">a'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex\">HomologicalComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.homologyFunctor\">HomologicalComplex.homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L62-L72","name":"CochainComplex.shiftShortComplexFunctorIso_add'_hom_app","line":62,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_add'_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_add'_hom_app\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_add'_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">mn</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmn</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">mn</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">a' </span><span class=\"fn\">a''</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha'</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha''</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a''</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">mn</span> <span class=\"fn\">a</span> <span class=\"fn\">a''</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.shortComplexFunctor\">HomologicalComplex.shortComplexFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorAdd'\">CategoryTheory.shiftFunctorAdd'</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">m</span> <span class=\"fn\">n</span> <span class=\"fn\">mn</span> <span class=\"fn\">hmn</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span> <span class=\"fn\">ha'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">m</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span>)</span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span> <span class=\"fn\">a'</span> <span class=\"fn\">a''</span> <span class=\"fn\">ha''</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L56-L60","name":"CochainComplex.shiftShortComplexFunctorIso_zero_add_hom_app","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_zero_add_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_zero_add_hom_app\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_zero_add_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.shortComplexFunctor\">HomologicalComplex.shortComplexFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctorZero\">CategoryTheory.shiftFunctorZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L48-L48","name":"CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₂","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_hom_app_τ₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₂\">τ₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L48-L48","name":"CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₃","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_inv_app_τ₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₃\">τ₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L48-L48","name":"CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₁","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_inv_app_τ₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₁\">τ₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L48-L48","name":"CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₂","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_inv_app_τ₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_inv_app_τ₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₂\">τ₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L48-L48","name":"CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₃","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_hom_app_τ₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₃\">τ₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L48-L48","name":"CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₁","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso_hom_app_τ₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso_hom_app_τ₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\">shiftShortComplexFunctorIso</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">hi</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₁\">τ₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L47-L52","name":"CochainComplex.shiftShortComplexFunctorIso","line":47,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso","doc":"The natural isomorphism `(K⟦n⟧).sc i ≅ K.sc i'` when `n + i = i'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctorIso\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctorIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">i'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/Shift.html#CochainComplex.shiftFunctor\">shiftFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.shortComplexFunctor\">HomologicalComplex.shortComplexFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.shortComplexFunctor\">HomologicalComplex.shortComplexFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">i'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L36-L36","name":"CochainComplex.shiftShortComplexFunctor'_hom_app_τ₂","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_hom_app_τ₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_hom_app_τ₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'_hom_app_τ₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\">shiftShortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span> <span class=\"fn\">hi</span> <span class=\"fn\">hj</span> <span class=\"fn\">hk</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₂\">τ₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L36-L36","name":"CochainComplex.shiftShortComplexFunctor'_hom_app_τ₁","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_hom_app_τ₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_hom_app_τ₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'_hom_app_τ₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\">shiftShortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span> <span class=\"fn\">hi</span> <span class=\"fn\">hj</span> <span class=\"fn\">hk</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₁\">τ₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L36-L36","name":"CochainComplex.shiftShortComplexFunctor'_inv_app_τ₂","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_inv_app_τ₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_inv_app_τ₂\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'_inv_app_τ₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\">shiftShortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span> <span class=\"fn\">hi</span> <span class=\"fn\">hj</span> <span class=\"fn\">hk</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₂\">τ₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L36-L36","name":"CochainComplex.shiftShortComplexFunctor'_hom_app_τ₃","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_hom_app_τ₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_hom_app_τ₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'_hom_app_τ₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\">shiftShortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span> <span class=\"fn\">hi</span> <span class=\"fn\">hj</span> <span class=\"fn\">hk</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₃\">τ₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L36-L36","name":"CochainComplex.shiftShortComplexFunctor'_inv_app_τ₃","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_inv_app_τ₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_inv_app_τ₃\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'_inv_app_τ₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\">shiftShortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span> <span class=\"fn\">hi</span> <span class=\"fn\">hj</span> <span class=\"fn\">hk</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₃\">τ₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L36-L36","name":"CochainComplex.shiftShortComplexFunctor'_inv_app_τ₁","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_inv_app_τ₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'_inv_app_τ₁\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'_inv_app_τ₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\">shiftShortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span> <span class=\"fn\">hi</span> <span class=\"fn\">hj</span> <span class=\"fn\">hk</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.Hom.τ₁\">τ₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Algebra/Ring/NegOnePow.html#Int.negOnePow\">negOnePow</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.XIsoOfEq\">HomologicalComplex.XIsoOfEq</a> <span class=\"fn\">X</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.lean#L34-L45","name":"CochainComplex.shiftShortComplexFunctor'","line":34,"kind":"def","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'","doc":"The natural isomorphism `(K⟦n⟧).sc' i j k ≅ K.sc' i' j' k'` when `n + i = i'`,\n`n + j = j'` and `n + k = k'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/ShiftSequence.html#CochainComplex.shiftShortComplexFunctor'\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">shiftShortComplexFunctor'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">i' </span><span class=\"fn\">j' </span><span class=\"fn\">k'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Shift/Basic.html#CategoryTheory.shiftFunctor\">CategoryTheory.shiftFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.shortComplexFunctor'\">HomologicalComplex.shortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.shortComplexFunctor'\">HomologicalComplex.shortComplexFunctor'</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">i'</span> <span class=\"fn\">j'</span> <span class=\"fn\">k'</span></span></div></div>"}]}