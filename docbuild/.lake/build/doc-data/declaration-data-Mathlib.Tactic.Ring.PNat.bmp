{"name":"Mathlib.Tactic.Ring.PNat","instances":[{"typeNames":["PNat","Nat"],"name":"Mathlib.Tactic.Ring.instCSLiftPNatNat","className":"Mathlib.Tactic.Ring.CSLift"},{"typeNames":["HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["Nat.toPNat"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["Nat.succPNat","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["Nat.toPNat'","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["PNat.divExact","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["HAdd.hAdd","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["HMul.hMul","HMul.hMul"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["HPow.hPow","HPow.hPow"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow","className":"Mathlib.Tactic.Ring.CSLiftVal"}],"imports":["Init","Mathlib.Tactic.Ring.Basic","Mathlib.Data.PNat.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L41-L42","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow","line":41,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatHPow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h1</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>) (<span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L38-L39","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul","line":38,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatHMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h1</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">k</span> <span class=\"fn\">k'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>) (<span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L35-L36","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd","line":35,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatHAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h1</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">k</span> <span class=\"fn\">k'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>) (<span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L33-L33","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat","line":33,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatDivExactHAddDivOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#PNat.divExact\">divExact</a></span> <span class=\"fn\">k</span>)</span> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">div</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L31-L31","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat","line":31,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatToPNat'HAddPredOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#Nat.toPNat'\">toPNat'</a></span> (<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.pred\">pred</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L29-L29","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat","line":29,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatSuccPNatHAddOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">succPNat</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L26-L26","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat","line":26,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatToPNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#Nat.toPNat\">toPNat</a></span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L24-L24","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd","line":24,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatOfNatHAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Ring/PNat.lean#L18-L20","name":"Mathlib.Tactic.Ring.instCSLiftPNatNat","line":18,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftPNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftPNatNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftPNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLift\">CSLift</a> <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}