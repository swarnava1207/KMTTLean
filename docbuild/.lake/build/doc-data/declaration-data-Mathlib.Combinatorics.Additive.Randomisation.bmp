{"name":"Mathlib.Combinatorics.Additive.Randomisation","instances":[],"imports":["Init","Mathlib.Analysis.Fourier.FiniteAbelian.Orthogonality","Mathlib.Combinatorics.Additive.Dissociation"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Additive/Randomisation.lean#L25-L50","name":"AddDissociated.randomisation","line":25,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Additive/Randomisation.html#AddDissociated.randomisation","doc":"One can randomise by a function of dissociated support. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Additive/Randomisation.html#AddDissociated.randomisation\"><span class=\"name\">AddDissociated</span>.<span class=\"name\">randomisation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/AddChar.html#AddChar\">AddChar</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/AddChar.html#AddChar\">AddChar</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Additive/Dissociation.html#AddDissociated\">AddDissociated</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">ψ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/AddChar.html#AddChar\">AddChar</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Algebra/BigOperators/Expect.html#Finset.expect\">expect</a></span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">∏ <span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/AddChar.html#AddChar\">AddChar</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>, (<span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">a</span></span>).<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/AddChar.html#AddChar\">AddChar</a> <span class=\"fn\">G</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>, <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">ψ</span></span></span></div></div>"}]}