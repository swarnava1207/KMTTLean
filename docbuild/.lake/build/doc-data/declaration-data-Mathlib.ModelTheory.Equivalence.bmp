{"name":"Mathlib.ModelTheory.Equivalence","instances":[{"typeNames":["FirstOrder.Language.BoundedFormula","FirstOrder.Language.Theory.Imp"],"name":"FirstOrder.Language.Theory.Imp.instIsReflBoundedFormula","className":"IsRefl"},{"typeNames":["FirstOrder.Language.BoundedFormula","FirstOrder.Language.Theory.Imp"],"name":"FirstOrder.Language.Theory.Imp.instIsTransBoundedFormula","className":"IsTrans"},{"typeNames":["FirstOrder.Language.BoundedFormula","FirstOrder.Language.Theory.Iff"],"name":"FirstOrder.Language.Theory.Iff.instIsReflBoundedFormula","className":"IsRefl"},{"typeNames":["FirstOrder.Language.BoundedFormula","FirstOrder.Language.Theory.Iff"],"name":"FirstOrder.Language.Theory.Iff.instIsSymmBoundedFormula","className":"IsSymm"},{"typeNames":["FirstOrder.Language.BoundedFormula","FirstOrder.Language.Theory.Iff"],"name":"FirstOrder.Language.Theory.Iff.instIsTransBoundedFormula","className":"IsTrans"}],"imports":["Init","Mathlib.ModelTheory.Satisfiability"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L255-L256","name":"FirstOrder.Language.Formula.inf_iff_not_sup_not","line":255,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.inf_iff_not_sup_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.inf_iff_not_sup_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Formula</span>.<span class=\"name\">inf_iff_not_sup_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula\">Formula</a></span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span>).<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L252-L253","name":"FirstOrder.Language.Formula.sup_iff_not_inf_not","line":252,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.sup_iff_not_inf_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.sup_iff_not_inf_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Formula</span>.<span class=\"name\">sup_iff_not_inf_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula\">Formula</a></span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span>).<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L249-L250","name":"FirstOrder.Language.Formula.imp_iff_not_sup","line":249,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.imp_iff_not_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.imp_iff_not_sup\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Formula</span>.<span class=\"name\">imp_iff_not_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula\">Formula</a></span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.imp\">imp</a></span> <span class=\"fn\">ψ</span>)</span> (<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L246-L247","name":"FirstOrder.Language.Formula.iff_not_not","line":246,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.iff_not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Formula.iff_not_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Formula</span>.<span class=\"name\">iff_not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula\">Formula</a></span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L236-L238","name":"FirstOrder.Language.BoundedFormula.sup_not_iff_top","line":236,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.sup_not_iff_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.sup_not_iff_top\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">sup_not_iff_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>) <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L232-L234","name":"FirstOrder.Language.BoundedFormula.inf_not_iff_bot","line":232,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.inf_not_iff_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.inf_not_iff_bot\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">inf_not_iff_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>) <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L228-L230","name":"FirstOrder.Language.BoundedFormula.iff_all_liftAt","line":228,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.iff_all_liftAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.iff_all_liftAt\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">iff_all_liftAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.liftAt\">liftAt</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.all\">all</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L225-L226","name":"FirstOrder.Language.BoundedFormula.ex_iff_not_all_not","line":225,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.ex_iff_not_all_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.ex_iff_not_all_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">ex_iff_not_all_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.ex\">ex</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.all\">all</a></span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L222-L223","name":"FirstOrder.Language.BoundedFormula.all_iff_not_ex_not","line":222,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.all_iff_not_ex_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.all_iff_not_ex_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">all_iff_not_ex_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.all\">all</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.ex\">ex</a></span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L219-L220","name":"FirstOrder.Language.BoundedFormula.inf_iff_not_sup_not","line":219,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.inf_iff_not_sup_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.inf_iff_not_sup_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">inf_iff_not_sup_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>).<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L216-L217","name":"FirstOrder.Language.BoundedFormula.sup_iff_not_inf_not","line":216,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.sup_iff_not_inf_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.sup_iff_not_inf_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">sup_iff_not_inf_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>).<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L213-L214","name":"FirstOrder.Language.BoundedFormula.imp_iff_not_sup","line":213,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.imp_iff_not_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.imp_iff_not_sup\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">imp_iff_not_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.imp\">imp</a></span> <span class=\"fn\">ψ</span>)</span> (<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L210-L211","name":"FirstOrder.Language.BoundedFormula.iff_not_not","line":210,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.iff_not_not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.BoundedFormula.iff_not_not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">BoundedFormula</span>.<span class=\"name\">iff_not_not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L199-L202","name":"FirstOrder.Language.Theory.iffSetoid","line":199,"kind":"def","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.iffSetoid","doc":"Semantic equivalence forms an equivalence relation on formulas. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.iffSetoid\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">iffSetoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L191-L195","name":"FirstOrder.Language.Theory.Iff.imp","line":191,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.imp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">φ' </span><span class=\"fn\">ψ'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ'</span> <span class=\"fn\">ψ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.imp\">imp</a></span> <span class=\"fn\">φ'</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.imp\">imp</a></span> <span class=\"fn\">ψ'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L185-L189","name":"FirstOrder.Language.Theory.Iff.not","line":185,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.not","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.not\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">not</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.not\">not</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L179-L183","name":"FirstOrder.Language.Theory.Iff.ex","line":179,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.ex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.ex\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">ex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.ex\">ex</a></span> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.ex\">ex</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L173-L177","name":"FirstOrder.Language.Theory.Iff.all","line":173,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.all","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.all\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">all</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.all\">all</a></span> <span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula.all\">all</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L168-L171","name":"FirstOrder.Language.Theory.Iff.models_sentence_iff","line":168,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.models_sentence_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.models_sentence_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">models_sentence_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">Sentence</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Sentence.Realize\">⊨</a> <span class=\"fn\">φ</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Sentence.Realize\">⊨</a> <span class=\"fn\">ψ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L163-L166","name":"FirstOrder.Language.Theory.Iff.realize_iff","line":163,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.realize_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.realize_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">realize_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Formula\">Formula</a></span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Formula.Realize\">Realize</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Formula.Realize\">Realize</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L159-L161","name":"FirstOrder.Language.Theory.Iff.realize_bd_iff","line":159,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.realize_bd_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.realize_bd_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">realize_bd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">M</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\">T</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.BoundedFormula.Realize\">Realize</a></span> <span class=\"fn\">v</span> <span class=\"fn\">xs</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ψ</span>.<a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.BoundedFormula.Realize\">Realize</a></span> <span class=\"fn\">v</span> <span class=\"fn\">xs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L156-L157","name":"FirstOrder.Language.Theory.Iff.instIsTransBoundedFormula","line":156,"kind":"instance","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.instIsTransBoundedFormula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.instIsTransBoundedFormula\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">instIsTransBoundedFormula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsTrans\">IsTrans</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L147-L154","name":"FirstOrder.Language.Theory.Iff.trans","line":147,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.trans\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L144-L145","name":"FirstOrder.Language.Theory.Iff.instIsSymmBoundedFormula","line":144,"kind":"instance","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.instIsSymmBoundedFormula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.instIsSymmBoundedFormula\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">instIsSymmBoundedFormula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsSymm\">IsSymm</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L138-L142","name":"FirstOrder.Language.Theory.Iff.symm","line":138,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.symm\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L135-L136","name":"FirstOrder.Language.Theory.Iff.instIsReflBoundedFormula","line":135,"kind":"instance","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.instIsReflBoundedFormula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.instIsReflBoundedFormula\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">instIsReflBoundedFormula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsRefl\">IsRefl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L131-L133","name":"FirstOrder.Language.Theory.Iff.refl","line":131,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.refl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L128-L129","name":"FirstOrder.Language.Theory.Iff.mpr","line":128,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.mpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.mpr\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">mpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L125-L126","name":"FirstOrder.Language.Theory.Iff.mp","line":125,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.mp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff.mp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span>.<span class=\"name\">mp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L119-L121","name":"FirstOrder.Language.Theory.imp_antisymm","line":119,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_antisymm\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">imp_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L114-L117","name":"FirstOrder.Language.Theory.iff_iff_imp_and_imp","line":114,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.iff_iff_imp_and_imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.iff_iff_imp_and_imp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">iff_iff_imp_and_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\">Iff</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L110-L112","name":"FirstOrder.«term_⇔[_]_»","line":110,"kind":"def","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.«term_⇔[_]_»","doc":"Two (bounded) formulas are semantically equivalent over a theory `T` when they have the same\ninterpretation in every model of `T`. (This is also known as logical equivalence, which also has a\nproof-theoretic definition.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.«term_⇔[_]_»\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">«term_⇔[_]_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L104-L108","name":"FirstOrder.Language.Theory.Iff","line":104,"kind":"def","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff","doc":"Two (bounded) formulas are semantically equivalent over a theory `T` when they have the same\ninterpretation in every model of `T`. (This is also known as logical equivalence, which also has a\nproof-theoretic definition.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L97-L100","name":"FirstOrder.Language.Theory.imp_inf_iff","line":97,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_inf_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_inf_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">imp_inf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> (<span class=\"fn\">ψ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">θ</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L92-L95","name":"FirstOrder.Language.Theory.imp_inf","line":92,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_inf\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">imp_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> (<span class=\"fn\">ψ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">θ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L88-L90","name":"FirstOrder.Language.Theory.inf_imp_right","line":88,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.inf_imp_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.inf_imp_right\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">inf_imp_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">ψ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L84-L86","name":"FirstOrder.Language.Theory.inf_imp_left","line":84,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.inf_imp_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.inf_imp_left\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">inf_imp_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L79-L82","name":"FirstOrder.Language.Theory.sup_imp_iff","line":79,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.sup_imp_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.sup_imp_iff\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">sup_imp_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">θ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">θ</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L74-L77","name":"FirstOrder.Language.Theory.sup_imp","line":74,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.sup_imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.sup_imp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">sup_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>) <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L70-L72","name":"FirstOrder.Language.Theory.imp_sup_right","line":70,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_sup_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_sup_right\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">imp_sup_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L66-L68","name":"FirstOrder.Language.Theory.imp_sup_left","line":66,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_sup_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_sup_left\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">imp_sup_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> (<span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">ψ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L63-L64","name":"FirstOrder.Language.Theory.imp_top","line":63,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.imp_top\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">imp_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L60-L61","name":"FirstOrder.Language.Theory.bot_imp","line":60,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.bot_imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.bot_imp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">bot_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L54-L54","name":"FirstOrder.Language.Theory.Imp.instIsTransBoundedFormula","line":54,"kind":"instance","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.instIsTransBoundedFormula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.instIsTransBoundedFormula\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Imp</span>.<span class=\"name\">instIsTransBoundedFormula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsTrans\">IsTrans</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L50-L52","name":"FirstOrder.Language.Theory.Imp.trans","line":50,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.trans\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Imp</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ </span><span class=\"fn\">θ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">ψ</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L48-L48","name":"FirstOrder.Language.Theory.Imp.instIsReflBoundedFormula","line":48,"kind":"instance","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.instIsReflBoundedFormula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.instIsReflBoundedFormula\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Imp</span>.<span class=\"name\">instIsReflBoundedFormula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsRefl\">IsRefl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L45-L46","name":"FirstOrder.Language.Theory.Imp.refl","line":45,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp.refl\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Imp</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\">Imp</a></span> <span class=\"fn\">φ</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L40-L41","name":"FirstOrder.«term_⟹[_]_»","line":40,"kind":"def","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.«term_⟹[_]_»","doc":"`φ ⟹[T] ψ` indicates that `φ` implies `ψ` in models of `T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.«term_⟹[_]_»\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">«term_⟹[_]_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Equivalence.lean#L36-L38","name":"FirstOrder.Language.Theory.Imp","line":36,"kind":"def","docLink":"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp","doc":"`φ ⟹[T] ψ` indicates that `φ` implies `ψ` in models of `T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Equivalence.html#FirstOrder.Language.Theory.Imp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">Imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language\">Language</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.BoundedFormula\">BoundedFormula</a></span> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}