{"name":"Mathlib.NumberTheory.LSeries.Dirichlet","instances":[],"imports":["Init","Mathlib.NumberTheory.DirichletCharacter.Bounds","Mathlib.NumberTheory.LSeries.Convolution","Mathlib.NumberTheory.LSeries.Deriv","Mathlib.NumberTheory.LSeries.RiemannZeta","Mathlib.NumberTheory.SumPrimeReciprocals","Mathlib.NumberTheory.VonMangoldt"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L393-L401","name":"ArithmeticFunction.LSeries_vonMangoldt_eq_deriv_riemannZeta_div","line":393,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq_deriv_riemannZeta_div","doc":"The L-series of the von Mangoldt function `Λ` equals the negative logarithmic derivative\nof the Riemann zeta function on its domain of convergence `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq_deriv_riemannZeta_div\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_vonMangoldt_eq_deriv_riemannZeta_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">vonMangoldt</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L386-L391","name":"ArithmeticFunction.LSeries_vonMangoldt_eq","line":386,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq","doc":"The L-series of the von Mangoldt function `Λ` equals the negative logarithmic derivative\nof the L-series of the constant sequence `1` on its domain of convergence `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_vonMangoldt_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_vonMangoldt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">vonMangoldt</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L366-L379","name":"DirichletCharacter.LSeries_twist_vonMangoldt_eq","line":366,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_twist_vonMangoldt_eq","doc":"The L-series of the twist of the von Mangoldt function `Λ` by a Dirichlet character `χ` at `s`\nequals the negative logarithmic derivative of the L-series of `χ` when `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_twist_vonMangoldt_eq\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries_twist_vonMangoldt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> (<span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">ArithmeticFunction.vonMangoldt</a> <span class=\"fn\">n</span>)</span></span></span>) <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L359-L364","name":"DirichletCharacter.LSeriesSummable_twist_vonMangoldt","line":359,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_twist_vonMangoldt","doc":"The L-series of the twist of the von Mangoldt function `Λ` by a Dirichlet character `χ`\nconverges at `s` when `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_twist_vonMangoldt\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_twist_vonMangoldt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> (<span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">ArithmeticFunction.vonMangoldt</a> <span class=\"fn\">n</span>)</span></span></span>) <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L354-L357","name":"DirichletCharacter.convolution_twist_vonMangoldt","line":354,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_twist_vonMangoldt","doc":"A twisted version of the relation `Λ * ↑ζ = log` in terms of complex sequences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_twist_vonMangoldt\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">convolution_twist_vonMangoldt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> (<span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">ArithmeticFunction.vonMangoldt</a> <span class=\"fn\">n</span>)</span></span></span>) <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L339-L348","name":"ArithmeticFunction.LSeriesSummable_vonMangoldt","line":339,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_vonMangoldt","doc":"The L-series of the von Mangoldt function `Λ` converges at `s` when `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_vonMangoldt\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesSummable_vonMangoldt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">vonMangoldt</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L336-L337","name":"ArithmeticFunction.convolution_vonMangoldt_const_one","line":336,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_const_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_const_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">convolution_vonMangoldt_const_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">vonMangoldt</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L329-L334","name":"ArithmeticFunction.convolution_vonMangoldt_zeta","line":329,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_zeta","doc":"A translation of the relation `Λ * ↑ζ = log` of (real-valued) arithmetic functions\nto an equality of complex sequences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.convolution_vonMangoldt_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">convolution_vonMangoldt_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/VonMangoldt.html#ArithmeticFunction.vonMangoldt\">vonMangoldt</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L312-L314","name":"riemannZeta_ne_zero_of_one_lt_re","line":312,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#riemannZeta_ne_zero_of_one_lt_re","doc":"The Riemann Zeta Function does not vanish on the half-plane `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#riemannZeta_ne_zero_of_one_lt_re\"><span class=\"name\">riemannZeta_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L307-L310","name":"LSeries_one_ne_zero_of_one_lt_re","line":307,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_ne_zero_of_one_lt_re","doc":"The L-series of the constant sequence `1` does not vanish on the right half-plane\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_ne_zero_of_one_lt_re\"><span class=\"name\">LSeries_one_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L303-L305","name":"LSeries_one_mul_Lseries_moebius","line":303,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_mul_Lseries_moebius","doc":"The L-series of the constant sequence `1` and of the Möbius function are inverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_mul_Lseries_moebius\"><span class=\"name\">LSeries_one_mul_Lseries_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L298-L301","name":"LSeriesHasSum_one","line":298,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesHasSum_one","doc":"The L-series of the constant sequence `1` equals the Riemann zeta function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesHasSum_one\"><span class=\"name\">LSeriesHasSum_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesHasSum\">LSeriesHasSum</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L293-L296","name":"LSeries_one_eq_riemannZeta","line":293,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_eq_riemannZeta","doc":"The L-series of the constant sequence `1` equals the Riemann Zeta Function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries_one_eq_riemannZeta\"><span class=\"name\">LSeries_one_eq_riemannZeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L284-L287","name":"ArithmeticFunction.LSeries_zeta_ne_zero_of_one_lt_re","line":284,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_ne_zero_of_one_lt_re","doc":"The L-series of the arithmetic function `ζ` does not vanish on the right half-plane\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_ne_zero_of_one_lt_re\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L278-L282","name":"ArithmeticFunction.LSeries_zeta_mul_Lseries_moebius","line":278,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_mul_Lseries_moebius","doc":"The L-series of the arithmetic function `ζ` and of the Möbius function are inverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_mul_Lseries_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_mul_Lseries_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">moebius</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L273-L276","name":"ArithmeticFunction.LSeriesHasSum_zeta","line":273,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesHasSum_zeta","doc":"The L-series of the arithmetic function `ζ` equals the Riemann Zeta Function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesHasSum_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesHasSum_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesHasSum\">LSeriesHasSum</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L264-L271","name":"ArithmeticFunction.LSeries_zeta_eq_riemannZeta","line":264,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq_riemannZeta","doc":"The L-series of the arithmetic function `ζ` equals the Riemann Zeta Function on its\ndomain of convergence `1 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq_riemannZeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_eq_riemannZeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L260-L262","name":"ArithmeticFunction.abscissaOfAbsConv_zeta","line":260,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_zeta","doc":"The abscissa of (absolute) convergence of the arithmetic function `ζ` is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">abscissaOfAbsConv_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L255-L258","name":"ArithmeticFunction.LSeriesSummable_zeta_iff","line":255,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_zeta_iff","doc":"The `LSeries` associated to the arithmetic function `ζ` converges at `s` if and only if\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_zeta_iff\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesSummable_zeta_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L249-L253","name":"ArithmeticFunction.LSeries_zeta_eq","line":249,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq","doc":"The `LSeries` of the arithmetic function `ζ` is the same as the `LSeries` associated\nto the constant sequence `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeries_zeta_eq\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeries_zeta_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">n</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L242-L244","name":"LSeriesSummable_one_iff","line":242,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesSummable_one_iff","doc":"The `LSeries` of the constant sequence `1` converges at `s` if and only if `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeriesSummable_one_iff\"><span class=\"name\">LSeriesSummable_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">1</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L238-L240","name":"LSeries.abscissaOfAbsConv_one","line":238,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.abscissaOfAbsConv_one","doc":"The abscissa of (absolute) convergence of the constant sequence `1` is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.abscissaOfAbsConv_one\"><span class=\"name\">LSeries</span>.<span class=\"name\">abscissaOfAbsConv_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">abscissaOfAbsConv</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L218-L221","name":"DirichletCharacter.LSeries_ne_zero_of_one_lt_re","line":218,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_ne_zero_of_one_lt_re","doc":"The L-series of a Dirichlet character does not vanish on the right half-plane `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_ne_zero_of_one_lt_re\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries_ne_zero_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L205-L211","name":"DirichletCharacter.LSeries.mul_mu_eq_one","line":205,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries.mul_mu_eq_one","doc":"The L-series of a Dirichlet character `χ` and of the twist of `μ` by `χ` are multiplicative\ninverses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries.mul_mu_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries</span>.<span class=\"name\">mul_mu_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> (<span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a> <span class=\"fn\">n</span>)</span></span></span>) <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L196-L202","name":"DirichletCharacter.LSeriesSummable_mul","line":196,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_mul","doc":"The L-series of the twist of `f` by a Dirichlet character converges at `s` if the L-series\nof `f` does. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> (<span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span>) <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L189-L194","name":"DirichletCharacter.absicssaOfAbsConv_eq_one","line":189,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.absicssaOfAbsConv_eq_one","doc":"The abscissa of absolute convergence of the L-series of a Dirichlet character mod `N > 0`\nis `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.absicssaOfAbsConv_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">absicssaOfAbsConv_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L181-L187","name":"DirichletCharacter.LSeriesSummable_iff","line":181,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_iff","doc":"The L-series of a Dirichlet character mod `N > 0` converges absolutely at `s` if and only if\n`re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_iff\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L176-L179","name":"DirichletCharacter.LSeriesSummable_of_one_lt_re","line":176,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_of_one_lt_re","doc":"The L-series of a Dirichlet character converges absolutely at `s` if `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeriesSummable_of_one_lt_re\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_of_one_lt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L164-L174","name":"DirichletCharacter.not_LSeriesSummable_at_one","line":164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.not_LSeriesSummable_at_one","doc":"The L-series of a Dirichlet character mod `N > 0` does not converge absolutely at `s = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.not_LSeriesSummable_at_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">not_LSeriesSummable_at_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <span class=\"fn\">N</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L161-L162","name":"DirichletCharacter.LSeries_modOne_eq","line":161,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_modOne_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.LSeries_modOne_eq\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeries_modOne_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L155-L159","name":"DirichletCharacter.modOne_eq_one","line":155,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modOne_eq_one","doc":"The Dirichlet character mod `1` corresponds to the constant function `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modOne_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">modOne_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L145-L153","name":"DirichletCharacter.modZero_eq_delta","line":145,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modZero_eq_delta","doc":"The Dirichlet character mod `0` corresponds to `δ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.modZero_eq_delta\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">modZero_eq_delta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L136-L143","name":"DirichletCharacter.convolution_mul_moebius","line":136,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_mul_moebius","doc":"The convolution of a Dirichlet character `χ` with the twist `χ * μ` is `δ`,\nthe indicator function of `{1}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.convolution_mul_moebius\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">convolution_mul_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">(fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span>)</span>\n    (<span class=\"fn\">(fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">ArithmeticFunction.moebius</a> <span class=\"fn\">n</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L132-L133","name":"DirichletCharacter.delta_mul","line":132,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.delta_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.delta_mul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">delta_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L129-L130","name":"DirichletCharacter.mul_delta","line":129,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_delta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_delta\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mul_delta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">n_1</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n_1</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L119-L127","name":"DirichletCharacter.mul_convolution_distrib","line":119,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_convolution_distrib","doc":"Twisting by a Dirichlet character `χ` distributes over convolution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.mul_convolution_distrib\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mul_convolution_distrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> (<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span>) (<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">LSeries.convolution</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L112-L115","name":"DirichletCharacter.apply_eq_toArithmeticFunction_apply","line":112,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.apply_eq_toArithmeticFunction_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.apply_eq_toArithmeticFunction_apply\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">apply_eq_toArithmeticFunction_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#toArithmeticFunction\">toArithmeticFunction</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L104-L110","name":"DirichletCharacter.isMultiplicative_toArithmeticFunction","line":104,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.isMultiplicative_toArithmeticFunction","doc":"The arithmetic function associated to a Dirichlet character is multiplicative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#DirichletCharacter.isMultiplicative_toArithmeticFunction\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isMultiplicative_toArithmeticFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#toArithmeticFunction\">toArithmeticFunction</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span>.<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">IsMultiplicative</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L98-L99","name":"Dchar_one","line":98,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#Dchar_one","doc":"`χ₁` is (local) notation for the (necessarily trivial) Dirichlet character modulo `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#Dchar_one\"><span class=\"name\">Dchar_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L94-L96","name":"LSeries.convolution_one_eq_convolution_zeta","line":94,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.convolution_one_eq_convolution_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.convolution_one_eq_convolution_zeta\"><span class=\"name\">LSeries</span>.<span class=\"name\">convolution_one_eq_convolution_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">convolution</a> <span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">convolution</a> <span class=\"fn\">f</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a> <span class=\"fn\">x</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L90-L92","name":"LSeries.one_convolution_eq_zeta_convolution","line":90,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.one_convolution_eq_zeta_convolution","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#LSeries.one_convolution_eq_zeta_convolution\"><span class=\"name\">LSeries</span>.<span class=\"name\">one_convolution_eq_zeta_convolution</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">convolution</a> <span class=\"fn\">1</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Convolution.html#LSeries.convolution\">convolution</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">ArithmeticFunction.zeta</a> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L86-L88","name":"ArithmeticFunction.const_one_eq_zeta","line":86,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.const_one_eq_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.const_one_eq_zeta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">const_one_eq_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.zeta\">zeta</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L69-L72","name":"ArithmeticFunction.abscissaOfAbsConv_moebius","line":69,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_moebius","doc":"The abscissa of absolute convergence of the L-series of the Möbius function is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.abscissaOfAbsConv_moebius\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">abscissaOfAbsConv_moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/LSeries/Convergence.html#LSeries.abscissaOfAbsConv\">LSeries.abscissaOfAbsConv</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">moebius</a> <span class=\"fn\">n</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L61-L67","name":"ArithmeticFunction.LSeriesSummable_moebius_iff","line":61,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_moebius_iff","doc":"The L-series of the Möbius function converges absolutely at `s` if and only if `re s > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.LSeriesSummable_moebius_iff\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">LSeriesSummable_moebius_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">moebius</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L54-L59","name":"ArithmeticFunction.not_LSeriesSummable_moebius_at_one","line":54,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.not_LSeriesSummable_moebius_at_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.not_LSeriesSummable_moebius_at_one\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">not_LSeriesSummable_moebius_at_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.moebius\">moebius</a> <span class=\"fn\">n</span>)</span></span>)</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Dirichlet.lean#L36-L39","name":"ArithmeticFunction.one_eq_delta","line":36,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.one_eq_delta","doc":"`δ` is the function underlying the arithmetic function `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Dirichlet.html#ArithmeticFunction.one_eq_delta\"><span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_eq_delta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries.delta\">LSeries.delta</a></div></div>"}]}