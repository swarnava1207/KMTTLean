{"name":"Mathlib.Tactic.ExistsI","instances":[],"imports":["Init","Mathlib.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/ExistsI.lean#L32-L33","name":"Mathlib.Tactic.«tacticExistsi_,,»","line":32,"kind":"def","docLink":"./Mathlib/Tactic/ExistsI.html#Mathlib.Tactic.«tacticExistsi_,,»","doc":"`existsi e₁, e₂, ⋯` applies the tactic `refine ⟨e₁, e₂, ⋯, ?_⟩`. It's purpose is to instantiate\nexistential quantifiers.\n\nExamples:\n\n```lean\nexample : ∃ x : Nat, x = x := by\n  existsi 42\n  rfl\n\nexample : ∃ x : Nat, ∃ y : Nat, x = y := by\n  existsi 42, 42\n  rfl\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ExistsI.html#Mathlib.Tactic.«tacticExistsi_,,»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«tacticExistsi_,,»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}