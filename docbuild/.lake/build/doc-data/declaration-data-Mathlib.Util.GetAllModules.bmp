{"name":"Mathlib.Util.GetAllModules","instances":[],"imports":["Init","Mathlib.Init","Lean.Util.Path"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/GetAllModules.lean#L48-L55","name":"getAllModulesSorted","line":48,"kind":"def","docLink":"./Mathlib/Util/GetAllModules.html#getAllModulesSorted","doc":"Like `getAllFiles`, but return an array of *module* names instead,\ni.e. names of the form `Mathlib.Algebra.Algebra.Basic`.\nIn addition, these names are sorted in a platform-independent order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/GetAllModules.html#getAllModulesSorted\"><span class=\"name\">getAllModulesSorted</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">git</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ml</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/GetAllModules.lean#L21-L46","name":"getAllFiles","line":21,"kind":"def","docLink":"./Mathlib/Util/GetAllModules.html#getAllFiles","doc":"`getAllFiles git ml` takes all `.lean` files in the directory `ml`\n(recursing into sub-directories) and returns the `Array` of `String`s\n```\n#[file₁, ..., fileₙ]\n```\nof all their file names. These are not sorted in general.\n\nThe input `git` is a `Bool`ean flag:\n* `true` means that the command uses `git ls-files` to find the relevant files;\n* `false` means that the command recursively scans all dirs searching for `.lean` files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/GetAllModules.html#getAllFiles\"><span class=\"name\">getAllFiles</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">git</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ml</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span></div></div>"}]}