{"name":"Mathlib.MeasureTheory.SetAlgebra","instances":[],"imports":["Init","Mathlib.Data.Finite.Prod","Mathlib.MeasureTheory.SetSemiring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L216-L235","name":"MeasureTheory.countable_generateSetAlgebra","line":216,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.countable_generateSetAlgebra","doc":"If a family of sets is countable then so is the algebra of sets generated by it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.countable_generateSetAlgebra\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">countable_generateSetAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span>)</span>.<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L172-L214","name":"MeasureTheory.mem_generateSetAlgebra_elim","line":172,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.mem_generateSetAlgebra_elim","doc":"If a set belongs to the algebra of sets generated by `𝒜` then it can be written as a finite\nunion of finite intersections of sets which are in `𝒜` or have their complement in `𝒜`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.mem_generateSetAlgebra_elim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">mem_generateSetAlgebra_elim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_mem</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">A</span>, <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">A</span>, <span class=\"fn\">∀ <span class=\"fn\">t</span> ∈ <span class=\"fn\">a</span>, <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">t</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ <span class=\"fn\">a</span> ∈ <span class=\"fn\">A</span>, <span class=\"fn\">⋂ <span class=\"fn\">t</span> ∈ <span class=\"fn\">a</span>, <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L166-L168","name":"MeasureTheory.IsSetAlgebra.generateSetAlgebra_eq","line":166,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.generateSetAlgebra_eq","doc":"If `𝒜` is an algebra of sets, then it is equal to the algebra generated by itself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.generateSetAlgebra_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">generateSetAlgebra_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L162-L164","name":"MeasureTheory.IsSetAlgebra.generateSetAlgebra_subset_self","line":162,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.generateSetAlgebra_subset_self","doc":"If `𝒜` is an algebra of sets, then it contains the algebra generated by itself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.generateSetAlgebra_subset_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">generateSetAlgebra_subset_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L151-L160","name":"MeasureTheory.IsSetAlgebra.generateSetAlgebra_subset","line":151,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.generateSetAlgebra_subset","doc":"If a family of sets `𝒜` is contained in an algebra of sets `ℬ`, then so is the algebra of sets\ngenerated by `𝒜`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.generateSetAlgebra_subset\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">generateSetAlgebra_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜 </span><span class=\"fn\">ℬ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">𝒜</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">ℬ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℬ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">ℬ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">ℬ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L138-L147","name":"MeasureTheory.generateSetAlgebra_mono","line":138,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra_mono","doc":"If a family of sets `𝒜` is contained in `ℬ`, then the algebra of sets generated by `𝒜`\nis contained in the one generated by `ℬ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateSetAlgebra_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜 </span><span class=\"fn\">ℬ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">𝒜</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">ℬ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">ℬ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L120-L136","name":"MeasureTheory.generateFrom_generateSetAlgebra_eq","line":120,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateFrom_generateSetAlgebra_eq","doc":"The measurable space generated by a family of sets `𝒜` is the same as the one generated\nby the algebra of sets generated by `𝒜`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateFrom_generateSetAlgebra_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateFrom_generateSetAlgebra_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace.generateFrom\">MeasurableSpace.generateFrom</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace.generateFrom\">MeasurableSpace.generateFrom</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L116-L118","name":"MeasureTheory.self_subset_generateSetAlgebra","line":116,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.self_subset_generateSetAlgebra","doc":"The algebra of sets generated by `𝒜` contains `𝒜`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.self_subset_generateSetAlgebra\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">self_subset_generateSetAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">𝒜</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L109-L114","name":"MeasureTheory.isSetAlgebra_generateSetAlgebra","line":109,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.isSetAlgebra_generateSetAlgebra","doc":"The algebra of sets generated by a family of sets is an algebra of sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.isSetAlgebra_generateSetAlgebra\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isSetAlgebra_generateSetAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L106-L107","name":"MeasureTheory.generateSetAlgebra.union","line":106,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateSetAlgebra</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> (<span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L105-L105","name":"MeasureTheory.generateSetAlgebra.compl","line":105,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.compl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.compl\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateSetAlgebra</span>.<span class=\"name\">compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L104-L104","name":"MeasureTheory.generateSetAlgebra.empty","line":104,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateSetAlgebra</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L103-L103","name":"MeasureTheory.generateSetAlgebra.base","line":103,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra.base\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateSetAlgebra</span>.<span class=\"name\">base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_mem</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\">generateSetAlgebra</a> <span class=\"fn\">𝒜</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L101-L107","name":"MeasureTheory.generateSetAlgebra","line":101,"kind":"inductive","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra","doc":"`generateSetAlgebra 𝒜` is the smallest algebra of sets containing `𝒜`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.generateSetAlgebra\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">generateSetAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L86-L93","name":"MeasureTheory.IsSetAlgebra.biInter_mem","line":86,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.biInter_mem","doc":"An algebra of sets is closed by finite intersections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.biInter_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">biInter_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋂ <span class=\"fn\">i</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L82-L84","name":"MeasureTheory.IsSetAlgebra.biUnion_mem","line":82,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.biUnion_mem","doc":"An algebra of sets is closed by finite unions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.biUnion_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">biUnion_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ <span class=\"fn\">i</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L76-L80","name":"MeasureTheory.IsSetAlgebra.isSetRing","line":76,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.isSetRing","doc":"An algebra of sets is a ring of sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.isSetRing\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">isSetRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetRing\">IsSetRing</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L72-L74","name":"MeasureTheory.IsSetAlgebra.diff_mem","line":72,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.diff_mem","doc":"An algebra of sets is closed by difference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.diff_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">diff_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_mem</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t_mem</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L66-L70","name":"MeasureTheory.IsSetAlgebra.inter_mem","line":66,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.inter_mem","doc":"An algebra of sets is closed by intersection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.inter_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">inter_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_mem</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t_mem</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L62-L64","name":"MeasureTheory.IsSetAlgebra.univ_mem","line":62,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.univ_mem","doc":"An algebra of sets contains the whole set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.univ_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">univ_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L58-L58","name":"MeasureTheory.IsSetAlgebra.union_mem","line":58,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.union_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.union_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">union_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> → <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> → <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L57-L57","name":"MeasureTheory.IsSetAlgebra.compl_mem","line":57,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.compl_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.compl_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">compl_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> → <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L56-L56","name":"MeasureTheory.IsSetAlgebra.empty_mem","line":56,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.empty_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.empty_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">empty_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L55-L55","name":"MeasureTheory.IsSetAlgebra.mk","line":55,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra.mk\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">empty_mem</span> : <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compl_mem</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> → <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union_mem</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> → <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> → <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\">IsSetAlgebra</a> <span class=\"fn\">𝒜</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/SetAlgebra.lean#L52-L58","name":"MeasureTheory.IsSetAlgebra","line":52,"kind":"structure","docLink":"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra","doc":"An algebra of sets is a family of sets containing the empty set and closed by complement and\nunion. Consequently it is also closed by difference (see `IsSetAlgebra.diff_mem`) and intersection\n(see `IsSetAlgebra.inter_mem`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/SetAlgebra.html#MeasureTheory.IsSetAlgebra\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsSetAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}