{"name":"Mathlib.Data.Finset.Slice","instances":[],"imports":["Init","Mathlib.Data.Fintype.Powerset","Mathlib.Order.Antichain","Mathlib.Order.Interval.Finset.Nat","Mathlib.Algebra.BigOperators.Group.Finset.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L146-L150","name":"Finset.sum_card_slice","line":146,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.sum_card_slice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.sum_card_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">sum_card_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">r</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Iic\">Iic</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span>)</span></span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r</span>)</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L141-L144","name":"Finset.biUnion_slice","line":141,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.biUnion_slice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.biUnion_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">biUnion_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Iic\">Iic</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finset/Union.html#Finset.biUnion\">biUnion</a></span> <span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L136-L137","name":"Finset.pairwiseDisjoint_slice","line":136,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.pairwiseDisjoint_slice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.pairwiseDisjoint_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">pairwiseDisjoint_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L132-L134","name":"Finset.ne_of_mem_slice","line":132,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.ne_of_mem_slice","doc":"Elements in distinct slices must be distinct. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.ne_of_mem_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">ne_of_mem_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A₁ </span><span class=\"fn\">A₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">A₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">A₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">r₂</span> → <span class=\"fn\">A₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">A₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L129-L130","name":"Finset.eq_of_mem_slice","line":129,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.eq_of_mem_slice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.eq_of_mem_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">eq_of_mem_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">r₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L126-L127","name":"Finset.sized_slice","line":126,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.sized_slice","doc":"Everything in the `r`-th slice of `𝒜` has size `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.sized_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">sized_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L122-L124","name":"Finset.slice_subset","line":122,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.slice_subset","doc":"The `r`-th slice of `𝒜` is a subset of `𝒜`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice_subset\"><span class=\"name\">Finset</span>.<span class=\"name\">slice_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">𝒜</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L118-L120","name":"Finset.mem_slice","line":118,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.mem_slice","doc":"`A` is in the `r`-th slice of `𝒜` iff it's in `𝒜` and has cardinality `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.mem_slice\"><span class=\"name\">Finset</span>.<span class=\"name\">mem_slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\">slice</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">𝒜</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L115-L116","name":"Finset.«term_#_»","line":115,"kind":"def","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.«term_#_»","doc":"The `r`-th slice of a set family is the subset of its elements which have cardinality `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.«term_#_»\"><span class=\"name\">Finset</span>.<span class=\"name\">«term_#_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L112-L113","name":"Finset.slice","line":112,"kind":"def","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.slice","doc":"The `r`-th slice of a set family is the subset of its elements which have cardinality `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.slice\"><span class=\"name\">Finset</span>.<span class=\"name\">slice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L98-L101","name":"Set.Sized.card_le","line":98,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.card_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.card_le\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">card_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝒜</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L96-L96","name":"Set.Sized.subset_powersetCard_univ","line":96,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.subset_powersetCard_univ","doc":"**Alias** of the reverse direction of `Finset.subset_powersetCard_univ_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.subset_powersetCard_univ\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">subset_powersetCard_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span> → <span class=\"fn\">𝒜</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powersetCard\">Finset.powersetCard</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L93-L94","name":"Finset.subset_powersetCard_univ_iff","line":93,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Finset.subset_powersetCard_univ_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Finset.subset_powersetCard_univ_iff\"><span class=\"name\">Finset</span>.<span class=\"name\">subset_powersetCard_univ_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">𝒜</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powersetCard\">powersetCard</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">univ</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Set.Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">𝒜</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L82-L83","name":"Set.sized_powersetCard","line":82,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized_powersetCard","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized_powersetCard\"><span class=\"name\">Set</span>.<span class=\"name\">sized_powersetCard</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powersetCard\">Finset.powersetCard</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L79-L80","name":"Set.Sized.univ_mem_iff","line":79,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.univ_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.univ_mem_iff\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">univ_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L76-L77","name":"Set.Sized.empty_mem_iff","line":76,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.empty_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.empty_mem_iff\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">empty_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L73-L74","name":"Set.Sized.subsingleton'","line":73,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.subsingleton'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.subsingleton'\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">subsingleton'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Data/Set/Subsingleton.html#Set.Subsingleton\">Subsingleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L70-L71","name":"Set.Sized.subsingleton","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.subsingleton\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">0</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Data/Set/Subsingleton.html#Set.Subsingleton\">Subsingleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L67-L68","name":"Set.Sized.isAntichain","line":67,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.isAntichain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.isAntichain\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">isAntichain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Antichain.html#IsAntichain\">IsAntichain</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L63-L65","name":"Set.sized_iUnion₂","line":63,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized_iUnion₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized_iUnion₂\"><span class=\"name\">Set</span>.<span class=\"name\">sized_iUnion₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Sort</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">(⋃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">κ</span> <span class=\"fn\">i</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L57-L60","name":"Set.sized_iUnion","line":57,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized_iUnion\"><span class=\"name\">Set</span>.<span class=\"name\">sized_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">(⋃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L54-L54","name":"Set.sized.union","line":54,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized.union","doc":"**Alias** of the reverse direction of `Set.sized_union`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized.union\"><span class=\"name\">Set</span>.<span class=\"name\">sized</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L50-L52","name":"Set.sized_union","line":50,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized_union\"><span class=\"name\">Set</span>.<span class=\"name\">sized_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">B</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L48-L48","name":"Set.sized_singleton","line":48,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized_singleton\"><span class=\"name\">Set</span>.<span class=\"name\">sized_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">s</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L47-L47","name":"Set.sized_empty","line":47,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.sized_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.sized_empty\"><span class=\"name\">Set</span>.<span class=\"name\">sized_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L45-L45","name":"Set.Sized.mono","line":45,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized.mono\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hB</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\">Sized</a> <span class=\"fn\">r</span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Slice.lean#L42-L43","name":"Set.Sized","line":42,"kind":"def","docLink":"./Mathlib/Data/Finset/Slice.html#Set.Sized","doc":"`Sized r A` means that every Finset in `A` has size `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Slice.html#Set.Sized\"><span class=\"name\">Set</span>.<span class=\"name\">Sized</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}