{"name":"Mathlib.Algebra.Notation.Prod","instances":[{"typeNames":["Prod"],"name":"Prod.instOne","className":"One"},{"typeNames":["Prod"],"name":"Prod.instZero","className":"Zero"},{"typeNames":["Prod"],"name":"Prod.instMul","className":"Mul"},{"typeNames":["Prod"],"name":"Prod.instAdd","className":"Add"},{"typeNames":["Prod"],"name":"Prod.instInv","className":"Inv"},{"typeNames":["Prod"],"name":"Prod.instNeg","className":"Neg"},{"typeNames":["Prod"],"name":"Prod.instDiv","className":"Div"},{"typeNames":["Prod"],"name":"Prod.instSub","className":"Sub"},{"typeNames":["Prod"],"name":"Prod.instSMul","className":"SMul"},{"typeNames":["Prod"],"name":"Prod.instVAdd","className":"VAdd"},{"typeNames":["Prod"],"name":"Prod.instPow","className":"Pow"}],"imports":["Init","Mathlib.Util.AssertExists","Mathlib.Algebra.Notation.Defs","Mathlib.Data.Prod.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L169-L170","name":"Prod.pow_swap","line":169,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_swap\"><span class=\"name\">Prod</span>.<span class=\"name\">pow_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">β</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L166-L167","name":"Prod.pow_def","line":166,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_def\"><span class=\"name\">Prod</span>.<span class=\"name\">pow_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">β</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L163-L164","name":"Prod.pow_mk","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">pow_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">β</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L157-L158","name":"Prod.pow_snd","line":157,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">pow_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">β</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L154-L155","name":"Prod.pow_fst","line":154,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.pow_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">pow_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">β</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L151-L152","name":"Prod.instPow","line":151,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instPow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instPow\"><span class=\"name\">Prod</span>.<span class=\"name\">instPow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">β</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>) <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L143-L143","name":"Prod.vadd_swap","line":143,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_swap\"><span class=\"name\">Prod</span>.<span class=\"name\">vadd_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L143-L143","name":"Prod.smul_swap","line":143,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_swap\"><span class=\"name\">Prod</span>.<span class=\"name\">smul_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L140-L140","name":"Prod.vadd_def","line":140,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_def\"><span class=\"name\">Prod</span>.<span class=\"name\">vadd_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L140-L141","name":"Prod.smul_def","line":140,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_def\"><span class=\"name\">Prod</span>.<span class=\"name\">smul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L137-L137","name":"Prod.vadd_mk","line":137,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">vadd_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L137-L138","name":"Prod.smul_mk","line":137,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">smul_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">c</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L135-L135","name":"Prod.vadd_snd","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">vadd_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L135-L135","name":"Prod.smul_snd","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">smul_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L133-L133","name":"Prod.vadd_fst","line":133,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.vadd_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">vadd_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L133-L133","name":"Prod.smul_fst","line":133,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.smul_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">smul_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L130-L130","name":"Prod.instVAdd","line":130,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instVAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instVAdd\"><span class=\"name\">Prod</span>.<span class=\"name\">instVAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">M</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L130-L131","name":"Prod.instSMul","line":130,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instSMul\"><span class=\"name\">Prod</span>.<span class=\"name\">instSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">M</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L122-L122","name":"Prod.sub_def","line":122,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.sub_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.sub_def\"><span class=\"name\">Prod</span>.<span class=\"name\">sub_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L122-L122","name":"Prod.div_def","line":122,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.div_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.div_def\"><span class=\"name\">Prod</span>.<span class=\"name\">div_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L119-L119","name":"Prod.swap_sub","line":119,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_sub\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L119-L120","name":"Prod.swap_div","line":119,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_div\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L116-L116","name":"Prod.mk_sub_mk","line":116,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_sub_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_sub_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_sub_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L116-L117","name":"Prod.mk_div_mk","line":116,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_div_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_div_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_div_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L113-L113","name":"Prod.snd_sub","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_sub\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L113-L114","name":"Prod.snd_div","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_div\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L110-L110","name":"Prod.fst_sub","line":110,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_sub\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L110-L111","name":"Prod.fst_div","line":110,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_div\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L106-L106","name":"Prod.instSub","line":106,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instSub\"><span class=\"name\">Prod</span>.<span class=\"name\">instSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> (<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L106-L108","name":"Prod.instDiv","line":106,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instDiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instDiv\"><span class=\"name\">Prod</span>.<span class=\"name\">instDiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> (<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L97-L97","name":"Prod.swap_neg","line":97,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_neg\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">p</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L97-L98","name":"Prod.swap_inv","line":97,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_inv\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L94-L94","name":"Prod.neg_mk","line":94,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.neg_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.neg_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">neg_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L94-L95","name":"Prod.inv_mk","line":94,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.inv_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.inv_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">inv_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L91-L91","name":"Prod.snd_neg","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_neg\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">p</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">p</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L91-L92","name":"Prod.snd_inv","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_inv\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L88-L88","name":"Prod.fst_neg","line":88,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_neg\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">p</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L88-L89","name":"Prod.fst_inv","line":88,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_inv\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L84-L84","name":"Prod.instNeg","line":84,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instNeg\"><span class=\"name\">Prod</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> (<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L84-L86","name":"Prod.instInv","line":84,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instInv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instInv\"><span class=\"name\">Prod</span>.<span class=\"name\">instInv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> (<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">H</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L75-L75","name":"Prod.add_def","line":75,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.add_def\"><span class=\"name\">Prod</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">q</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">q</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L75-L76","name":"Prod.mul_def","line":75,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mul_def\"><span class=\"name\">Prod</span>.<span class=\"name\">mul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">q</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">q</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L72-L72","name":"Prod.swap_add","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_add\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">q</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L72-L73","name":"Prod.swap_mul","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_mul\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span>).<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L69-L69","name":"Prod.mk_add_mk","line":69,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_add_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_add_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_add_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L69-L70","name":"Prod.mk_mul_mk","line":69,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_mul_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_mul_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_mul_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L66-L66","name":"Prod.snd_add","line":66,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_add\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">q</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">q</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L66-L67","name":"Prod.snd_mul","line":66,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_mul\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span>).2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">q</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L63-L63","name":"Prod.fst_add","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_add\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">q</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">q</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L63-L64","name":"Prod.fst_mul","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_mul\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span>).1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">q</span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L59-L59","name":"Prod.instAdd","line":59,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instAdd\"><span class=\"name\">Prod</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> (<span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L59-L61","name":"Prod.instMul","line":59,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instMul\"><span class=\"name\">Prod</span>.<span class=\"name\">instMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> (<span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L49-L49","name":"Prod.swap_zero","line":49,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_zero\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L49-L51","name":"Prod.swap_one","line":49,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.swap_one\"><span class=\"name\">Prod</span>.<span class=\"name\">swap_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L46-L46","name":"Prod.mk_eq_zero","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_eq_zero\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L46-L47","name":"Prod.mk_eq_one","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_eq_one\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L43-L43","name":"Prod.mk_zero_zero","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_zero_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_zero_zero\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_zero_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L43-L44","name":"Prod.mk_one_one","line":43,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_one_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.mk_one_one\"><span class=\"name\">Prod</span>.<span class=\"name\">mk_one_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L39-L39","name":"Prod.zero_eq_mk","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.zero_eq_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.zero_eq_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">zero_eq_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L39-L41","name":"Prod.one_eq_mk","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.one_eq_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.one_eq_mk\"><span class=\"name\">Prod</span>.<span class=\"name\">one_eq_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L35-L35","name":"Prod.snd_zero","line":35,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_zero\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L35-L37","name":"Prod.snd_one","line":35,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.snd_one\"><span class=\"name\">Prod</span>.<span class=\"name\">snd_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L31-L31","name":"Prod.fst_zero","line":31,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_zero\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L31-L33","name":"Prod.fst_one","line":31,"kind":"theorem","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.fst_one\"><span class=\"name\">Prod</span>.<span class=\"name\">fst_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L27-L27","name":"Prod.instZero","line":27,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instZero\"><span class=\"name\">Prod</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> (<span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Notation/Prod.lean#L27-L29","name":"Prod.instOne","line":27,"kind":"instance","docLink":"./Mathlib/Algebra/Notation/Prod.html#Prod.instOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Notation/Prod.html#Prod.instOne\"><span class=\"name\">Prod</span>.<span class=\"name\">instOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> (<span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">N</span>)</span></div></div>"}]}