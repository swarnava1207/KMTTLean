{"name":"Mathlib.AlgebraicTopology.FundamentalGroupoid.SimplyConnected","instances":[{"typeNames":["Path.Homotopic.Quotient"],"name":"SimplyConnectedSpace.instSubsingletonQuotient","className":"Subsingleton"},{"typeNames":[],"name":"SimplyConnectedSpace.instPathConnectedSpace","className":"PathConnectedSpace"},{"typeNames":[],"name":"SimplyConnectedSpace.ofContractible","className":"SimplyConnectedSpace"}],"imports":["Init","Mathlib.AlgebraicTopology.FundamentalGroupoid.InducedMaps","Mathlib.Topology.Homotopy.Contractible","Mathlib.CategoryTheory.PUnit","Mathlib.AlgebraicTopology.FundamentalGroupoid.PUnit"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L85-L90","name":"simply_connected_iff_paths_homotopic'","line":85,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_iff_paths_homotopic'","doc":"Another version of `simply_connected_iff_paths_homotopic` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_iff_paths_homotopic'\"><span class=\"name\">simply_connected_iff_paths_homotopic'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#PathConnectedSpace\">PathConnectedSpace</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">Y</span>} (<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L76-L83","name":"simply_connected_iff_paths_homotopic","line":76,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_iff_paths_homotopic","doc":"A space is simply connected iff it is path connected, and there is at most one path\nup to homotopy between any two points. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_iff_paths_homotopic\"><span class=\"name\">simply_connected_iff_paths_homotopic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#PathConnectedSpace\">PathConnectedSpace</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">Y</span>), <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L65-L70","name":"SimplyConnectedSpace.ofContractible","line":65,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.ofContractible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.ofContractible\"><span class=\"name\">SimplyConnectedSpace</span>.<span class=\"name\">ofContractible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Contractible.html#ContractibleSpace\">ContractibleSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L61-L63","name":"SimplyConnectedSpace.paths_homotopic","line":61,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.paths_homotopic","doc":"In a simply connected space, any two paths are homotopic "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.paths_homotopic\"><span class=\"name\">SimplyConnectedSpace</span>.<span class=\"name\">paths_homotopic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L56-L59","name":"SimplyConnectedSpace.instPathConnectedSpace","line":56,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.instPathConnectedSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.instPathConnectedSpace\"><span class=\"name\">SimplyConnectedSpace</span>.<span class=\"name\">instPathConnectedSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#PathConnectedSpace\">PathConnectedSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L50-L52","name":"SimplyConnectedSpace.instSubsingletonQuotient","line":50,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.instSubsingletonQuotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.instSubsingletonQuotient\"><span class=\"name\">SimplyConnectedSpace</span>.<span class=\"name\">instSubsingletonQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L38-L44","name":"simply_connected_iff_unique_homotopic","line":38,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_iff_unique_homotopic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_iff_unique_homotopic\"><span class=\"name\">simply_connected_iff_unique_homotopic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L36-L36","name":"SimplyConnectedSpace.equiv_unit","line":36,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.equiv_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.equiv_unit\"><span class=\"name\">SimplyConnectedSpace</span>.<span class=\"name\">equiv_unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid\">FundamentalGroupoid</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L35-L35","name":"SimplyConnectedSpace.mk","line":35,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace.mk\"><span class=\"name\">SimplyConnectedSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">equiv_unit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid\">FundamentalGroupoid</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L34-L34","name":"simply_connected_def","line":34,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#simply_connected_def\"><span class=\"name\">simply_connected_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\">SimplyConnectedSpace</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.html#FundamentalGroupoid\">FundamentalGroupoid</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.lean#L33-L36","name":"SimplyConnectedSpace","line":33,"kind":"class","docLink":"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace","doc":"A simply connected space is one whose fundamental groupoid is equivalent to `Discrete Unit` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/FundamentalGroupoid/SimplyConnected.html#SimplyConnectedSpace\"><span class=\"name\">SimplyConnectedSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}