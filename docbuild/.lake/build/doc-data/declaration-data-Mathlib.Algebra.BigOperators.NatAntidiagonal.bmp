{"name":"Mathlib.Algebra.BigOperators.NatAntidiagonal","instances":[],"imports":["Init","Mathlib.Data.Finset.NatAntidiagonal","Mathlib.Algebra.BigOperators.Group.Finset.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L57-L58","name":"Finset.Nat.sum_antidiagonal_eq_sum_range_succ","line":57,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_eq_sum_range_succ","doc":"This lemma matches more generally than\n`Finset.Nat.sum_antidiagonal_eq_sum_range_succ_mk` when using `rw ← `."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_eq_sum_range_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sum_antidiagonal_eq_sum_range_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">ij</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L55-L61","name":"Finset.Nat.prod_antidiagonal_eq_prod_range_succ","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_eq_prod_range_succ","doc":"This lemma matches more generally than `Finset.Nat.prod_antidiagonal_eq_prod_range_succ_mk` when\nusing `rw ← `. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_eq_prod_range_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">prod_antidiagonal_eq_prod_range_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">ij</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L50-L50","name":"Finset.Nat.sum_antidiagonal_eq_sum_range_succ_mk","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_eq_sum_range_succ_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_eq_sum_range_succ_mk\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sum_antidiagonal_eq_sum_range_succ_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">ij</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">ij</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L50-L53","name":"Finset.Nat.prod_antidiagonal_eq_prod_range_succ_mk","line":50,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_eq_prod_range_succ_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_eq_prod_range_succ_mk\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">prod_antidiagonal_eq_prod_range_succ_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">ij</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">ij</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L45-L45","name":"Finset.Nat.sum_antidiagonal_subst","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_subst\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sum_antidiagonal_subst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span> (<span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L45-L48","name":"Finset.Nat.prod_antidiagonal_subst","line":45,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_subst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_subst\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">prod_antidiagonal_subst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span> (<span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L41-L43","name":"Finset.Nat.sum_antidiagonal_succ'","line":41,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_succ'\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sum_antidiagonal_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L36-L39","name":"Finset.Nat.prod_antidiagonal_succ'","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_succ'\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">prod_antidiagonal_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L30-L30","name":"Finset.Nat.sum_antidiagonal_swap","line":30,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_swap\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sum_antidiagonal_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L30-L34","name":"Finset.Nat.prod_antidiagonal_swap","line":30,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_swap\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">prod_antidiagonal_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L26-L28","name":"Finset.Nat.sum_antidiagonal_succ","line":26,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.sum_antidiagonal_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sum_antidiagonal_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/BigOperators/NatAntidiagonal.lean#L21-L24","name":"Finset.Nat.prod_antidiagonal_succ","line":21,"kind":"theorem","docLink":"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/BigOperators/NatAntidiagonal.html#Finset.Nat.prod_antidiagonal_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">prod_antidiagonal_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"}]}