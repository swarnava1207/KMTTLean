{"name":"Mathlib.RingTheory.KrullDimension.Basic","instances":[{"typeNames":["OfNat.ofNat"],"name":"instKrullDimLEOfNatNatOfSubsingleton","className":"Order.KrullDimLE"},{"typeNames":[],"name":"instIsMaximalOfIsPrimeOfKrullDimLEOfNatNat","className":"Ideal.IsMaximal"},{"typeNames":["OfNat.ofNat"],"name":"instKrullDimLEOfNatNat","className":"Order.KrullDimLE"}],"imports":["Init","Mathlib.Algebra.MvPolynomial.CommRing","Mathlib.Algebra.Polynomial.Basic","Mathlib.RingTheory.Ideal.Quotient.Defs","Mathlib.RingTheory.Ideal.MinimalPrime.Basic","Mathlib.RingTheory.Jacobson.Radical","Mathlib.RingTheory.Spectrum.Prime.Basic","Mathlib.Order.KrullDimension"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L162-L168","name":"Ring.KrullDimLE.mk₁'","line":162,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE.mk₁'","doc":"Alternative constructor for `Ring.KrullDimLE 1`, convenient for domains. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE.mk₁'\"><span class=\"name\">Ring</span>.<span class=\"name\">KrullDimLE</span>.<span class=\"name\">mk₁'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L155-L160","name":"Ring.krullDimLE_one_iff_of_noZeroDivisors","line":155,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_one_iff_of_noZeroDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_one_iff_of_noZeroDivisors\"><span class=\"name\">Ring</span>.<span class=\"name\">krullDimLE_one_iff_of_noZeroDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L146-L153","name":"Ring.krullDimLE_one_iff_of_isPrime_bot","line":146,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_one_iff_of_isPrime_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_one_iff_of_isPrime_bot\"><span class=\"name\">Ring</span>.<span class=\"name\">krullDimLE_one_iff_of_isPrime_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L142-L144","name":"Ring.KrullDimLE.mk₁","line":142,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE.mk₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE.mk₁\"><span class=\"name\">Ring</span>.<span class=\"name\">KrullDimLE</span>.<span class=\"name\">mk₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/MinimalPrime/Basic.html#minimalPrimes\">minimalPrimes</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L135-L140","name":"Ring.krullDimLE_one_iff","line":135,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_one_iff\"><span class=\"name\">Ring</span>.<span class=\"name\">krullDimLE_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/MinimalPrime/Basic.html#minimalPrimes\">minimalPrimes</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L133-L133","name":"instKrullDimLEOfNatNat","line":133,"kind":"instance","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#instKrullDimLEOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#instKrullDimLEOfNatNat\"><span class=\"name\">instKrullDimLEOfNatNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L123-L127","name":"Ring.jacobson_eq_nilradical_of_krullDimLE_zero","line":123,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.jacobson_eq_nilradical_of_krullDimLE_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.jacobson_eq_nilradical_of_krullDimLE_zero\"><span class=\"name\">Ring</span>.<span class=\"name\">jacobson_eq_nilradical_of_krullDimLE_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson/Radical.html#Ring.jacobson\">jacobson</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Nilpotent/Lemmas.html#nilradical\">nilradical</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L120-L121","name":"nilradical_le_jacobson","line":120,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#nilradical_le_jacobson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#nilradical_le_jacobson\"><span class=\"name\">nilradical_le_jacobson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Nilpotent/Lemmas.html#nilradical\">nilradical</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Jacobson/Radical.html#Ring.jacobson\">Ring.jacobson</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L116-L118","name":"Ideal.mem_minimalPrimes_iff_isPrime","line":116,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.mem_minimalPrimes_iff_isPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.mem_minimalPrimes_iff_isPrime\"><span class=\"name\">Ideal</span>.<span class=\"name\">mem_minimalPrimes_iff_isPrime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/MinimalPrime/Basic.html#minimalPrimes\">minimalPrimes</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L111-L114","name":"Ideal.mem_minimalPrimes_of_krullDimLE_zero","line":111,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.mem_minimalPrimes_of_krullDimLE_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.mem_minimalPrimes_of_krullDimLE_zero\"><span class=\"name\">Ideal</span>.<span class=\"name\">mem_minimalPrimes_of_krullDimLE_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/MinimalPrime/Basic.html#minimalPrimes\">minimalPrimes</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L108-L109","name":"Ideal.isMaximal_iff_isPrime","line":108,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.isMaximal_iff_isPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.isMaximal_iff_isPrime\"><span class=\"name\">Ideal</span>.<span class=\"name\">isMaximal_iff_isPrime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L105-L106","name":"instIsMaximalOfIsPrimeOfKrullDimLEOfNatNat","line":105,"kind":"instance","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#instIsMaximalOfIsPrimeOfKrullDimLEOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#instIsMaximalOfIsPrimeOfKrullDimLEOfNatNat\"><span class=\"name\">instIsMaximalOfIsPrimeOfKrullDimLEOfNatNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L102-L103","name":"Ideal.isMaximal_of_isPrime","line":102,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.isMaximal_of_isPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ideal.isMaximal_of_isPrime\"><span class=\"name\">Ideal</span>.<span class=\"name\">isMaximal_of_isPrime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L99-L100","name":"Ring.KrullDimLE.mk₀","line":99,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE.mk₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE.mk₀\"><span class=\"name\">Ring</span>.<span class=\"name\">KrullDimLE</span>.<span class=\"name\">mk₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L93-L97","name":"Ring.krullDimLE_zero_iff","line":93,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.krullDimLE_zero_iff\"><span class=\"name\">Ring</span>.<span class=\"name\">krullDimLE_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.IsPrime\">IsPrime</a></span> → <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L91-L91","name":"instKrullDimLEOfNatNatOfSubsingleton","line":91,"kind":"instance","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#instKrullDimLEOfNatNatOfSubsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#instKrullDimLEOfNatNatOfSubsingleton\"><span class=\"name\">instKrullDimLEOfNatNatOfSubsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\">Ring.KrullDimLE</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L78-L80","name":"finiteRingKrullDim_iff_ne_bot_and_top","line":78,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#finiteRingKrullDim_iff_ne_bot_and_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#finiteRingKrullDim_iff_ne_bot_and_top\"><span class=\"name\">finiteRingKrullDim_iff_ne_bot_and_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#FiniteRingKrullDim\">FiniteRingKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L75-L76","name":"ringKrullDim_lt_top","line":75,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_lt_top\"><span class=\"name\">ringKrullDim_lt_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#FiniteRingKrullDim\">FiniteRingKrullDim</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L71-L73","name":"ringKrullDim_ne_top","line":71,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_ne_top\"><span class=\"name\">ringKrullDim_ne_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#FiniteRingKrullDim\">FiniteRingKrullDim</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L66-L69","name":"FiniteRingKrullDim","line":66,"kind":"def","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#FiniteRingKrullDim","doc":"A ring has finite Krull dimension if its `PrimeSpectrum` is\nfinite-dimensional (and non-empty). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#FiniteRingKrullDim\"><span class=\"name\">FiniteRingKrullDim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L64-L64","name":"RingEquiv.ringKrullDim","line":64,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#RingEquiv.ringKrullDim","doc":"**Alias** of `ringKrullDim_eq_of_ringEquiv`.\n\n---\n\nIf `R` and `S` are isomorphic, then `ringKrullDim R = ringKrullDim S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#RingEquiv.ringKrullDim\"><span class=\"name\">RingEquiv</span>.<span class=\"name\">ringKrullDim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">_root_.ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">_root_.ringKrullDim</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L58-L62","name":"ringKrullDim_eq_of_ringEquiv","line":58,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_eq_of_ringEquiv","doc":"If `R` and `S` are isomorphic, then `ringKrullDim R = ringKrullDim S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_eq_of_ringEquiv\"><span class=\"name\">ringKrullDim_eq_of_ringEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L53-L56","name":"ringKrullDim_quotient_le","line":53,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_quotient_le","doc":"If `I` is an ideal of `R`, then `ringKrullDim (R ⧸ I) ≤ ringKrullDim R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_quotient_le\"><span class=\"name\">ringKrullDim_quotient_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> (<span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">I</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L45-L51","name":"ringKrullDim_le_of_surjective","line":45,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_le_of_surjective","doc":"If `f : R →+* S` is surjective, then `ringKrullDim S ≤ ringKrullDim R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_le_of_surjective\"><span class=\"name\">ringKrullDim_le_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L41-L43","name":"ringKrullDim_nonneg_of_nontrivial","line":41,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_nonneg_of_nontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_nonneg_of_nontrivial\"><span class=\"name\">ringKrullDim_nonneg_of_nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L36-L39","name":"ringKrullDim_eq_bot_of_subsingleton","line":36,"kind":"theorem","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_eq_bot_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim_eq_bot_of_subsingleton\"><span class=\"name\">ringKrullDim_eq_bot_of_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\">ringKrullDim</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L30-L32","name":"Ring.KrullDimLE","line":30,"kind":"def","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE","doc":"Type class for rings with krull dimension at most `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#Ring.KrullDimLE\"><span class=\"name\">Ring</span>.<span class=\"name\">KrullDimLE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/KrullDimension/Basic.lean#L24-L28","name":"ringKrullDim","line":24,"kind":"def","docLink":"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim","doc":"The ring theoretic Krull dimension is the Krull dimension of its spectrum ordered by inclusion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/KrullDimension/Basic.html#ringKrullDim\"><span class=\"name\">ringKrullDim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithBot\">WithBot</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span></div></div>"}]}