{"name":"LeanSearchClient.Syntax","instances":[{"typeNames":["LeanSearchClient.SearchResult"],"name":"LeanSearchClient.instReprSearchResult","className":"Repr"},{"typeNames":["LeanSearchClient.SearchServer"],"name":"LeanSearchClient.instInhabitedSearchServer","className":"Inhabited"}],"imports":["Init","Lean.Elab.Tactic.Meta","Lean.Meta.Tactic.TryThis","LeanSearchClient.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L533-L544","name":"LeanSearchClient.searchTacticImpl","line":533,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTacticImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">searchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L530-L531","name":"LeanSearchClient.search_tactic","line":530,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.search_tactic","doc":"Search either [Moogle](https://www.moogle.ai/api/search) or [LeanSearch]((https://leansearch.net/)) from within Lean, depending on the option `leansearchclient.backend`.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n\nIn tactic mode, if the query string is not supplied, then [LeanStateSearch](https://premise-search.com) is queried based on the goal state.\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L494-L528","name":"LeanSearchClient.stateSearchTacticImpl","line":494,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchTacticImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">stateSearchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L475-L492","name":"LeanSearchClient.statesearch_search_tactic","line":475,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.statesearch_search_tactic","doc":"Search [LeanStateSearch](https://premise-search.com) from within Lean.\nYour current main goal is sent as query. The revision to search can be set\nusing the `statesearch.revision` option. The number of results can be set\nusing the `statesearch.queries` option.\n\nHint: If you want to modify the query, you need to use the web interface.\n\n```lean\nset_option statesearch.queries 1\nset_option statesearch.revision \"v4.16.0\"\n\nexample : 0 ≤ 1 := by\n  #statesearch\n  sorry\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.statesearch_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">statesearch_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L466-L473","name":"LeanSearchClient.moogleTacticImpl","line":466,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTacticImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L462-L464","name":"LeanSearchClient.moogle_search_tactic","line":462,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_tactic","doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L453-L460","name":"LeanSearchClient.leanSearchTacticImpl","line":453,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTacticImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L449-L451","name":"LeanSearchClient.leansearch_search_tactic","line":449,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_tactic","doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L434-L447","name":"LeanSearchClient.searchTermImpl","line":434,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTermImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">searchTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L431-L432","name":"LeanSearchClient.search_term","line":431,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.search_term","doc":"Search either [Moogle](https://www.moogle.ai/api/search) or [LeanSearch]((https://leansearch.net/)) from within Lean, depending on the option `leansearchclient.backend`.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n\nIn tactic mode, if the query string is not supplied, then [LeanStateSearch](https://premise-search.com) is queried based on the goal state.\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L420-L429","name":"LeanSearchClient.moogleTermImpl","line":420,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTermImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L417-L418","name":"LeanSearchClient.moogle_search_term","line":417,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_term","doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L406-L415","name":"LeanSearchClient.leanSearchTermImpl","line":406,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTermImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L403-L404","name":"LeanSearchClient.leansearch_search_term","line":403,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_term","doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L389-L400","name":"LeanSearchClient.searchCommandImpl","line":389,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.searchCommandImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.searchCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">searchCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L372-L388","name":"LeanSearchClient.search_cmd","line":372,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.search_cmd","doc":"Search either [Moogle](https://www.moogle.ai/api/search) or [LeanSearch]((https://leansearch.net/)) from within Lean, depending on the option `leansearchclient.backend`.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n\nIn tactic mode, if the query string is not supplied, then [LeanStateSearch](https://premise-search.com) is queried based on the goal state.\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L363-L370","name":"LeanSearchClient.moogleCommandImpl","line":363,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCommandImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L347-L361","name":"LeanSearchClient.moogle_search_cmd","line":347,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_cmd","doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L338-L345","name":"LeanSearchClient.leanSearchCommandImpl","line":338,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCommandImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L322-L336","name":"LeanSearchClient.leansearch_search_cmd","line":322,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_cmd","doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L295-L317","name":"LeanSearchClient.SearchServer.searchTacticSuggestions","line":295,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTacticSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTacticSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchTacticSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L286-L293","name":"LeanSearchClient.SearchServer.searchTermSuggestions","line":286,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTermSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTermSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchTermSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L278-L284","name":"LeanSearchClient.SearchServer.searchCommandSuggestions","line":278,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchCommandSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchCommandSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchCommandSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L273-L275","name":"LeanSearchClient.SearchServer.incompleteSearchQuery","line":273,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.incompleteSearchQuery","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.incompleteSearchQuery\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">incompleteSearchQuery</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L264-L271","name":"LeanSearchClient.SearchServer.getTacticSuggestionGroups","line":264,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTacticSuggestionGroups","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTacticSuggestionGroups\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getTacticSuggestionGroups</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L259-L262","name":"LeanSearchClient.SearchServer.getTermSuggestions","line":259,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTermSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTermSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getTermSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L254-L257","name":"LeanSearchClient.SearchServer.getCommandSuggestions","line":254,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getCommandSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getCommandSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getCommandSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L250-L250","name":"LeanSearchClient.instInhabitedSearchServer","line":250,"kind":"instance","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instInhabitedSearchServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instInhabitedSearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instInhabitedSearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L246-L248","name":"LeanSearchClient.moogleServer","line":246,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L242-L244","name":"LeanSearchClient.leanSearchServer","line":242,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L240-L240","name":"LeanSearchClient.SearchServer.queryNum","line":240,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.queryNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.queryNum\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">queryNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L239-L239","name":"LeanSearchClient.SearchServer.query","line":239,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.query","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.query\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">query</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L238-L238","name":"LeanSearchClient.SearchServer.cmd","line":238,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.cmd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">cmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L237-L237","name":"LeanSearchClient.SearchServer.url","line":237,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.url","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.url\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">url</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L236-L236","name":"LeanSearchClient.SearchServer.name","line":236,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.name\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L235-L235","name":"LeanSearchClient.SearchServer.mk","line":235,"kind":"ctor","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.mk\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name </span><span class=\"fn\">url </span><span class=\"fn\">cmd</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">query</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queryNum</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L235-L240","name":"LeanSearchClient.SearchServer","line":235,"kind":"structure","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L222-L233","name":"LeanSearchClient.checkTactic","line":222,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.checkTactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.checkTactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">checkTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L213-L220","name":"LeanSearchClient.defaultTerm","line":213,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.defaultTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.defaultTerm\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">defaultTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedType?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L208-L211","name":"LeanSearchClient.queryStateSearch","line":208,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryStateSearch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryStateSearch\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryStateSearch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rev</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L202-L206","name":"LeanSearchClient.queryMoogle","line":202,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryMoogle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryMoogle\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryMoogle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L197-L200","name":"LeanSearchClient.queryLeanSearch","line":197,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryLeanSearch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryLeanSearch\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryLeanSearch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L186-L192","name":"LeanSearchClient.SearchResult.toTacticSuggestions","line":186,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTacticSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTacticSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toTacticSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sr</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L181-L184","name":"LeanSearchClient.SearchResult.toTermSuggestion","line":181,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTermSuggestion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTermSuggestion\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toTermSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sr</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L175-L179","name":"LeanSearchClient.SearchResult.toCommandSuggestion","line":175,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toCommandSuggestion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toCommandSuggestion\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toCommandSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sr</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L165-L173","name":"LeanSearchClient.SearchResult.ofStateSearchJson?","line":165,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofStateSearchJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofStateSearchJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofStateSearchJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L156-L163","name":"LeanSearchClient.SearchResult.ofLoogleJson?","line":156,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLoogleJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLoogleJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofLoogleJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L140-L154","name":"LeanSearchClient.SearchResult.ofMoogleJson?","line":140,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofMoogleJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofMoogleJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofMoogleJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L129-L138","name":"LeanSearchClient.SearchResult.ofLeanSearchJson?","line":129,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLeanSearchJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLeanSearchJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofLeanSearchJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L125-L125","name":"LeanSearchClient.instReprSearchResult","line":125,"kind":"instance","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instReprSearchResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L124-L124","name":"LeanSearchClient.SearchResult.kind?","line":124,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.kind?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.kind?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">kind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L123-L123","name":"LeanSearchClient.SearchResult.doc_url?","line":123,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.doc_url?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.doc_url?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">doc_url?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L122-L122","name":"LeanSearchClient.SearchResult.docString?","line":122,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.docString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.docString?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">docString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L121-L121","name":"LeanSearchClient.SearchResult.type?","line":121,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.type?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.type?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L120-L120","name":"LeanSearchClient.SearchResult.name","line":120,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.name\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L119-L119","name":"LeanSearchClient.SearchResult.mk","line":119,"kind":"ctor","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.mk\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type? </span><span class=\"fn\">docString? </span><span class=\"fn\">doc_url? </span><span class=\"fn\">kind?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L119-L125","name":"LeanSearchClient.SearchResult","line":119,"kind":"structure","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L94-L117","name":"LeanSearchClient.getStateSearchQueryJson","line":94,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getStateSearchQueryJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getStateSearchQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getStateSearchQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rev</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L71-L92","name":"LeanSearchClient.getMoogleQueryJson","line":71,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getMoogleQueryJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getMoogleQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getMoogleQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L52-L69","name":"LeanSearchClient.getLeanSearchQueryJson","line":52,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getLeanSearchQueryJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getLeanSearchQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getLeanSearchQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L49-L50","name":"LeanSearchClient.stateSearchCache","line":49,"kind":"opaque","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">stateSearchCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L46-L47","name":"LeanSearchClient.moogleCache","line":46,"kind":"opaque","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L43-L44","name":"LeanSearchClient.leanSearchCache","line":43,"kind":"opaque","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/8d29bc2c3ebe1f863c2f02df816b4f3dd1b65226/LeanSearchClient/Syntax.lean#L40-L41","name":"LeanSearchClient.useragent","line":40,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.useragent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.useragent\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">useragent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"}]}