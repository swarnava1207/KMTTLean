{"name":"Mathlib.CategoryTheory.Sites.Coverage","instances":[{"typeNames":["CategoryTheory.Coverage"],"name":"CategoryTheory.Coverage.instCoeFunForallSetPresieve","className":"CoeFun"},{"typeNames":["CategoryTheory.Coverage"],"name":"CategoryTheory.Coverage.instPartialOrder","className":"PartialOrder"},{"typeNames":["CategoryTheory.Coverage"],"name":"CategoryTheory.Coverage.instSemilatticeSup","className":"SemilatticeSup"}],"imports":["Init","Mathlib.CategoryTheory.Sites.Sheaf"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L424-L429","name":"CategoryTheory.Presheaf.isSheaf_sup","line":424,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presheaf.isSheaf_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presheaf.isSheaf_sup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">isSheaf_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_4}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> (<span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">L</span>))</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L416-L422","name":"CategoryTheory.Presheaf.isSheaf_iff_isLimit_coverage","line":416,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presheaf.isSheaf_iff_isLimit_coverage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presheaf.isSheaf_iff_isLimit_coverage\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">isSheaf_iff_isLimit_coverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_4}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ ⦃<span class=\"fn\">X</span> : <span class=\"fn\">C</span>⦄, <span class=\"fn\">∀ <span class=\"fn\">R</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">X</span></span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">mapCone</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">Sieve.generate</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.cocone\">cocone</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.op\">op</a></span>)</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L396-L410","name":"CategoryTheory.Presieve.isSheaf_sup","line":396,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheaf_sup","doc":"A presheaf is a sheaf for the Grothendieck topology generated by a union of coverages iff it is a\nsheaf for the Grothendieck topology generated by each coverage separately.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheaf_sup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">isSheaf_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/SheafOfTypes.html#CategoryTheory.Presieve.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> (<span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">L</span>))</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/SheafOfTypes.html#CategoryTheory.Presieve.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/SheafOfTypes.html#CategoryTheory.Presieve.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L321-L394","name":"CategoryTheory.Presieve.isSheaf_coverage","line":321,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheaf_coverage","doc":"The main theorem of this file: Given a coverage `K` on `C`,\na `Type*`-valued presheaf on `C` is a sheaf for `K` if and only if it is a sheaf for\nthe associated Grothendieck topology.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheaf_coverage\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">isSheaf_coverage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/SheafOfTypes.html#CategoryTheory.Presieve.IsSheaf\">IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">Coverage.toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}, <span class=\"fn\">∀ <span class=\"fn\">R</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">X</span></span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">IsSheafFor</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L307-L313","name":"CategoryTheory.Coverage.mem_toGrothendieck_sieves_of_superset","line":307,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.mem_toGrothendieck_sieves_of_superset","doc":"Any sieve that contains a covering presieve for a coverage is a covering sieve for the associated\nGrothendieck topology.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.mem_toGrothendieck_sieves_of_superset\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">mem_toGrothendieck_sieves_of_superset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hR</span> : <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span>)</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L302-L305","name":"CategoryTheory.Coverage.sup_covering","line":302,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.sup_covering","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.sup_covering\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">sup_covering</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>).<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L288-L300","name":"CategoryTheory.Coverage.instSemilatticeSup","line":288,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instSemilatticeSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instSemilatticeSup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">instSemilatticeSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L271-L286","name":"CategoryTheory.Coverage.toGrothendieck_eq_sInf","line":271,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck_eq_sInf","doc":"An alternative characterization of the Grothendieck topology associated to a coverage `K`:\nit is the infimum of all Grothendieck topologies whose associated coverage contains `K`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck_eq_sInf\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">toGrothendieck_eq_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">toGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet.sInf\">sInf</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">J</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck\">ofGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">J</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L249-L269","name":"CategoryTheory.Coverage.gi","line":249,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.gi","doc":"The two constructions `Coverage.toGrothendieck` and `Coverage.ofGrothendieck` form\na Galois insertion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.gi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">gi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection/Defs.html#GaloisInsertion\">GaloisInsertion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\">toGrothendieck</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck\">ofGrothendieck</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L241-L246","name":"CategoryTheory.Coverage.instPartialOrder","line":241,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instPartialOrder\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">instPartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L206-L239","name":"CategoryTheory.Coverage.toGrothendieck","line":206,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck","doc":"The Grothendieck topology associated to a coverage `K`.\nIt is defined *inductively* as follows:\n1. If `S` is a covering presieve for `K`, then the sieve generated by `S` is a covering\n  sieve for the associated Grothendieck topology.\n2. The top sieves are in the associated Grothendieck topology.\n3. Add all sieves required by the *local character* axiom of a Grothendieck topology.\n\nThe pullback compatibility condition for a coverage ensures that the\nassociated Grothendieck topology is pullback stable, and so an additional constructor\nin the inductive construction is not needed.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.toGrothendieck\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">toGrothendieck</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L197-L203","name":"CategoryTheory.Coverage.saturate_of_superset","line":197,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate_of_superset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.saturate_of_superset\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">saturate_of_superset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">X</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">X</span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L189-L195","name":"CategoryTheory.Coverage.eq_top_pullback","line":189,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.eq_top_pullback","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.eq_top_pullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">eq_top_pullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.pullback\">Sieve.pullback</a> <span class=\"fn\">f</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L184-L187","name":"CategoryTheory.Coverage.Saturate.transitive","line":184,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate.transitive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate.transitive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">Saturate</span>.<span class=\"name\">transitive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">X</span> <span class=\"fn\">R</span></span> → <span class=\"fn\"><span class=\"fn\">(∀ ⦃<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄ ⦃<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">Y</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.pullback\">Sieve.pullback</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">X</span> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L183-L183","name":"CategoryTheory.Coverage.Saturate.top","line":183,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate.top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate.top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">Saturate</span>.<span class=\"name\">top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L182-L182","name":"CategoryTheory.Coverage.Saturate.of","line":182,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">Saturate</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\">Saturate</a></span> <span class=\"fn\">X</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">Sieve.generate</a> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L177-L187","name":"CategoryTheory.Coverage.Saturate","line":177,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate","doc":"An auxiliary definition used to define the Grothendieck topology associated to a\ncoverage. See `Coverage.toGrothendieck`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.Saturate\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">Saturate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L174-L175","name":"CategoryTheory.Coverage.ofGrothendieck_iff","line":174,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">ofGrothendieck_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck\">ofGrothendieck</a> <span class=\"fn\">C</span> <span class=\"fn\">J</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">Sieve.generate</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L159-L172","name":"CategoryTheory.Coverage.ofGrothendieck","line":159,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck","doc":"Associate a coverage to any Grothendieck topology.\nIf `J` is a Grothendieck topology, and `K` is the associated coverage, then a presieve\n`S` is a covering presieve for `K` if and only if the sieve that it generates is a\ncovering sieve for `J`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ofGrothendieck\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">ofGrothendieck</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L155-L156","name":"CategoryTheory.Coverage.instCoeFunForallSetPresieve","line":155,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instCoeFunForallSetPresieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.instCoeFunForallSetPresieve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">instCoeFunForallSetPresieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>) =&gt; <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L150-L150","name":"CategoryTheory.Coverage.pullback","line":150,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.pullback","doc":"Given any covering sieve `S` on `X` and a morphism `f : Y ⟶ X`, there exists\nsome covering sieve `T` on `Y` such that `T` factors through `S` along `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.pullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">pullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">X</span></span> → <span class=\"fn\">∃ <span class=\"fn\">T</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <span class=\"fn\">Y</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong\">FactorsThruAlong</a></span> <span class=\"fn\">S</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L147-L147","name":"CategoryTheory.Coverage.covering","line":147,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering","doc":"The collection of covering presieves for an object `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">covering</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L145-L145","name":"CategoryTheory.Coverage.mk","line":145,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">covering</span> : <span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pullback</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄ (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>), <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\"><span class=\"fn\">covering</span> <span class=\"fn\">X</span></span>, <span class=\"fn\">∃ <span class=\"fn\">T</span> ∈ <span class=\"fn\"><span class=\"fn\">covering</span> <span class=\"fn\">Y</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong\">FactorsThruAlong</a></span> <span class=\"fn\">S</span> <span class=\"fn\">f</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L144-L144","name":"CategoryTheory.Coverage.ext","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">covering</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L144-L144","name":"CategoryTheory.Coverage.ext_iff","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\">Coverage</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage.covering\">covering</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L136-L151","name":"CategoryTheory.Coverage","line":136,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage","doc":"The type `Coverage C` of coverages on `C`.\nA coverage is a collection of *covering* presieves on every object `X : C`,\nwhich satisfies a *pullback compatibility* condition.\nExplicitly, this condition says that whenever `S` is a covering presieve for `X` and\n`f : Y ⟶ X` is a morphism, then there exists some covering presieve `T` for `Y`\nsuch that `T` factors through `S` along `f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Coverage\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Coverage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L99-L130","name":"CategoryTheory.Presieve.isSheafFor_of_factorsThru","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheafFor_of_factorsThru","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheafFor_of_factorsThru\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">isSheafFor_of_factorsThru</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_3}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru\">FactorsThru</a></span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">IsSheafFor</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>⦄ ⦃<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">f</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSeparatedFor\">IsSeparatedFor</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong\">FactorsThruAlong</a></span> <span class=\"fn\">S</span> <span class=\"fn\">f</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">IsSheafFor</a> <span class=\"fn\">P</span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L96-L97","name":"CategoryTheory.Presieve.factorsThru_top","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThru_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThru_top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">factorsThru_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru\">FactorsThru</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L90-L94","name":"CategoryTheory.Presieve.le_of_factorsThru_sieve","line":90,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.le_of_factorsThru_sieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.le_of_factorsThru_sieve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">le_of_factorsThru_sieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru\">FactorsThru</a></span> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">T</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L86-L88","name":"CategoryTheory.Presieve.factorsThru_of_le","line":86,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThru_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThru_of_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">factorsThru_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru\">FactorsThru</a></span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L81-L84","name":"CategoryTheory.Presieve.factorsThruAlong_id","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThruAlong_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.factorsThruAlong_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">factorsThruAlong_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_2}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong\">FactorsThruAlong</a></span> <span class=\"fn\">T</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru\">FactorsThru</a></span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L69-L79","name":"CategoryTheory.Presieve.FactorsThru","line":69,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru","doc":"Given `S T : Presieve X`, we say that `S` factors through `T` if any morphism in `S`\nfactors through some morphism in `T`.\n\nThe lemma `Presieve.isSheafFor_of_factorsThru` gives a *sufficient* condition for a\npresheaf to be a sheaf for a presieve `T`, in terms of `S.FactorsThru T`, provided\nthat the presheaf is a sheaf for `S`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThru\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">FactorsThru</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coverage.lean#L56-L67","name":"CategoryTheory.Presieve.FactorsThruAlong","line":56,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong","doc":"Given a morphism `f : Y ⟶ X`, a presieve `S` on `Y` and presieve `T` on `X`,\nwe say that *`S` factors through `T` along `f`*, written `S.FactorsThruAlong T f`,\nprovided that for any morphism `g : Z ⟶ Y` in `S`, there exists some\nmorphism `e : W ⟶ X` in `T` and some morphism `i : Z ⟶ W` such that the obvious\nsquare commutes: `i ≫ e = g ≫ f`.\n\nThis is used in the definition of a coverage.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.FactorsThruAlong\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">FactorsThruAlong</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}