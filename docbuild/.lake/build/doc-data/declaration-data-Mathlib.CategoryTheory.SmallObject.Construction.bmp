{"name":"Mathlib.CategoryTheory.SmallObject.Construction","instances":[{"typeNames":["CategoryTheory.SmallObject.FunctorObjIndex"],"name":"CategoryTheory.SmallObject.instSmallFunctorObjIndex","className":"Small"},{"typeNames":["HomotopicalAlgebra.AttachCells.Œπ"],"name":"CategoryTheory.SmallObject.instSmallŒπAttachCellsŒπFunctorObj","className":"Small"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq","Mathlib.CategoryTheory.Limits.Shapes.Pullback.HasPullback","Mathlib.AlgebraicTopology.RelativeCellComplex.AttachCells"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L330-L330","name":"CategoryTheory.SmallObject.Œµ_app","line":330,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œµ_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œµ_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">Œµ_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ {<span class=\"fn\">X </span><span class=\"fn\">S</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œµ\">Œµ</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">œÄ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.homMk\">Arrow.homMk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">œÄ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">œÄ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span>)</span> <span class=\"fn\">‚ãØ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L329-L332","name":"CategoryTheory.SmallObject.Œµ","line":329,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œµ","doc":"The canonical natural transformation `ùü≠ (Arrow C) ‚ü∂ functor f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œµ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">Œµ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ {<span class=\"fn\">X </span><span class=\"fn\">S</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor\">functor</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L308-L308","name":"CategoryTheory.SmallObject.functor_obj","line":308,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ {<span class=\"fn\">X </span><span class=\"fn\">S</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor\">functor</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">œÄ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">œÄ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L308-L308","name":"CategoryTheory.SmallObject.functor_map","line":308,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ {<span class=\"fn\">X </span><span class=\"fn\">S</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄ‚ÇÅ </span><span class=\"fn\">œÄ‚ÇÇ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\">œÄ‚ÇÅ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">œÄ‚ÇÇ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor\">functor</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">œÑ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.homMk\">Arrow.homMk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <span class=\"fn\">‚ãØ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L305-L327","name":"CategoryTheory.SmallObject.functor","line":305,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor","doc":"The functor `Arrow C ‚•§ Arrow C` that is constructed in order to apply the small\nobject argument to a family of morphisms `f i : A i ‚ü∂ B i`, see the introduction\nof the file `Mathlib.CategoryTheory.SmallObject.Construction` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushouts\">Limits.HasPushouts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ {<span class=\"fn\">X </span><span class=\"fn\">S</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow\">Arrow</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L284-L298","name":"CategoryTheory.SmallObject.ŒπFunctorObj_extension'","line":284,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_extension'","doc":"Variant of `ŒπFunctorObj_extension` where the diagram involving `functorObj f œÄX`\nis replaced by an isomorphic diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_extension'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj_extension'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X' </span><span class=\"fn\">S' </span><span class=\"fn\">Z'</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX'</span> : <span class=\"fn\">X'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œπ'</span> : <span class=\"fn\">X'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄZ'</span> : <span class=\"fn\">Z'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">Œπ'</span> <span class=\"fn\">œÄZ'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">œÄX'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eX</span> : <span class=\"fn\">X'</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eS</span> : <span class=\"fn\">S'</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eZ</span> : <span class=\"fn\">Z'</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">‚âÖ</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commŒπ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">Œπ'</span> <span class=\"fn\"><span class=\"fn\">eZ</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">eX</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">commœÄ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">œÄZ'</span> <span class=\"fn\"><span class=\"fn\">eS</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">eZ</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">I</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">œÄX'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z'</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">Œπ'</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">l</span> <span class=\"fn\">œÄZ'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L277-L282","name":"CategoryTheory.SmallObject.ŒπFunctorObj_extension","line":277,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_extension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_extension\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj_extension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">I</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">t</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">œÄX</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">l</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L272-L272","name":"CategoryTheory.SmallObject.ŒπFunctorObj_naturality_assoc","line":272,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_naturality_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L272-L275","name":"CategoryTheory.SmallObject.ŒπFunctorObj_naturality","line":272,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L265-L270","name":"CategoryTheory.SmallObject.functorMap_id","line":265,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMap_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L258-L258","name":"CategoryTheory.SmallObject.functorMap_œÄ_assoc","line":258,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_œÄ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_œÄ_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMap_œÄ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">T</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L258-L262","name":"CategoryTheory.SmallObject.functorMap_œÄ","line":258,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_œÄ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_œÄ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMap_œÄ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L252-L256","name":"CategoryTheory.SmallObject.functorMap","line":252,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap","doc":"The functor `SmallObject.functor f S : Arrow S ‚•§ Arrow S` that is part of\nthe small object argument for a family of morphisms `f`, on morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L241-L247","name":"CategoryTheory.SmallObject.functorMap_comm","line":241,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMap_comm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMap_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapTgt\">functorMapTgt</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc\">functorMapSrc</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L228-L228","name":"CategoryTheory.SmallObject.Œπ_functorMapTgt_assoc","line":228,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapTgt_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapTgt_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">Œπ_functorMapTgt_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b'</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t'</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b</span>, <span class=\"fn\">w</span> := <span class=\"fn\">w</span> }</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapTgt\">functorMapTgt</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b'</span>, <span class=\"fn\">w</span> := <span class=\"fn\">‚ãØ</span> }</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L228-L239","name":"CategoryTheory.SmallObject.Œπ_functorMapTgt","line":228,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapTgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapTgt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">Œπ_functorMapTgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b'</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t'</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b</span>, <span class=\"fn\">w</span> := <span class=\"fn\">w</span> }</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapTgt\">functorMapTgt</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b'</span>, <span class=\"fn\">w</span> := <span class=\"fn\">‚ãØ</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L221-L226","name":"CategoryTheory.SmallObject.functorMapTgt","line":221,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapTgt","doc":"The canonical morphism `‚àê functorObjTgtFamily f œÄX ‚ü∂ ‚àê functorObjTgtFamily f œÄY`\ninduced by a morphism `Arrow.mk œÄX ‚ü∂ Arrow.mk œÄY`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapTgt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMapTgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L215-L215","name":"CategoryTheory.SmallObject.functorMapSrc_functorObjTop_assoc","line":215,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc_functorObjTop_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc_functorObjTop_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMapSrc_functorObjTop_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc\">functorMapSrc</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L215-L219","name":"CategoryTheory.SmallObject.functorMapSrc_functorObjTop","line":215,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc_functorObjTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc_functorObjTop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMapSrc_functorObjTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc\">functorMapSrc</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L202-L202","name":"CategoryTheory.SmallObject.Œπ_functorMapSrc_assoc","line":202,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapSrc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapSrc_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">Œπ_functorMapSrc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b'</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t'</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b</span>, <span class=\"fn\">w</span> := <span class=\"fn\">w</span> }</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc\">functorMapSrc</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b'</span>, <span class=\"fn\">w</span> := <span class=\"fn\">‚ãØ</span> }</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L202-L213","name":"CategoryTheory.SmallObject.Œπ_functorMapSrc","line":202,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapSrc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.Œπ_functorMapSrc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">Œπ_functorMapSrc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b'</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">b</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t'</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b</span>, <span class=\"fn\">w</span> := <span class=\"fn\">w</span> }</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc\">functorMapSrc</a> <span class=\"fn\">f</span> <span class=\"fn\">œÑ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span> <span class=\"fn\">{ <span class=\"fn\">i</span> := <span class=\"fn\">i</span>, <span class=\"fn\">t</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">b</span> := <span class=\"fn\">b'</span>, <span class=\"fn\">w</span> := <span class=\"fn\">‚ãØ</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L195-L200","name":"CategoryTheory.SmallObject.functorMapSrc","line":195,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc","doc":"The canonical morphism `‚àê (functorObjSrcFamily f œÄX) ‚ü∂ ‚àê (functorObjSrcFamily f œÄY)`\ninduced by a morphism `Arrow.mk œÄX ‚ü∂ Arrow.mk œÄY`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorMapSrc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorMapSrc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄY</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">Arrow.mk</a> <span class=\"fn\">œÄY</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄY</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L179-L185","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObjOfSmall","line":179,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObjOfSmall","doc":"The morphism `ŒπFunctorObj f œÄX : X ‚ü∂ functorObj f œÄX` is obtained by\nattaching `f`-cells, and the index type can be chosen to be in `Type t`\nif the category is `t`-locally small and the index type for `f`\nis `t`-small. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObjOfSmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObjOfSmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{t, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{t, w}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells\">HomotopicalAlgebra.AttachCells</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L175-L177","name":"CategoryTheory.SmallObject.instSmallŒπAttachCellsŒπFunctorObj","line":175,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.instSmallŒπAttachCellsŒπFunctorObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.instSmallŒπAttachCellsŒπFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">instSmallŒπAttachCellsŒπFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{t, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{t, w}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{t, max v w}</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.Œπ\">Œπ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L162-L173","name":"CategoryTheory.SmallObject.instSmallFunctorObjIndex","line":162,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.instSmallFunctorObjIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.instSmallFunctorObjIndex\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">instSmallFunctorObjIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{t, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{t, w}</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{t, max v w}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_cofan‚ÇÅ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_cofan‚ÇÅ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_cofan‚ÇÅ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_cofan‚ÇÅ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.cofan‚ÇÅ\">cofan‚ÇÅ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.mk\">Limits.Cofan.mk</a> (<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span></span>) <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_m","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_m","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_m\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_m</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.m\">m</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_œÄ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_œÄ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_œÄ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_œÄ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.œÄ\">œÄ</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_g‚ÇÇ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_g‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_g‚ÇÇ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_g‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.g‚ÇÇ\">g‚ÇÇ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_cofan‚ÇÇ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_cofan‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_cofan‚ÇÇ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_cofan‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.cofan‚ÇÇ\">cofan‚ÇÇ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.mk\">Limits.Cofan.mk</a> (<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span></span>) <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_isColimit‚ÇÅ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_isColimit‚ÇÅ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_isColimit‚ÇÅ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_isColimit‚ÇÅ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.isColimit‚ÇÅ\">isColimit‚ÇÅ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.coproductIsCoproduct\">Limits.coproductIsCoproduct</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_isColimit‚ÇÇ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_isColimit‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_isColimit‚ÇÇ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_isColimit‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.isColimit‚ÇÇ\">isColimit‚ÇÇ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.coproductIsCoproduct\">Limits.coproductIsCoproduct</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_g‚ÇÅ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_g‚ÇÅ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_g‚ÇÅ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_g‚ÇÅ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.g‚ÇÅ\">g‚ÇÅ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L144-L144","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj_Œπ","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_Œπ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj_Œπ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj_Œπ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\">attachCellsŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells.Œπ\">Œπ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L142-L156","name":"CategoryTheory.SmallObject.attachCellsŒπFunctorObj","line":142,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj","doc":"The morphism `ŒπFunctorObj f œÄX : X ‚ü∂ functorObj f œÄX` is obtained by\nattaching `f`-cells. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.attachCellsŒπFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">attachCellsŒπFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/RelativeCellComplex/AttachCells.html#HomotopicalAlgebra.AttachCells\">HomotopicalAlgebra.AttachCells</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L138-L138","name":"CategoryTheory.SmallObject.ŒπFunctorObj_œÄFunctorObj_assoc","line":138,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_œÄFunctorObj_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_œÄFunctorObj_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj_œÄFunctorObj_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">œÄX</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L138-L140","name":"CategoryTheory.SmallObject.ŒπFunctorObj_œÄFunctorObj","line":138,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_œÄFunctorObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj_œÄFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj_œÄFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">œÄX</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L134-L134","name":"CategoryTheory.SmallObject.œÅFunctorObj_œÄ_assoc","line":134,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj_œÄ_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj_œÄ_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">œÅFunctorObj_œÄ_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄ'FunctorObj\">œÄ'FunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L134-L136","name":"CategoryTheory.SmallObject.œÅFunctorObj_œÄ","line":134,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj_œÄ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj_œÄ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">œÅFunctorObj_œÄ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\">œÄFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄ'FunctorObj\">œÄ'FunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L130-L132","name":"CategoryTheory.SmallObject.œÄFunctorObj","line":130,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj","doc":"The canonical projection on the base object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">œÄFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L127-L128","name":"CategoryTheory.SmallObject.œÄ'FunctorObj","line":127,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄ'FunctorObj","doc":"The canonical projection on the base object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÄ'FunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">œÄ'FunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L122-L122","name":"CategoryTheory.SmallObject.FunctorObjIndex.comm_assoc","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.comm_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.comm_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">comm_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.t\">t</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L122-L125","name":"CategoryTheory.SmallObject.FunctorObjIndex.comm","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.comm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.Œπ\">Limits.Sigma.Œπ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.t\">t</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L118-L120","name":"CategoryTheory.SmallObject.functorObj_isPushout","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj_isPushout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj_isPushout\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObj_isPushout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">IsPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L113-L113","name":"CategoryTheory.SmallObject.functorObj_comm_assoc","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj_comm_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj_comm_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObj_comm_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L113-L116","name":"CategoryTheory.SmallObject.functorObj_comm","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj_comm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObj_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\">ŒπFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\">œÅFunctorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L110-L111","name":"CategoryTheory.SmallObject.œÅFunctorObj","line":110,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj","doc":"The canonical morphism `‚àê (functorObjTgtFamily f œÄX) ‚ü∂ functorObj f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.œÅFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">œÅFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L107-L108","name":"CategoryTheory.SmallObject.ŒπFunctorObj","line":107,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj","doc":"The canonical morphism `X ‚ü∂ functorObj f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.ŒπFunctorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">ŒπFunctorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\">functorObj</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L101-L105","name":"CategoryTheory.SmallObject.functorObj","line":101,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj","doc":"The functor `SmallObject.functor f : Arrow C ‚•§ Arrow C` that is part of\nthe small object argument for a family of morphisms `f`, on an object given\nas a morphism `œÄX : X ‚ü∂ S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPushout\">Limits.HasPushout</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\">functorObjTop</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\">functorObjLeft</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L94-L97","name":"CategoryTheory.SmallObject.functorObjLeft","line":94,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft","doc":"The left morphism in the pushout square in the definition of `pushoutObj f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeft\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObjLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L90-L92","name":"CategoryTheory.SmallObject.functorObjTop","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop","doc":"The top morphism in the pushout square in the definition of `pushoutObj f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObjTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">Limits.HasColimitsOfShape</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span>)</span>)</span> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.sigmaObj\">‚àê</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L85-L88","name":"CategoryTheory.SmallObject.functorObjLeftFamily","line":85,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeftFamily","doc":"The family of the morphisms `f x.i : A x.i ‚ü∂ B x.i`\nparametrized by `x : FunctorObjIndex f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjLeftFamily\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObjLeftFamily</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\">functorObjSrcFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\">functorObjTgtFamily</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L82-L83","name":"CategoryTheory.SmallObject.functorObjTgtFamily","line":82,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily","doc":"The family of objects `B x.i` parametrized by `x : FunctorObjIndex f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjTgtFamily\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObjTgtFamily</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L79-L80","name":"CategoryTheory.SmallObject.functorObjSrcFamily","line":79,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily","doc":"The family of objects `A x.i` parametrized by `x : FunctorObjIndex f œÄX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.functorObjSrcFamily\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">functorObjSrcFamily</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L75-L75","name":"CategoryTheory.SmallObject.FunctorObjIndex.w_assoc","line":75,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.w_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.w_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">w_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.t\">t</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">œÄX</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.b\">b</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L73-L73","name":"CategoryTheory.SmallObject.FunctorObjIndex.w","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.t\">t</a></span> <span class=\"fn\">œÄX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span>)</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.b\">b</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L72-L72","name":"CategoryTheory.SmallObject.FunctorObjIndex.b","line":72,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.b","doc":"the bottom morphism in the square "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.b\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">b</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L70-L70","name":"CategoryTheory.SmallObject.FunctorObjIndex.t","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.t","doc":"the top morphism in the square "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.t\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\">i</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L68-L68","name":"CategoryTheory.SmallObject.FunctorObjIndex.i","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i","doc":"an element in the index type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.i\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">i</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L66-L66","name":"CategoryTheory.SmallObject.FunctorObjIndex.mk","line":66,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">t</span> <span class=\"fn\">œÄX</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\">FunctorObjIndex</a> <span class=\"fn\">f</span> <span class=\"fn\">œÄX</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Construction.lean#L63-L73","name":"CategoryTheory.SmallObject.FunctorObjIndex","line":63,"kind":"structure","docLink":"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex","doc":"Given a family of morphisms `f i : A i ‚ü∂ B i` and a morphism `œÄX : X ‚ü∂ S`,\nthis type parametrizes the commutative squares with a morphism `f i` on the left\nand `œÄX` in the right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Construction.html#CategoryTheory.SmallObject.FunctorObjIndex\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SmallObject</span>.<span class=\"name\">FunctorObjIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><span class=\"fn\">I</span> ‚Üí <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><span class=\"fn\">B</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÄX</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max v w)</div></div>"}]}