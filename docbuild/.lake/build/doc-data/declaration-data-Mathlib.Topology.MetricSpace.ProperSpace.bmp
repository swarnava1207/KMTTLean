{"name":"Mathlib.Topology.MetricSpace.ProperSpace","instances":[{"typeNames":["Set.Elem"],"name":"Metric.sphere.compactSpace","className":"CompactSpace"},{"typeNames":[],"name":"secondCountable_of_proper","className":"SecondCountableTopology"},{"typeNames":[],"name":"proper_of_compact","className":"ProperSpace"},{"typeNames":[],"name":"locallyCompact_of_proper","className":"LocallyCompactSpace"},{"typeNames":[],"name":"complete_of_proper","className":"CompleteSpace"},{"typeNames":["Prod"],"name":"prod_properSpace","className":"ProperSpace"},{"typeNames":[],"name":"pi_properSpace","className":"ProperSpace"},{"typeNames":["Additive"],"name":"instProperSpaceAdditive","className":"ProperSpace"},{"typeNames":["Multiplicative"],"name":"instProperSpaceMultiplicative","className":"ProperSpace"},{"typeNames":["OrderDual"],"name":"instProperSpaceOrderDual","className":"ProperSpace"}],"imports":["Init","Mathlib.Topology.MetricSpace.Pseudo.Basic","Mathlib.Topology.MetricSpace.Pseudo.Lemmas","Mathlib.Topology.MetricSpace.Pseudo.Pi","Mathlib.Topology.Order.IsLUB"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L138-L138","name":"instProperSpaceOrderDual","line":138,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#instProperSpaceOrderDual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#instProperSpaceOrderDual\"><span class=\"name\">instProperSpaceOrderDual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L137-L137","name":"instProperSpaceMultiplicative","line":137,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#instProperSpaceMultiplicative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#instProperSpaceMultiplicative\"><span class=\"name\">instProperSpaceMultiplicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L136-L136","name":"instProperSpaceAdditive","line":136,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#instProperSpaceAdditive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#instProperSpaceAdditive\"><span class=\"name\">instProperSpaceAdditive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L125-L132","name":"ProperSpace.of_isClosed","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.of_isClosed","doc":"A closed subspace of a proper space is proper.\nThis is true for any proper lipschitz map. See `LipschitzWith.properSpace`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.of_isClosed\"><span class=\"name\">ProperSpace</span>.<span class=\"name\">of_isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L118-L123","name":"pi_properSpace","line":118,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#pi_properSpace","doc":"A finite product of proper spaces is proper. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#pi_properSpace\"><span class=\"name\">pi_properSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">b</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\">b</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">((<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) → <span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L110-L116","name":"prod_properSpace","line":110,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#prod_properSpace","doc":"A binary product of proper spaces is proper. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#prod_properSpace\"><span class=\"name\">prod_properSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L96-L108","name":"complete_of_proper","line":96,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#complete_of_proper","doc":"A proper space is complete "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#complete_of_proper\"><span class=\"name\">complete_of_proper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L92-L93","name":"locally_compact_of_proper","line":92,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#locally_compact_of_proper","doc":"**Alias** of `locallyCompact_of_proper`.\n\n---\n\nA proper space is locally compact "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#locally_compact_of_proper\"><span class=\"name\">locally_compact_of_proper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L86-L89","name":"locallyCompact_of_proper","line":86,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#locallyCompact_of_proper","doc":"A proper space is locally compact "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#locallyCompact_of_proper\"><span class=\"name\">locallyCompact_of_proper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L82-L83","name":"proper_of_compact","line":82,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#proper_of_compact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#proper_of_compact\"><span class=\"name\">proper_of_compact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L71-L78","name":"ProperSpace.of_seq_closedBall","line":71,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.of_seq_closedBall","doc":"If there exists a sequence of compact closed balls with the same center\nsuch that the radii tend to infinity, then the space is proper. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.of_seq_closedBall\"><span class=\"name\">ProperSpace</span>.<span class=\"name\">of_seq_closedBall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">r</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">i</span> : <span class=\"fn\">β</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">l</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">r</span> <span class=\"fn\">i</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L64-L69","name":"ProperSpace.of_isCompact_closedBall_of_le","line":64,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.of_isCompact_closedBall_of_le","doc":"If all closed balls of large enough radius are compact, then the space is proper. Especially\nuseful when the lower bound for the radius is 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.of_isCompact_closedBall_of_le\"><span class=\"name\">ProperSpace</span>.<span class=\"name\">of_isCompact_closedBall_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">r</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L54-L62","name":"secondCountable_of_proper","line":54,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#secondCountable_of_proper","doc":"A proper pseudo metric space is sigma compact, and therefore second countable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#secondCountable_of_proper\"><span class=\"name\">secondCountable_of_proper</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L46-L49","name":"Metric.sphere.compactSpace","line":46,"kind":"instance","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#Metric.sphere.compactSpace","doc":"In a proper pseudometric space, any sphere is a `CompactSpace` when considered as a subtype. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#Metric.sphere.compactSpace\"><span class=\"name\">Metric</span>.<span class=\"name\">sphere</span>.<span class=\"name\">compactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">sphere</a> <span class=\"fn\">x</span> <span class=\"fn\">r</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L41-L44","name":"isCompact_sphere","line":41,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#isCompact_sphere","doc":"In a proper pseudometric space, all spheres are compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#isCompact_sphere\"><span class=\"name\">isCompact_sphere</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">x</span> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L37-L37","name":"ProperSpace.isCompact_closedBall","line":37,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.isCompact_closedBall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.isCompact_closedBall\"><span class=\"name\">ProperSpace</span>.<span class=\"name\">isCompact_closedBall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L36-L36","name":"ProperSpace.mk","line":36,"kind":"ctor","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace.mk\"><span class=\"name\">ProperSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isCompact_closedBall</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">x</span> <span class=\"fn\">r</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\">ProperSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/ProperSpace.lean#L35-L37","name":"ProperSpace","line":35,"kind":"class","docLink":"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace","doc":"A pseudometric space is proper if all closed balls are compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/ProperSpace.html#ProperSpace\"><span class=\"name\">ProperSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}