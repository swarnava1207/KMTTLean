{"name":"Mathlib.Algebra.Homology.HasNoLoop","instances":[{"typeNames":["ComplexShape.symm"],"name":"ComplexShape.instHasNoLoopSymm","className":"ComplexShape.HasNoLoop"},{"typeNames":["ComplexShape.up"],"name":"ComplexShape.instHasNoLoopIntUp","className":"ComplexShape.HasNoLoop"},{"typeNames":["ComplexShape.up"],"name":"ComplexShape.instHasNoLoopNatUp","className":"ComplexShape.HasNoLoop"},{"typeNames":["ComplexShape.down"],"name":"ComplexShape.instHasNoLoopIntDown","className":"ComplexShape.HasNoLoop"},{"typeNames":["ComplexShape.down"],"name":"ComplexShape.instHasNoLoopNatDown","className":"ComplexShape.HasNoLoop"}],"imports":["Init","Mathlib.Algebra.Homology.ComplexShape","Mathlib.Algebra.Group.Int.Defs","Mathlib.Algebra.Group.Nat.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L82-L82","name":"ComplexShape.instHasNoLoopNatDown","line":82,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopNatDown","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopNatDown\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instHasNoLoopNatDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.down\">down</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L81-L81","name":"ComplexShape.instHasNoLoopIntDown","line":81,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopIntDown","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopIntDown\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instHasNoLoopIntDown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.down\">down</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L80-L80","name":"ComplexShape.instHasNoLoopNatUp","line":80,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopNatUp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopNatUp\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instHasNoLoopNatUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">up</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L79-L79","name":"ComplexShape.instHasNoLoopIntUp","line":79,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopIntUp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopIntUp\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instHasNoLoopIntUp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L72-L75","name":"ComplexShape.hasNoLoop_down","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_down","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_down\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">hasNoLoop_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd\">IsRightCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.down\">down</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L67-L70","name":"ComplexShape.hasNoLoop_up","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_up","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_up\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">hasNoLoop_up</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd\">IsRightCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">up</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L61-L65","name":"ComplexShape.hasNoLoop_down'","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_down'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_down'\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">hasNoLoop_down'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd\">IsRightCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.down'\">down'</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L55-L59","name":"ComplexShape.hasNoLoop_up'","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_up'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.hasNoLoop_up'\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">hasNoLoop_up'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsRightCancelAdd\">IsRightCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsLeftCancelAdd\">IsLeftCancelAdd</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up'\">up'</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L48-L53","name":"ComplexShape.exists_distinct_next_or","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.exists_distinct_next_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.exists_distinct_next_or\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">exists_distinct_next_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">ι</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span>) <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L41-L46","name":"ComplexShape.exists_distinct_prev_or","line":41,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.exists_distinct_prev_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.exists_distinct_prev_or\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">exists_distinct_prev_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">ι</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span>) <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <span class=\"fn\">ι</span>), <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L38-L39","name":"ComplexShape.instHasNoLoopSymm","line":38,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopSymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.instHasNoLoopSymm\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">instHasNoLoopSymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.symm\">symm</a></span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L34-L36","name":"ComplexShape.not_rel_of_eq","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.not_rel_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.not_rel_of_eq\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">not_rel_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j </span><span class=\"fn\">j'</span> : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">j</span> <span class=\"fn\">j'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L30-L31","name":"ComplexShape.not_rel_self","line":30,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.not_rel_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.not_rel_self\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">not_rel_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">j</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L24-L24","name":"ComplexShape.HasNoLoop.not_rel_self","line":24,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop.not_rel_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop.not_rel_self\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">HasNoLoop</span>.<span class=\"name\">not_rel_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L23-L23","name":"ComplexShape.HasNoLoop.mk","line":23,"kind":"ctor","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop.mk\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">HasNoLoop</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">not_rel_self</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.Rel\">Rel</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\">HasNoLoop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HasNoLoop.lean#L22-L24","name":"ComplexShape.HasNoLoop","line":22,"kind":"class","docLink":"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop","doc":"The condition that `c.Rel i i` does not hold for any `i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HasNoLoop.html#ComplexShape.HasNoLoop\"><span class=\"name\">ComplexShape</span>.<span class=\"name\">HasNoLoop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape\">ComplexShape</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}