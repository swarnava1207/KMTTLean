{"name":"Mathlib.SetTheory.ZFC.PSet","instances":[{"typeNames":["PSet"],"name":"PSet.setoid","className":"Setoid"},{"typeNames":["PSet"],"name":"PSet.instHasSubset","className":"HasSubset"},{"typeNames":["PSet"],"name":"PSet.instIsReflSubset","className":"IsRefl"},{"typeNames":["PSet"],"name":"PSet.instIsTransSubset","className":"IsTrans"},{"typeNames":["PSet","PSet"],"name":"PSet.instMembership","className":"Membership"},{"typeNames":["PSet"],"name":"PSet.instIsWellFoundedMem","className":"IsWellFounded"},{"typeNames":["PSet"],"name":"PSet.instWellFoundedRelation","className":"WellFoundedRelation"},{"typeNames":["PSet","Set"],"name":"PSet.instCoeSet","className":"Coe"},{"typeNames":["PSet"],"name":"PSet.instEmptyCollection","className":"EmptyCollection"},{"typeNames":["PSet"],"name":"PSet.instInhabited","className":"Inhabited"},{"typeNames":["PSet.Type"],"name":"PSet.instIsEmptyTypeEmptyCollection","className":"IsEmpty"},{"typeNames":["PSet","PSet"],"name":"PSet.instInsert","className":"Insert"},{"typeNames":["PSet","PSet"],"name":"PSet.instSingleton","className":"Singleton"},{"typeNames":["PSet","PSet"],"name":"PSet.instLawfulSingleton","className":"LawfulSingleton"},{"typeNames":["PSet.Type"],"name":"PSet.instInhabitedTypeInsert","className":"Inhabited"},{"typeNames":["PSet","PSet"],"name":"PSet.instSep","className":"Sep"}],"imports":["Init","Mathlib.Data.Set.Lattice"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L427-L428","name":"PSet.lift_mem_embed","line":427,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.lift_mem_embed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.lift_mem_embed\"><span class=\"name\">PSet</span>.<span class=\"name\">lift_mem_embed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Lift\">Lift</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.embed\">embed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L422-L425","name":"PSet.embed","line":422,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.embed","doc":"Embedding of one universe in another "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.embed\"><span class=\"name\">PSet</span>.<span class=\"name\">embed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{max (u + 1) v}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L417-L419","name":"PSet.Lift","line":417,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Lift","doc":"Universe lift operation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Lift\"><span class=\"name\">PSet</span>.<span class=\"name\">Lift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{max u v}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L412-L415","name":"PSet.mem_image","line":412,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_image","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_image\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.image\">image</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">z</span> ∈ <span class=\"fn\">x</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L407-L409","name":"PSet.image","line":407,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.image","doc":"The image of a function from pre-sets to pre-sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.image\"><span class=\"name\">PSet</span>.<span class=\"name\">image</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L402-L405","name":"PSet.toSet_sUnion","line":402,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet_sUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet_sUnion\"><span class=\"name\">PSet</span>.<span class=\"name\">toSet_sUnion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> (<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L389-L400","name":"PSet.mem_sUnion","line":389,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_sUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_sUnion\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_sUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">z</span> ∈ <span class=\"fn\">x</span>, <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L386-L387","name":"PSet.«term⋃₀_»","line":386,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.«term⋃₀_»","doc":"The pre-set union operator "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.«term⋃₀_»\"><span class=\"name\">PSet</span>.<span class=\"name\">«term⋃₀_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L382-L384","name":"PSet.sUnion","line":382,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sUnion","doc":"The pre-set union operator "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sUnion\"><span class=\"name\">PSet</span>.<span class=\"name\">sUnion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L373-L380","name":"PSet.mem_powerset","line":373,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_powerset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_powerset\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_powerset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.powerset\">powerset</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L369-L371","name":"PSet.powerset","line":369,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.powerset","doc":"The pre-set powerset operator "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.powerset\"><span class=\"name\">PSet</span>.<span class=\"name\">powerset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L363-L367","name":"PSet.mem_sep","line":363,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_sep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_sep\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_sep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sep\">PSet.sep</a> <span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L360-L361","name":"PSet.instSep","line":360,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instSep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instSep\"><span class=\"name\">PSet</span>.<span class=\"name\">instSep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Sep\">Sep</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L356-L358","name":"PSet.sep","line":356,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sep","doc":"The pre-set separation operation `{x ∈ a | p x}` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sep\"><span class=\"name\">PSet</span>.<span class=\"name\">sep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L352-L354","name":"PSet.omega","line":352,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.omega","doc":"The von Neumann ordinal ω "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.omega\"><span class=\"name\">PSet</span>.<span class=\"name\">omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L347-L350","name":"PSet.ofNat","line":347,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.ofNat","doc":"The n-th von Neumann ordinal "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.ofNat\"><span class=\"name\">PSet</span>.<span class=\"name\">ofNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L344-L345","name":"PSet.mem_pair","line":344,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_pair\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">y</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">z</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L339-L342","name":"PSet.mem_singleton","line":339,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_singleton\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">y</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L336-L337","name":"PSet.mem_insert_of_mem","line":336,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_insert_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_insert_of_mem\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_insert_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L333-L334","name":"PSet.mem_insert","line":333,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_insert\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L320-L331","name":"PSet.mem_insert_iff","line":320,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_insert_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_insert_iff\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_insert_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L317-L318","name":"PSet.instInhabitedTypeInsert","line":317,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instInhabitedTypeInsert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instInhabitedTypeInsert\"><span class=\"name\">PSet</span>.<span class=\"name\">instInhabitedTypeInsert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L314-L315","name":"PSet.instLawfulSingleton","line":314,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instLawfulSingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instLawfulSingleton\"><span class=\"name\">PSet</span>.<span class=\"name\">instLawfulSingleton</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#LawfulSingleton\">LawfulSingleton</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L311-L312","name":"PSet.instSingleton","line":311,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instSingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instSingleton\"><span class=\"name\">PSet</span>.<span class=\"name\">instSingleton</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Singleton\">Singleton</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L308-L309","name":"PSet.instInsert","line":308,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instInsert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instInsert\"><span class=\"name\">PSet</span>.<span class=\"name\">instInsert</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Insert\">Insert</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L304-L306","name":"PSet.insert","line":304,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.insert","doc":"Insert an element into a pre-set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.insert\"><span class=\"name\">PSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L301-L302","name":"PSet.equiv_empty","line":301,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_empty\"><span class=\"name\">PSet</span>.<span class=\"name\">equiv_empty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L298-L299","name":"PSet.not_nonempty_empty","line":298,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_nonempty_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_nonempty_empty\"><span class=\"name\">PSet</span>.<span class=\"name\">not_nonempty_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L295-L296","name":"PSet.empty_subset","line":295,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.empty_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.empty_subset\"><span class=\"name\">PSet</span>.<span class=\"name\">empty_subset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L292-L293","name":"PSet.toSet_empty","line":292,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet_empty\"><span class=\"name\">PSet</span>.<span class=\"name\">toSet_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L288-L290","name":"PSet.not_mem_empty","line":288,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_mem_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_mem_empty\"><span class=\"name\">PSet</span>.<span class=\"name\">not_mem_empty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> ∉ <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L285-L286","name":"PSet.empty_def","line":285,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.empty_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.empty_def\"><span class=\"name\">PSet</span>.<span class=\"name\">empty_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk\">mk</a> <a href=\"./Init/Prelude.html#PEmpty\">PEmpty.{u_1 + 1}</a> <a href=\"./Init/Core.html#PEmpty.elim\">PEmpty.elim</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L282-L283","name":"PSet.instIsEmptyTypeEmptyCollection","line":282,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsEmptyTypeEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsEmptyTypeEmptyCollection\"><span class=\"name\">PSet</span>.<span class=\"name\">instIsEmptyTypeEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L279-L280","name":"PSet.instInhabited","line":279,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instInhabited\"><span class=\"name\">PSet</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L276-L277","name":"PSet.instEmptyCollection","line":276,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instEmptyCollection\"><span class=\"name\">PSet</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L272-L274","name":"PSet.empty","line":272,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.empty","doc":"The empty pre-set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.empty\"><span class=\"name\">PSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L269-L270","name":"PSet.instCoeSet","line":269,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instCoeSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instCoeSet\"><span class=\"name\">PSet</span>.<span class=\"name\">instCoeSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L265-L267","name":"PSet.Equiv.eq","line":265,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.eq","doc":"Two pre-sets are equivalent iff they have the same members. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.eq\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L262-L263","name":"PSet.nonempty_of_nonempty_type","line":262,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_of_nonempty_type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_of_nonempty_type\"><span class=\"name\">PSet</span>.<span class=\"name\">nonempty_of_nonempty_type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L259-L260","name":"PSet.nonempty_type_iff_nonempty","line":259,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_type_iff_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_type_iff_nonempty\"><span class=\"name\">PSet</span>.<span class=\"name\">nonempty_type_iff_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L255-L257","name":"PSet.nonempty_toSet_iff","line":255,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_toSet_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_toSet_iff\"><span class=\"name\">PSet</span>.<span class=\"name\">nonempty_toSet_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L252-L253","name":"PSet.nonempty_of_mem","line":252,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_of_mem\"><span class=\"name\">PSet</span>.<span class=\"name\">nonempty_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">u</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\">Nonempty</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L249-L250","name":"PSet.nonempty_def","line":249,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.nonempty_def\"><span class=\"name\">PSet</span>.<span class=\"name\">nonempty_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L245-L247","name":"PSet.Nonempty","line":245,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty","doc":"A nonempty set is one that contains some element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Nonempty\"><span class=\"name\">PSet</span>.<span class=\"name\">Nonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L241-L243","name":"PSet.mem_toSet","line":241,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_toSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_toSet\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_toSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">u</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\">toSet</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L237-L239","name":"PSet.toSet","line":237,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet","doc":"Convert a pre-set to a `Set` of pre-sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.toSet\"><span class=\"name\">PSet</span>.<span class=\"name\">toSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L234-L235","name":"PSet.not_mem_of_subset","line":234,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_mem_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_mem_of_subset\"><span class=\"name\">PSet</span>.<span class=\"name\">not_mem_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y</span> ∉ <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L231-L232","name":"PSet.not_subset_of_mem","line":231,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_subset_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.not_subset_of_mem\"><span class=\"name\">PSet</span>.<span class=\"name\">not_subset_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">y</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L228-L229","name":"PSet.mem_irrefl","line":228,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_irrefl\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L225-L226","name":"PSet.mem_asymm","line":225,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_asymm\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span> → <span class=\"fn\"><span class=\"fn\">y</span> ∉ <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L222-L223","name":"PSet.instWellFoundedRelation","line":222,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instWellFoundedRelation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instWellFoundedRelation\"><span class=\"name\">PSet</span>.<span class=\"name\">instWellFoundedRelation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFoundedRelation\">WellFoundedRelation</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L219-L220","name":"PSet.instIsWellFoundedMem","line":219,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsWellFoundedMem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsWellFoundedMem\"><span class=\"name\">PSet</span>.<span class=\"name\">instIsWellFoundedMem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellFounded\">IsWellFounded</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L216-L217","name":"PSet.mem_wf","line":216,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_wf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_wf\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_wf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/WF.html#WellFounded\">WellFounded</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L204-L205","name":"PSet.subset_iff","line":204,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.subset_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.subset_iff\"><span class=\"name\">PSet</span>.<span class=\"name\">subset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>⦄, <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> → <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L201-L202","name":"PSet.mem_of_subset","line":201,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mem_of_subset\"><span class=\"name\">PSet</span>.<span class=\"name\">mem_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span> → <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> → <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L198-L199","name":"PSet.Mem.congr_left","line":198,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.congr_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.congr_left\"><span class=\"name\">PSet</span>.<span class=\"name\">Mem</span>.<span class=\"name\">congr_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">w</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L190-L196","name":"PSet.equiv_iff_mem","line":190,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_iff_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_iff_mem\"><span class=\"name\">PSet</span>.<span class=\"name\">equiv_iff_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}, <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L181-L188","name":"PSet.Mem.congr_right","line":181,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.congr_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.congr_right\"><span class=\"name\">PSet</span>.<span class=\"name\">Mem</span>.<span class=\"name\">congr_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\">∀ {<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}, <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L175-L179","name":"PSet.Mem.ext","line":175,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.ext\"><span class=\"name\">PSet</span>.<span class=\"name\">Mem</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">w</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>), <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">y</span>)</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L171-L173","name":"PSet.func_mem","line":171,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.func_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.func_mem\"><span class=\"name\">PSet</span>.<span class=\"name\">func_mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L168-L169","name":"PSet.Mem.mk","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem.mk\"><span class=\"name\">PSet</span>.<span class=\"name\">Mem</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk\">PSet.mk</a> <span class=\"fn\">α</span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L165-L166","name":"PSet.instMembership","line":165,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instMembership","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instMembership\"><span class=\"name\">PSet</span>.<span class=\"name\">instMembership</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L161-L163","name":"PSet.Mem","line":161,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem","doc":"`x ∈ y` as pre-sets if `x` is extensionally equivalent to a member of the family `y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Mem\"><span class=\"name\">PSet</span>.<span class=\"name\">Mem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y </span><span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L150-L159","name":"PSet.Subset.congr_right","line":150,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Subset.congr_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Subset.congr_right\"><span class=\"name\">PSet</span>.<span class=\"name\">Subset</span>.<span class=\"name\">congr_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → (<span class=\"fn\">z</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">z</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L139-L148","name":"PSet.Subset.congr_left","line":139,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Subset.congr_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Subset.congr_left\"><span class=\"name\">PSet</span>.<span class=\"name\">Subset</span>.<span class=\"name\">congr_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → (<span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">z</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">z</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L128-L137","name":"PSet.Equiv.ext","line":128,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.ext\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L122-L126","name":"PSet.instIsTransSubset","line":122,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsTransSubset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsTransSubset\"><span class=\"name\">PSet</span>.<span class=\"name\">instIsTransSubset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsTrans\">IsTrans</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L119-L120","name":"PSet.instIsReflSubset","line":119,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsReflSubset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instIsReflSubset\"><span class=\"name\">PSet</span>.<span class=\"name\">instIsReflSubset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/Unbundled.html#IsRefl\">IsRefl</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L116-L117","name":"PSet.instHasSubset","line":116,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instHasSubset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.instHasSubset\"><span class=\"name\">PSet</span>.<span class=\"name\">instHasSubset</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#HasSubset\">HasSubset</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L111-L114","name":"PSet.Subset","line":111,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Subset","doc":"A pre-set is a subset of another pre-set if every element of the first family is extensionally\nequivalent to some element of the second family. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Subset\"><span class=\"name\">PSet</span>.<span class=\"name\">Subset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L108-L109","name":"PSet.setoid","line":108,"kind":"instance","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.setoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.setoid\"><span class=\"name\">PSet</span>.<span class=\"name\">setoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L105-L106","name":"PSet.equiv_of_isEmpty","line":105,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_of_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_of_isEmpty\"><span class=\"name\">PSet</span>.<span class=\"name\">equiv_of_isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L101-L103","name":"PSet.Equiv.trans","line":101,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.trans\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_3}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L98-L99","name":"PSet.Equiv.comm","line":98,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.comm\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L94-L96","name":"PSet.Equiv.symm","line":94,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.symm\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L83-L92","name":"PSet.Equiv.euc","line":83,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.euc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.euc\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">euc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_3}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L80-L81","name":"PSet.Equiv.rfl","line":80,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.rfl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.rfl\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">rfl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L76-L78","name":"PSet.Equiv.refl","line":76,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.refl\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">refl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L73-L74","name":"PSet.Equiv.exists_right","line":73,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.exists_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.exists_right\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">exists_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">j</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L70-L71","name":"PSet.Equiv.exists_left","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.exists_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv.exists_left\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">exists_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">j</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L65-L68","name":"PSet.equiv_iff","line":65,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.equiv_iff\"><span class=\"name\">PSet</span>.<span class=\"name\">equiv_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>), <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">j</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>), <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <span class=\"fn\">j</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L60-L63","name":"PSet.Equiv","line":60,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv","doc":"Two pre-sets are extensionally equivalent if every element of the first family is extensionally\nequivalent to some element of the second family and vice-versa. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\"><span class=\"name\">PSet</span>.<span class=\"name\">Equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_2}</a> → <a href=\"./foundational_types.html\">Prop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L56-L58","name":"PSet.eta","line":56,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.eta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.eta\"><span class=\"name\">PSet</span>.<span class=\"name\">eta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L52-L54","name":"PSet.mk_func","line":52,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk_func","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk_func\"><span class=\"name\">PSet</span>.<span class=\"name\">mk_func</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk\">mk</a> <span class=\"fn\">α</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\">Func</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">A</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L48-L50","name":"PSet.mk_type","line":48,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk_type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk_type\"><span class=\"name\">PSet</span>.<span class=\"name\">mk_type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk\">mk</a> <span class=\"fn\">α</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L44-L46","name":"PSet.Func","line":44,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func","doc":"The underlying pre-set family of a pre-set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Func\"><span class=\"name\">PSet</span>.<span class=\"name\">Func</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\">Type</a></span> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L40-L42","name":"PSet.Type","line":40,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type","doc":"The underlying type of a pre-set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Type\"><span class=\"name\">PSet</span>.<span class=\"name\">Type</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L36-L36","name":"PSet.mk","line":36,"kind":"ctor","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.mk\"><span class=\"name\">PSet</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/PSet.lean#L30-L36","name":"PSet","line":30,"kind":"inductive","docLink":"./Mathlib/SetTheory/ZFC/PSet.html#PSet","doc":"The type of pre-sets in universe `u`. A pre-set\nis a family of pre-sets indexed by a type in `Type u`.\nThe ZFC universe is defined as a quotient of this\nto ensure extensionality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\"><span class=\"name\">PSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}