{"name":"Mathlib.RingTheory.Localization.Away.Lemmas","instances":[],"imports":["Init","Mathlib.RingTheory.Localization.Away.Basic","Mathlib.RingTheory.Localization.Submodule"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Localization/Away/Lemmas.lean#L62-L64","name":"IsLocalization.Away.quotient_of_isIdempotentElem","line":62,"kind":"theorem","docLink":"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.quotient_of_isIdempotentElem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.quotient_of_isIdempotentElem\"><span class=\"name\">IsLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">quotient_of_isIdempotentElem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">he</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Idempotent.html#IsIdempotentElem\">IsIdempotentElem</a> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">Away</a> <span class=\"fn\">e</span> (<span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Localization/Away/Lemmas.lean#L30-L60","name":"IsLocalization.Away.span_range_mulNumerator_eq_top","line":30,"kind":"theorem","docLink":"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.span_range_mulNumerator_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.span_range_mulNumerator_eq_top\"><span class=\"name\">IsLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">span_range_mulNumerator_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsone</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Rₜ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">Away</a> <span class=\"fn\">(↑<span class=\"fn\">t</span>)</span> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htone</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.mulNumerator\">mulNumerator</a> <span class=\"fn\">s</span> <span class=\"fn\">p</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Localization/Away/Lemmas.lean#L20-L28","name":"IsLocalization.Away.mulNumerator","line":20,"kind":"def","docLink":"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.mulNumerator","doc":"Given a set `s` in a ring `R` and for every `t : s` a set `p t` of fractions in\na localization of `R` at `t`, this is the function sending a pair `(t, y)`, with\n`t : s` and `y : t a`, to `t` multiplied with a numerator of `y`. The range\nof this function spans the unit ideal, if `s` and every `p t` do. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Localization/Away/Lemmas.html#IsLocalization.Away.mulNumerator\"><span class=\"name\">IsLocalization</span>.<span class=\"name\">Away</span>.<span class=\"name\">mulNumerator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Rₜ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">Away</a> <span class=\"fn\">(↑<span class=\"fn\">t</span>)</span> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">Rₜ</span> <span class=\"fn\">t</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) × <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">t</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"}]}