{"name":"Mathlib.Data.Finsupp.MonomialOrder","instances":[{"typeNames":["MonomialOrder.syn"],"name":"MonomialOrder.orderBot","className":"OrderBot"},{"typeNames":["Lex"],"name":"instOrderedCancelAddCommMonoidLexFinsuppOfLinearOrder","className":"OrderedCancelAddCommMonoid"}],"imports":["Init","Mathlib.Data.Finsupp.Lex","Mathlib.Data.Finsupp.WellFounded","Mathlib.Data.List.TFAE"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L150-L152","name":"MonomialOrder.lex_le_iff_of_unique","line":150,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_le_iff_of_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_le_iff_of_unique\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">lex_le_iff_of_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L146-L148","name":"MonomialOrder.lex_lt_iff_of_unique","line":146,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_lt_iff_of_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_lt_iff_of_unique\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">lex_lt_iff_of_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L143-L144","name":"MonomialOrder.lex_lt_iff","line":143,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_lt_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">lex_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L140-L141","name":"MonomialOrder.lex_le_iff","line":140,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex_le_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">lex_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\">lex</a>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Synonym.html#toLex\">toLex</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L131-L138","name":"MonomialOrder.lex","line":131,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex","doc":"The lexicographic order on `σ →₀ ℕ`, as a `MonomialOrder` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.lex\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">lex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L112-L115","name":"instOrderedCancelAddCommMonoidLexFinsuppOfLinearOrder","line":112,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#instOrderedCancelAddCommMonoidLexFinsuppOfLinearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#instOrderedCancelAddCommMonoidLexFinsuppOfLinearOrder\"><span class=\"name\">instOrderedCancelAddCommMonoidLexFinsuppOfLinearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#OrderedCancelAddCommMonoid\">OrderedCancelAddCommMonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <span class=\"fn\">N</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L99-L101","name":"MonomialOrder.«term_≼[_]_»","line":99,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.«term_≼[_]_»","doc":"Given a monomial order, notation for the corresponding order relation on `σ →₀ ℕ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.«term_≼[_]_»\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">«term_≼[_]_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L95-L97","name":"MonomialOrder.«term_≺[_]_»","line":95,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.«term_≺[_]_»","doc":"Given a monomial order, notation for the corresponding strict order relation on `σ →₀ ℕ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.«term_≺[_]_»\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">«term_≺[_]_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L92-L93","name":"MonomialOrder.toSyn_strictMono","line":92,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn_strictMono\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">toSyn_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L90-L90","name":"MonomialOrder.eq_zero_iff","line":90,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.eq_zero_iff\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn\">syn</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L87-L88","name":"MonomialOrder.bot_eq_zero","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.bot_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.bot_eq_zero\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">bot_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L80-L85","name":"MonomialOrder.orderBot","line":80,"kind":"instance","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.orderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.orderBot\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">orderBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn\">syn</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L75-L78","name":"MonomialOrder.le_add_right","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.le_add_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.le_add_right\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">le_add_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L67-L67","name":"MonomialOrder.wf","line":67,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.wf","doc":"`syn` is a well ordering "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.wf\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">wf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn\">syn</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L65-L65","name":"MonomialOrder.toSyn_monotone","line":65,"kind":"theorem","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn_monotone","doc":"`toSyn` is monotone "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn_monotone\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">toSyn_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\">toSyn</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L63-L63","name":"MonomialOrder.toSyn","line":63,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn","doc":"the additive equivalence from `σ →₀ ℕ` to `syn` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.toSyn\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">toSyn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn\">syn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L61-L61","name":"MonomialOrder.locacm","line":61,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.locacm","doc":"`syn` is a linearly ordered cancellative additive commutative monoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.locacm\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">locacm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn\">syn</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L59-L59","name":"MonomialOrder.syn","line":59,"kind":"def","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn","doc":"The synonym type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.syn\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">syn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L57-L57","name":"MonomialOrder.mk","line":57,"kind":"ctor","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder.mk\"><span class=\"name\">MonomialOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">syn</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">locacm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#LinearOrderedCancelAddCommMonoid\">LinearOrderedCancelAddCommMonoid</a> <span class=\"fn\">syn</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSyn</span> : (<span class=\"fn\">σ</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\">syn</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSyn_monotone</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">toSyn</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <span class=\"fn\">syn</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\">MonomialOrder</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finsupp/MonomialOrder.lean#L56-L67","name":"MonomialOrder","line":56,"kind":"structure","docLink":"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder","doc":"Monomial orders : equivalence of `σ →₀ ℕ` with a well ordered type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finsupp/MonomialOrder.html#MonomialOrder\"><span class=\"name\">MonomialOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 (u_2 + 1))</div></div>"}]}