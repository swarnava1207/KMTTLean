{"name":"Mathlib.NumberTheory.SmoothNumbers","instances":[{"typeNames":[],"name":"Nat.instDecidablePredMemSetFactoredNumbers","className":"Decidable"},{"typeNames":[],"name":"Nat.instDecidablePredMemSetSmoothNumbers","className":"Decidable"}],"imports":["Init","Mathlib.Data.Nat.Factorization.Defs","Mathlib.Data.Nat.Squarefree"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L513-L518","name":"Nat.roughNumbersUpTo_card_le","line":513,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo_card_le","doc":"The cardinality of the set of `k`-rough numbers `≤ N` is bounded by the sum of `⌊N/p⌋`\nover the primes `k ≤ p ≤ N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo_card_le\"><span class=\"name\">Nat</span>.<span class=\"name\">roughNumbersUpTo_card_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo\">roughNumbersUpTo</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑ <span class=\"fn\">p</span> ∈ <span class=\"fn\">(<span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>, <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L490-L511","name":"Nat.roughNumbersUpTo_eq_biUnion","line":490,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo_eq_biUnion","doc":"The set of `k`-rough numbers `≤ N` can be written as the union of the sets of multiples `≤ N`\nof primes `k ≤ p ≤ N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo_eq_biUnion\"><span class=\"name\">Nat</span>.<span class=\"name\">roughNumbersUpTo_eq_biUnion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo\">roughNumbersUpTo</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>).<a href=\"./Mathlib/Data/Finset/Union.html#Finset.biUnion\">biUnion</a></span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">{<span class=\"fn\">m</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> | <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L482-L488","name":"Nat.smoothNumbersUpTo_card_le","line":482,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo_card_le","doc":"The cardinality of the set of `k`-smooth numbers `≤ N` is bounded by `2^π(k-1) * √N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo_card_le\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbersUpTo_card_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo\">smoothNumbersUpTo</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Batteries/Data/Nat/Basic.html#Nat.sqrt\">sqrt</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L462-L480","name":"Nat.smoothNumbersUpTo_subset_image","line":462,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo_subset_image","doc":"The set of `k`-smooth numbers `≤ N` is contained in the set of numbers of the form `m^2 * P`,\nwhere `m ≤ √N` and `P` is a product of distinct primes `< k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo_subset_image\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbersUpTo_subset_image</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo\">smoothNumbersUpTo</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\">x</span> with\n      | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt; <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Finset/Defs.html#Finset.prod\">prod</a></span> <a href=\"./Init/Prelude.html#id\">id</a></span></span>)</span>\n    (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>.<a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powerset\">powerset</a></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Batteries/Data/Nat/Basic.html#Nat.sqrt\">sqrt</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">0</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L447-L460","name":"Nat.eq_prod_primes_mul_sq_of_mem_smoothNumbers","line":447,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.eq_prod_primes_mul_sq_of_mem_smoothNumbers","doc":"A `k`-smooth number can be written as a square times a product of distinct primes `< k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.eq_prod_primes_mul_sq_of_mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">eq_prod_primes_mul_sq_of_mem_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">s</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>.<a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powerset\">powerset</a></span>, <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Finset/Defs.html#Finset.prod\">prod</a></span> <a href=\"./Init/Prelude.html#id\">id</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L433-L445","name":"Nat.smoothNumbersUpTo_card_add_roughNumbersUpTo_card","line":433,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo_card_add_roughNumbersUpTo_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo_card_add_roughNumbersUpTo_card\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbersUpTo_card_add_roughNumbersUpTo_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo\">smoothNumbersUpTo</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo\">roughNumbersUpTo</a></span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L429-L431","name":"Nat.roughNumbersUpTo","line":429,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo","doc":"The positive non-`k`-smooth (so \"`k`-rough\") numbers up to and including `N` as a `Finset` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.roughNumbersUpTo\"><span class=\"name\">Nat</span>.<span class=\"name\">roughNumbersUpTo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L425-L427","name":"Nat.mem_smoothNumbersUpTo","line":425,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbersUpTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbersUpTo\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbersUpTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N </span><span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo\">smoothNumbersUpTo</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L421-L423","name":"Nat.smoothNumbersUpTo","line":421,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo","doc":"The `k`-smooth numbers up to and including `N` as a `Finset` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbersUpTo\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbersUpTo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L409-L411","name":"Nat.equivProdNatSmoothNumbers_apply'","line":409,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers_apply'\"><span class=\"name\">Nat</span>.<span class=\"name\">equivProdNatSmoothNumbers_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers\">equivProdNatSmoothNumbers</a> <span class=\"fn\">hp</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L405-L407","name":"Nat.equivProdNatSmoothNumbers_apply","line":405,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">equivProdNatSmoothNumbers_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">e </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers\">equivProdNatSmoothNumbers</a> <span class=\"fn\">hp</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">e</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">⟨<span class=\"fn\">m</span>, <span class=\"fn\">hm</span>⟩</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L396-L403","name":"Nat.equivProdNatSmoothNumbers","line":396,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers","doc":"We establish the bijection from `ℕ × smoothNumbers p` to `smoothNumbers (p+1)`\ngiven by `(e, n) ↦ p^e * n` when `p` is a prime. See `Nat.smoothNumbers_succ` for\nwhen `p` is not prime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatSmoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">equivProdNatSmoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L387-L393","name":"Nat.map_prime_pow_mul","line":387,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.map_prime_pow_mul","doc":"If `f : ℕ → F` is multiplicative on coprime arguments, `p` is a prime and `m` is `p`-smooth,\nthen `f (p^e * m) = f (p^e) * f m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.map_prime_pow_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">map_prime_pow_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmul</span> : <span class=\"fn\">∀ {<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L381-L385","name":"Nat.Prime.smoothNumbers_coprime","line":381,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.Prime.smoothNumbers_coprime","doc":"If `p` is a prime and `n` is `p`-smooth, then `p` and `n` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.Prime.smoothNumbers_coprime\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">smoothNumbers_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L369-L379","name":"Nat.pow_mul_mem_smoothNumbers","line":369,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.pow_mul_mem_smoothNumbers","doc":"If `p` is positive and `n` is `p`-smooth, then every product `p^e * n` is `(p+1)`-smooth. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.pow_mul_mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">pow_mul_mem_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L364-L367","name":"Nat.smoothNumbers_compl","line":364,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_compl","doc":"The non-zero non-`N`-smooth numbers are `≥ N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_compl\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers_compl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L359-L362","name":"Nat.mem_smoothNumbers_of_lt","line":359,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_of_lt","doc":"All `m`, `0 < m < n` are `n`-smooth numbers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_of_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmn</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L356-L357","name":"Nat.smoothNumbers_mono","line":356,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_mono\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N </span><span class=\"fn\">M</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hNM</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L353-L354","name":"Nat.smoothNumbers_one","line":353,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_one\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L348-L351","name":"Nat.smoothNumbers_succ","line":348,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_succ","doc":"The sets of `N`-smooth and of `(N+1)`-smooth numbers are the same when `N` is not prime.\nSee `Nat.equivProdNatSmoothNumbers` for when `N` is prime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L343-L346","name":"Nat.prod_mem_smoothNumbers","line":343,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.prod_mem_smoothNumbers","doc":"The product of the prime factors of `n` that are less than `N` is an `N`-smooth number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.prod_mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_mem_smoothNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filter\">List.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factors.html#Nat.primeFactorsList\">primeFactorsList</a></span>)</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L337-L341","name":"Nat.mul_mem_smoothNumbers","line":337,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mul_mem_smoothNumbers","doc":"The product of two `n`-smooth numbers is an `n`-smooth number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mul_mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">mul_mem_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm1</span> : <span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm2</span> : <span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L333-L335","name":"Nat.smoothNumbers_zero","line":333,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L330-L331","name":"Nat.ne_zero_of_mem_smoothNumbers","line":330,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.ne_zero_of_mem_smoothNumbers","doc":"Zero is never a smooth number "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.ne_zero_of_mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">ne_zero_of_mem_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L323-L328","name":"Nat.mem_smoothNumbers_iff_primeFactors_subset","line":323,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_iff_primeFactors_subset","doc":"`m` is an `n`-smooth number if and only if `m ≠ 0` and the `Finset` of its prime factors\nis contained in the `Finset` of primes below `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_iff_primeFactors_subset\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers_iff_primeFactors_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L318-L321","name":"Nat.mem_smoothNumbers_of_primeFactors_subset","line":318,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_of_primeFactors_subset","doc":"`m` is an `n`-smooth number if the `Finset` of its prime factors consists of numbers `< n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_of_primeFactors_subset\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers_of_primeFactors_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L311-L316","name":"Nat.primeFactors_subset_of_mem_smoothNumbers","line":311,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primeFactors_subset_of_mem_smoothNumbers","doc":"The `Finset` of prime factors of an `n`-smooth number is contained in the `Finset`\nof primes below `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primeFactors_subset_of_mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_subset_of_mem_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hms</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L307-L309","name":"Nat.mem_smoothNumbers'","line":307,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers'","doc":"`m` is `n`-smooth if and only if all prime divisors of `m` are less than `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers'\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> → <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L301-L305","name":"Nat.mem_smoothNumbers_iff_forall_le","line":301,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_iff_forall_le","doc":"`m` is `n`-smooth if and only if `m` is nonzero and all prime divisors `≤ m` of `m`\nare less than `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_iff_forall_le\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers_iff_forall_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ≤ <span class=\"fn\">m</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> → <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L295-L299","name":"Nat.mem_smoothNumbers_of_dvd","line":295,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_of_dvd","doc":"A number that divides an `n`-smooth number is itself `n`-smooth. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L291-L293","name":"Nat.instDecidablePredMemSetSmoothNumbers","line":291,"kind":"instance","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.instDecidablePredMemSetSmoothNumbers","doc":"Membership in `Nat.smoothNumbers n` is decidable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.instDecidablePredMemSetSmoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">instDecidablePredMemSetSmoothNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L283-L289","name":"Nat.smmoothNumbers_eq_factoredNumbers_primesBelow","line":283,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smmoothNumbers_eq_factoredNumbers_primesBelow","doc":"The `n`-smooth numbers agree with the `primesBelow n`-factored numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smmoothNumbers_eq_factoredNumbers_primesBelow\"><span class=\"name\">Nat</span>.<span class=\"name\">smmoothNumbers_eq_factoredNumbers_primesBelow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L277-L281","name":"Nat.smoothNumbers_eq_factoredNumbers","line":277,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_eq_factoredNumbers","doc":"The `n`-smooth numbers agree with the `Finset.range n`-factored numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers_eq_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers_eq_factoredNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L274-L275","name":"Nat.mem_smoothNumbers","line":274,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">smoothNumbers</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/Factors.html#Nat.primeFactorsList\">primeFactorsList</a></span>, <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L270-L272","name":"Nat.smoothNumbers","line":270,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers","doc":"`smoothNumbers n` is the set of *`n`-smooth positive natural numbers*, i.e., the\npositive natural numbers all of whose prime factors are less than `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">smoothNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L260-L263","name":"Nat.equivProdNatFactoredNumbers_apply'","line":260,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers_apply'\"><span class=\"name\">Nat</span>.<span class=\"name\">equivProdNatFactoredNumbers_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers\">equivProdNatFactoredNumbers</a> <span class=\"fn\">hp</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L255-L258","name":"Nat.equivProdNatFactoredNumbers_apply","line":255,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">equivProdNatFactoredNumbers_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">e </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers\">equivProdNatFactoredNumbers</a> <span class=\"fn\">hp</span> <span class=\"fn\">hs</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">e</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">⟨<span class=\"fn\">m</span>, <span class=\"fn\">hm</span>⟩</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L214-L253","name":"Nat.equivProdNatFactoredNumbers","line":214,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers","doc":"We establish the bijection from `ℕ × factoredNumbers s` to `factoredNumbers (s ∪ {p})`\ngiven by `(e, n) ↦ p^e * n` when `p ∉ s` is a prime. See `Nat.factoredNumbers_insert` for\nwhen `p` is not prime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.equivProdNatFactoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">equivProdNatFactoredNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">p</span> <span class=\"fn\">s</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L205-L211","name":"Nat.factoredNumbers.map_prime_pow_mul","line":205,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers.map_prime_pow_mul","doc":"If `f : ℕ → F` is multiplicative on coprime arguments, `p ∉ s` is a prime and `m`\nis `s`-factored, then `f (p^e * m) = f (p^e) * f m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers.map_prime_pow_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">factoredNumbers</span>.<span class=\"name\">map_prime_pow_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmul</span> : <span class=\"fn\">∀ {<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L198-L203","name":"Nat.Prime.factoredNumbers_coprime","line":198,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.Prime.factoredNumbers_coprime","doc":"If `p ∉ s` is a prime and `n` is `s`-factored, then `p` and `n` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.Prime.factoredNumbers_coprime\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">factoredNumbers_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">p</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L185-L196","name":"Nat.pow_mul_mem_factoredNumbers","line":185,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.pow_mul_mem_factoredNumbers","doc":"If `p` is a prime and `n` is `s`-factored, then every product `p^e * n`\nis `s ∪ {p}`-factored. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.pow_mul_mem_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">pow_mul_mem_factoredNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">p</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L172-L183","name":"Nat.factoredNumbers_compl","line":172,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_compl","doc":"The non-zero non-`s`-factored numbers are `≥ N` when `s` contains all primes less than `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_compl\"><span class=\"name\">Nat</span>.<span class=\"name\">factoredNumbers_compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span>)</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L168-L170","name":"Nat.factoredNumbers_mono","line":168,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_mono\"><span class=\"name\">Nat</span>.<span class=\"name\">factoredNumbers_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hst</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L158-L166","name":"Nat.factoredNumbers_insert","line":158,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_insert","doc":"The sets of `s`-factored and of `s ∪ {N}`-factored numbers are the same when `N` is not prime.\nSee `Nat.equivProdNatFactoredNumbers` for when `N` is prime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_insert\"><span class=\"name\">Nat</span>.<span class=\"name\">factoredNumbers_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hN</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">N</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L148-L156","name":"Nat.prod_mem_factoredNumbers","line":148,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.prod_mem_factoredNumbers","doc":"The product of the prime factors of `n` that are in `s` is an `s`-factored number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.prod_mem_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_mem_factoredNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filter\">List.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factors.html#Nat.primeFactorsList\">primeFactorsList</a></span>)</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L139-L146","name":"Nat.mul_mem_factoredNumbers","line":139,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mul_mem_factoredNumbers","doc":"The product of two `s`-factored numbers is again `s`-factored. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mul_mem_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">mul_mem_factoredNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L132-L137","name":"Nat.factoredNumbers_empty","line":132,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers_empty\"><span class=\"name\">Nat</span>.<span class=\"name\">factoredNumbers_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L125-L130","name":"Nat.mem_factoredNumbers_iff_primeFactors_subset","line":125,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_iff_primeFactors_subset","doc":"`m` is `s`-factored if and only if `m ≠ 0` and its `Finset` of prime factors\nis contained in `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_iff_primeFactors_subset\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_factoredNumbers_iff_primeFactors_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L117-L123","name":"Nat.mem_factoredNumbers_of_primeFactors_subset","line":117,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_of_primeFactors_subset","doc":"If `m ≠ 0` and the `Finset` of prime factors of `m` is contained in `s`, then `m`\nis `s`-factored. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_of_primeFactors_subset\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_factoredNumbers_of_primeFactors_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L110-L115","name":"Nat.primeFactors_subset_of_mem_factoredNumbers","line":110,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primeFactors_subset_of_mem_factoredNumbers","doc":"The `Finset` of prime factors of an `s`-factored number is contained in `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primeFactors_subset_of_mem_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_subset_of_mem_factoredNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L107-L108","name":"Nat.ne_zero_of_mem_factoredNumbers","line":107,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.ne_zero_of_mem_factoredNumbers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.ne_zero_of_mem_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">ne_zero_of_mem_factoredNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L95-L105","name":"Nat.mem_factoredNumbers'","line":95,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers'","doc":"`m` is `s`-factored if and only if all prime divisors of `m` are in `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers'\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_factoredNumbers'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> → <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L86-L93","name":"Nat.mem_factoredNumbers_iff_forall_le","line":86,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_iff_forall_le","doc":"`m` is `s`-factored if and only if `m` is nonzero and all prime divisors `≤ m` of `m`\nare in `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_iff_forall_le\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_factoredNumbers_iff_forall_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ≤ <span class=\"fn\">m</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> → <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L76-L84","name":"Nat.mem_factoredNumbers_of_dvd","line":76,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_of_dvd","doc":"A number that divides an `s`-factored number is itself `s`-factored. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_factoredNumbers_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L72-L74","name":"Nat.instDecidablePredMemSetFactoredNumbers","line":72,"kind":"instance","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.instDecidablePredMemSetFactoredNumbers","doc":"Membership in `Nat.factoredNumbers n` is decidable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.instDecidablePredMemSetFactoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">instDecidablePredMemSetFactoredNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L68-L70","name":"Nat.mem_factoredNumbers","line":68,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_factoredNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\">factoredNumbers</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/Factors.html#Nat.primeFactorsList\">primeFactorsList</a></span>, <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L64-L66","name":"Nat.factoredNumbers","line":64,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers","doc":"`factoredNumbers s`, for a finite set `s` of natural numbers, is the set of positive natural\nnumbers all of whose prime factors are in `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.factoredNumbers\"><span class=\"name\">Nat</span>.<span class=\"name\">factoredNumbers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L56-L57","name":"Nat.not_mem_primesBelow","line":56,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.not_mem_primesBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.not_mem_primesBelow\"><span class=\"name\">Nat</span>.<span class=\"name\">not_mem_primesBelow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L52-L54","name":"Nat.primesBelow_succ","line":52,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">primesBelow_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">n</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L49-L50","name":"Nat.lt_of_mem_primesBelow","line":49,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.lt_of_mem_primesBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.lt_of_mem_primesBelow\"><span class=\"name\">Nat</span>.<span class=\"name\">lt_of_mem_primesBelow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L46-L47","name":"Nat.prime_of_mem_primesBelow","line":46,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.prime_of_mem_primesBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.prime_of_mem_primesBelow\"><span class=\"name\">Nat</span>.<span class=\"name\">prime_of_mem_primesBelow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L43-L44","name":"Nat.mem_primesBelow","line":43,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_primesBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.mem_primesBelow\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_primesBelow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L39-L41","name":"Nat.primesBelow_zero","line":39,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">primesBelow_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">primesBelow</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SmoothNumbers.lean#L36-L37","name":"Nat.primesBelow","line":36,"kind":"def","docLink":"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow","doc":"`primesBelow n` is the set of primes less than `n` as a `Finset`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\"><span class=\"name\">Nat</span>.<span class=\"name\">primesBelow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}