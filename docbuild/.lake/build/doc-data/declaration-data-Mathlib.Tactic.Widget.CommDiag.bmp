{"name":"Mathlib.Tactic.Widget.CommDiag","instances":[],"imports":["Init","ProofWidgets.Component.PenroseDiagram","ProofWidgets.Presentation.Expr","Mathlib.CategoryTheory.Category.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L130-L138","name":"Mathlib.Tactic.Widget.commutativeSquarePresenter","line":130,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commutativeSquarePresenter","doc":"Presenter for a commutative square "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commutativeSquarePresenter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">commutativeSquarePresenter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./ProofWidgets/Presentation/Expr.html#ProofWidgets.ExprPresenter\">ProofWidgets.ExprPresenter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L118-L128","name":"Mathlib.Tactic.Widget.commSquareM?","line":118,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commSquareM?","doc":"Given a commutative square `f ≫ g = i ≫ h`, return a square diagram. Otherwise `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commSquareM?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">commSquareM?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L108-L116","name":"Mathlib.Tactic.Widget.subSquare","line":108,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.subSquare","doc":"Square with `homs = [f,g,h,i]` and `objs = [A,B,C,D]`\n```\nA f B\ni   g\nD h C\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.subSquare\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">subSquare</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L96-L104","name":"Mathlib.Tactic.Widget.commutativeTrianglePresenter","line":96,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commutativeTrianglePresenter","doc":"Presenter for a commutative triangle "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commutativeTrianglePresenter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">commutativeTrianglePresenter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./ProofWidgets/Presentation/Expr.html#ProofWidgets.ExprPresenter\">ProofWidgets.ExprPresenter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L78-L94","name":"Mathlib.Tactic.Widget.commTriangleM?","line":78,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commTriangleM?","doc":"Given a commutative triangle `f ≫ g = h` or `e ≡ h = f ≫ g`, return a triangle diagram.\nOtherwise `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.commTriangleM?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">commTriangleM?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L68-L76","name":"Mathlib.Tactic.Widget.subTriangle","line":68,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.subTriangle","doc":"Triangle with `homs = [f,g,h]` and `objs = [A,B,C]`\n```\nA f B\n  h g\n    C\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.subTriangle\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">subTriangle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L54-L64","name":"Mathlib.Tactic.Widget.mkCommDiag","line":54,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.mkCommDiag","doc":"Construct a commutative diagram from a Penrose `sub`stance program and expressions `embeds` to\ndisplay as labels in the diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.mkCommDiag\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">mkCommDiag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sub</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">embeds</span> : <a href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.ExprEmbeds\">ExprEmbeds</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L48-L49","name":"Mathlib.Tactic.Widget.ExprEmbeds","line":48,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.ExprEmbeds","doc":"Expressions to display as labels in a diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.ExprEmbeds\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">ExprEmbeds</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L43-L46","name":"Mathlib.Tactic.Widget.homComp?","line":43,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.homComp?","doc":"Given composed homs `g ≫ h`, return `(g, h)`. Otherwise `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.homComp?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">homComp?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L38-L41","name":"Mathlib.Tactic.Widget.homType?","line":38,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.homType?","doc":"Given a Hom type `α ⟶ β`, return `(α, β)`. Otherwise `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Mathlib.Tactic.Widget.homType?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Widget</span>.<span class=\"name\">homType?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Widget/CommDiag.lean#L14-L29","name":"Lean.Expr.app7?","line":14,"kind":"def","docLink":"./Mathlib/Tactic/Widget/CommDiag.html#Lean.Expr.app7?","doc":"If the expression is a function application of `fName` with 7 arguments, return those arguments.\nOtherwise return `none`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/CommDiag.html#Lean.Expr.app7?\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">app7?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></div></div>"}]}