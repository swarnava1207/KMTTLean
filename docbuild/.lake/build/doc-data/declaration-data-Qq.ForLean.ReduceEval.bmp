{"name":"Qq.ForLean.ReduceEval","instances":[{"typeNames":["List"],"name":"Lean.Meta.instReduceEvalList_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Fin"],"name":"Lean.Meta.instReduceEvalFinOfNeZeroNat_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["BitVec"],"name":"Lean.Meta.instReduceEvalBitVec_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["UInt64"],"name":"Lean.Meta.instReduceEvalUInt64_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["USize"],"name":"Lean.Meta.instReduceEvalUSize_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Bool"],"name":"Lean.Meta.instReduceEvalBool_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Lean.BinderInfo"],"name":"Lean.Meta.instReduceEvalBinderInfo_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Lean.Literal"],"name":"Lean.Meta.instReduceEvalLiteral_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Lean.MVarId"],"name":"Lean.Meta.instReduceEvalMVarId_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Lean.LevelMVarId"],"name":"Lean.Meta.instReduceEvalLevelMVarId_qq","className":"Lean.Meta.ReduceEval"},{"typeNames":["Lean.FVarId"],"name":"Lean.Meta.instReduceEvalFVarId_qq","className":"Lean.Meta.ReduceEval"}],"imports":["Init","Lean"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L100-L106","name":"Lean.Meta.instReduceEvalFVarId_qq","line":100,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalFVarId_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalFVarId_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalFVarId_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L92-L98","name":"Lean.Meta.instReduceEvalLevelMVarId_qq","line":92,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalLevelMVarId_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalLevelMVarId_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalLevelMVarId_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Lean/Level.html#Lean.LevelMVarId\">LevelMVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L84-L90","name":"Lean.Meta.instReduceEvalMVarId_qq","line":84,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalMVarId_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalMVarId_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalMVarId_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L74-L82","name":"Lean.Meta.instReduceEvalLiteral_qq","line":74,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalLiteral_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalLiteral_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalLiteral_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Lean/Expr.html#Lean.Literal\">Literal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L65-L72","name":"Lean.Meta.instReduceEvalBinderInfo_qq","line":65,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalBinderInfo_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalBinderInfo_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalBinderInfo_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L55-L63","name":"Lean.Meta.instReduceEvalBool_qq","line":55,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalBool_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalBool_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalBool_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L46-L53","name":"Lean.Meta.instReduceEvalUSize_qq","line":46,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalUSize_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalUSize_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalUSize_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L38-L44","name":"Lean.Meta.instReduceEvalUInt64_qq","line":38,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalUInt64_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalUInt64_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalUInt64_qq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L28-L36","name":"Lean.Meta.instReduceEvalBitVec_qq","line":28,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalBitVec_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalBitVec_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalBitVec_qq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L20-L26","name":"Lean.Meta.instReduceEvalFinOfNeZeroNat_qq","line":20,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalFinOfNeZeroNat_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalFinOfNeZeroNat_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalFinOfNeZeroNat_qq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L18-L18","name":"Lean.Meta.instReduceEvalList_qq","line":18,"kind":"instance","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalList_qq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.instReduceEvalList_qq\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">instReduceEvalList_qq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/ReduceEval.html#Lean.Meta.ReduceEval\">ReduceEval</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/quote4/blob/aa4c87abed970d9dfad2506000d99d30b02f476b/Qq/ForLean/ReduceEval.lean#L6-L7","name":"Lean.Meta.throwFailedToEval","line":6,"kind":"def","docLink":"./Qq/ForLean/ReduceEval.html#Lean.Meta.throwFailedToEval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/ForLean/ReduceEval.html#Lean.Meta.throwFailedToEval\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">throwFailedToEval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">α</span></span></div></div>"}]}