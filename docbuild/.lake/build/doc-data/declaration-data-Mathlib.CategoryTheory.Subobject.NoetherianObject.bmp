{"name":"Mathlib.CategoryTheory.Subobject.NoetherianObject","instances":[{"typeNames":["CategoryTheory.Subobject"],"name":"CategoryTheory.instWellFoundedGTSubobjectOfIsNoetherianObject","className":"IsWellFounded"},{"typeNames":["CategoryTheory.isNoetherianObject"],"name":"CategoryTheory.instContainsZeroIsNoetherianObjectOfHasZeroObject","className":"CategoryTheory.ObjectProperty.ContainsZero"},{"typeNames":["CategoryTheory.isNoetherianObject"],"name":"CategoryTheory.instIsClosedUnderSubobjectsIsNoetherianObject","className":"CategoryTheory.ObjectProperty.IsClosedUnderSubobjects"}],"imports":["Init","Mathlib.CategoryTheory.Subobject.Lattice","Mathlib.CategoryTheory.ObjectProperty.ContainsZero","Mathlib.CategoryTheory.ObjectProperty.EpiMono","Mathlib.CategoryTheory.Limits.Constructions.EventuallyConstant","Mathlib.Order.OrderIsoNat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L123-L126","name":"CategoryTheory.instIsClosedUnderSubobjectsIsNoetherianObject","line":123,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.instIsClosedUnderSubobjectsIsNoetherianObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.instIsClosedUnderSubobjectsIsNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instIsClosedUnderSubobjectsIsNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject\">isNoetherianObject</a>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderSubobjects\">IsClosedUnderSubobjects</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L115-L121","name":"CategoryTheory.isNoetherianObject_of_mono","line":115,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isNoetherianObject_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L110-L113","name":"CategoryTheory.instContainsZeroIsNoetherianObjectOfHasZeroObject","line":110,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.instContainsZeroIsNoetherianObjectOfHasZeroObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.instContainsZeroIsNoetherianObjectOfHasZeroObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instContainsZeroIsNoetherianObjectOfHasZeroObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.HasZeroObject\">Limits.HasZeroObject</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject\">isNoetherianObject</a>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/ContainsZero.html#CategoryTheory.ObjectProperty.ContainsZero\">ContainsZero</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L104-L108","name":"CategoryTheory.isNoetherianObject_of_isZero","line":104,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_of_isZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_of_isZero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isNoetherianObject_of_isZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.IsZero\">Limits.IsZero</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L98-L100","name":"CategoryTheory.isEventuallyConstant_of_isNoetherianObject","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isEventuallyConstant_of_isNoetherianObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isEventuallyConstant_of_isNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isEventuallyConstant_of_isNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/MonoOver.html#CategoryTheory.MonoOver\">MonoOver</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Constructions/EventuallyConstant.html#CategoryTheory.IsFiltered.IsEventuallyConstant\">IsFiltered.IsEventuallyConstant</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L81-L95","name":"CategoryTheory.isNoetherianObject_iff_isEventuallyConstant","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_iff_isEventuallyConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_iff_isEventuallyConstant\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isNoetherianObject_iff_isEventuallyConstant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/MonoOver.html#CategoryTheory.MonoOver\">MonoOver</a> <span class=\"fn\">X</span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Constructions/EventuallyConstant.html#CategoryTheory.IsFiltered.IsEventuallyConstant\">IsFiltered.IsEventuallyConstant</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L76-L79","name":"CategoryTheory.not_strictMono_of_isNoetherianObject","line":76,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.not_strictMono_of_isNoetherianObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.not_strictMono_of_isNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">not_strictMono_of_isNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L67-L73","name":"CategoryTheory.isNoetherianObject_iff_not_strictMono","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_iff_not_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_iff_not_strictMono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isNoetherianObject_iff_not_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">X</span></span></span>), <a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L62-L65","name":"CategoryTheory.monotone_chain_condition_of_isNoetherianObject","line":62,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.monotone_chain_condition_of_isNoetherianObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.monotone_chain_condition_of_isNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">monotone_chain_condition_of_isNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\">‚àÄ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span> ‚Üí <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L54-L59","name":"CategoryTheory.isNoetherianObject_iff_monotone_chain_condition","line":54,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_iff_monotone_chain_condition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject_iff_monotone_chain_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isNoetherianObject_iff_monotone_chain_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">X</span></span>), <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\">‚àÄ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span> ‚Üí <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L51-L52","name":"CategoryTheory.instWellFoundedGTSubobjectOfIsNoetherianObject","line":51,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.instWellFoundedGTSubobjectOfIsNoetherianObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.instWellFoundedGTSubobjectOfIsNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instWellFoundedGTSubobjectOfIsNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\">IsNoetherianObject</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedGT\">WellFoundedGT</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L47-L49","name":"CategoryTheory.IsNoetherianObject","line":47,"kind":"def","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject","doc":"An object `X` in a category `C` is Noetherian if `Subobject X`\nsatisfies the ascending chain condition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.IsNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/NoetherianObject.lean#L36-L43","name":"CategoryTheory.isNoetherianObject","line":36,"kind":"def","docLink":"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject","doc":"An object `X` in a category `C` is Noetherian if `Subobject X`\nsatisfies the ascending chain condition. This definition is a\nterm in `ObjectProperty C` which allows to study the stability\nproperties of noetherian objects. For statements regarding\nspecific objects, it is advisable to use the type class\n`IsNoetherianObject` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/NoetherianObject.html#CategoryTheory.isNoetherianObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">isNoetherianObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span></div></div>"}]}