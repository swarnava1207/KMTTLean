{"name":"Mathlib.Dynamics.Circle.RotationNumber.TranslationNumber","instances":[{"typeNames":["CircleDeg1Lift","Real","Real"],"name":"CircleDeg1Lift.instFunLikeReal","className":"DFunLike"},{"typeNames":["CircleDeg1Lift","Real","Real"],"name":"CircleDeg1Lift.instOrderHomClassReal","className":"RelHomClass"},{"typeNames":["CircleDeg1Lift"],"name":"CircleDeg1Lift.instMonoid","className":"Monoid"},{"typeNames":["CircleDeg1Lift"],"name":"CircleDeg1Lift.instInhabited","className":"Inhabited"},{"typeNames":["Units"],"name":"CircleDeg1Lift.unitsHasCoeToFun","className":"CoeFun"},{"typeNames":["CircleDeg1Lift"],"name":"CircleDeg1Lift.instLattice","className":"Lattice"}],"imports":["Init","Mathlib.Analysis.SpecificLimits.Basic","Mathlib.Order.Iterate","Mathlib.Order.SemiconjSup","Mathlib.Topology.Order.MonotoneContinuity","Mathlib.Algebra.CharP.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L884-L890","name":"CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq","line":884,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq","doc":"If two lifts of circle homeomorphisms have the same translation number, then they are\nsemiconjugate by a `CircleDeg1Lift`. This version uses assumptions `bijective f₁` and\n`bijective f₂` to assume that `f₁` and `f₂` are homeomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconj_of_bijective_of_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f₁</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">F</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L876-L882","name":"CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq","line":876,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq","doc":"If two lifts of circle homeomorphisms have the same translation number, then they are\nsemiconjugate by a `CircleDeg1Lift`. This version uses assumptions `IsUnit f₁` and `IsUnit f₂`\nto assume that `f₁` and `f₂` are homeomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconj_of_isUnit_of_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">f₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">f₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f₁</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">F</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L864-L874","name":"CircleDeg1Lift.units_semiconj_of_translationNumber_eq","line":864,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_semiconj_of_translationNumber_eq","doc":"If two lifts of circle homeomorphisms have the same translation number, then they are\nsemiconjugate by a `CircleDeg1Lift`. This version uses arguments `f₁ f₂ : CircleDeg1Liftˣ`\nto assume that `f₁` and `f₂` are homeomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_semiconj_of_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">units_semiconj_of_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">f₁</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">f₂</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">F</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f₁</span></span></span> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f₂</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L824-L862","name":"CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq","line":824,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq","doc":"Consider two actions `f₁ f₂ : G →* CircleDeg1Lift` of a group on the real line by lifts of\norientation preserving circle homeomorphisms. Suppose that for each `g : G` the homeomorphisms\n`f₁ g` and `f₂ g` have equal rotation numbers. Then there exists `F : CircleDeg1Lift` such that\n`F * f₁ g = f₂ g * F` for all `g : G`.\n\nThis is a version of Proposition 5.4 from [Étienne Ghys, Groupes d'homeomorphismes du cercle et\ncohomologie bornee][ghys87:groupes]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconj_of_group_action_of_forall_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">F</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">g</span>)</span></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">g</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L819-L822","name":"CircleDeg1Lift.translationNumber_eq_rat_iff","line":819,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_rat_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_rat_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_rat_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L815-L817","name":"CircleDeg1Lift.continuous_pow","line":815,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">continuous_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L806-L813","name":"CircleDeg1Lift.translationNumber_eq_int_iff","line":806,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_int_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_int_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_int_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L795-L804","name":"CircleDeg1Lift.exists_eq_add_translationNumber","line":795,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.exists_eq_add_translationNumber","doc":"If `f` is a continuous monotone map `ℝ → ℝ`, `f (x + 1) = f x + 1`, then there exists `x`\nsuch that `f x = x + τ f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.exists_eq_add_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">exists_eq_add_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L786-L793","name":"CircleDeg1Lift.lt_translationNumber_of_forall_add_lt","line":786,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_translationNumber_of_forall_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_translationNumber_of_forall_add_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_translationNumber_of_forall_add_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L776-L784","name":"CircleDeg1Lift.translationNumber_lt_of_forall_lt_add","line":776,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_lt_of_forall_lt_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_lt_of_forall_lt_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_lt_of_forall_lt_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L770-L774","name":"CircleDeg1Lift.forall_map_sub_of_Icc","line":770,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.forall_map_sub_of_Icc","doc":"If a predicate depends only on `f x - x` and holds for all `0 ≤ x ≤ 1`,\nthen it holds for all `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.forall_map_sub_of_Icc\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">forall_map_sub_of_Icc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>, <span class=\"fn\"><span class=\"fn\">P</span> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L761-L768","name":"CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int","line":761,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int","doc":"If `f^n x - x`, `n > 0`, is an integer number `m` for some point `x`, then\n`τ f = m / n`. On the circle this means that a map with a periodic orbit has\na rational rotation number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_of_map_pow_eq_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L758-L759","name":"CircleDeg1Lift.lt_map_of_nat_lt_translationNumber","line":758,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_nat_lt_translationNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_nat_lt_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_map_of_nat_lt_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L755-L756","name":"CircleDeg1Lift.lt_map_of_int_lt_translationNumber","line":755,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_int_lt_translationNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_int_lt_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_map_of_int_lt_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L750-L753","name":"CircleDeg1Lift.map_lt_add_translationNumber_add_one","line":750,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_translationNumber_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_translationNumber_add_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_add_translationNumber_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L743-L748","name":"CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one","line":743,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_add_floor_translationNumber_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L740-L741","name":"CircleDeg1Lift.map_lt_of_translationNumber_lt_nat","line":740,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_of_translationNumber_lt_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L737-L738","name":"CircleDeg1Lift.map_lt_of_translationNumber_lt_int","line":737,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_of_translationNumber_lt_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L734-L735","name":"CircleDeg1Lift.translationNumber_le_ceil_sub","line":734,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_ceil_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_ceil_sub\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_ceil_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L731-L732","name":"CircleDeg1Lift.floor_sub_le_translationNumber","line":731,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_sub_le_translationNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_sub_le_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">floor_sub_le_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L725-L729","name":"CircleDeg1Lift.translationNumber_of_eq_add_int","line":725,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_eq_add_int","doc":"If `f x - x` is an integer number `m` for some point `x`, then `τ f = m`.\nOn the circle this means that a map with a fixed point has rotation number zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_eq_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_of_eq_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L722-L723","name":"CircleDeg1Lift.le_translationNumber_of_add_nat_le","line":722,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_nat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_nat_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_translationNumber_of_add_nat_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L717-L720","name":"CircleDeg1Lift.le_translationNumber_of_add_int_le","line":717,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_int_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_int_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_translationNumber_of_add_int_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L714-L715","name":"CircleDeg1Lift.translationNumber_le_of_le_add_nat","line":714,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_of_le_add_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L709-L712","name":"CircleDeg1Lift.translationNumber_le_of_le_add_int","line":709,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_of_le_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L706-L707","name":"CircleDeg1Lift.le_translationNumber_of_add_le","line":706,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_translationNumber_of_add_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L703-L704","name":"CircleDeg1Lift.translationNumber_le_of_le_add","line":703,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_of_le_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L698-L701","name":"CircleDeg1Lift.translationNumber_translate","line":698,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_translate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_translate\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_translate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">x</span>)</span>)</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L694-L696","name":"CircleDeg1Lift.translationNumber_mono","line":694,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L690-L692","name":"CircleDeg1Lift.tendsto_translation_number'","line":690,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translation_number'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; (<span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L682-L688","name":"CircleDeg1Lift.tendsto_translationNumber","line":682,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber","doc":"For any `x : ℝ` the sequence $\\frac{f^n(x)-x}{n}$ tends to the translation number of `f`.\nIn particular, this limit does not depend on `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; (<span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L679-L680","name":"CircleDeg1Lift.tendsto_translation_number₀","line":679,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translation_number₀</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L667-L677","name":"CircleDeg1Lift.tendsto_translation_number₀'","line":667,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translation_number₀'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)) <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L663-L665","name":"CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le","line":663,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_pow_map_zero_mul_translationNumber_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">0</span>)</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L658-L661","name":"CircleDeg1Lift.translationNumber_conj_eq'","line":658,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_conj_eq'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>).<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L653-L656","name":"CircleDeg1Lift.translationNumber_conj_eq","line":653,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_conj_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span>).<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L648-L651","name":"CircleDeg1Lift.translationNumber_zpow","line":648,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_zpow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>))</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L641-L646","name":"CircleDeg1Lift.translationNumber_pow","line":641,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>).<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L636-L639","name":"CircleDeg1Lift.translationNumber_units_inv","line":636,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_units_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_units_inv\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_units_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L626-L634","name":"CircleDeg1Lift.translationNumber_mul_of_commute","line":626,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mul_of_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mul_of_commute\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_mul_of_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L622-L624","name":"CircleDeg1Lift.translationNumber_eq_of_semiconj","line":622,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconj\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_semiconj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g₂</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L617-L620","name":"CircleDeg1Lift.translationNumber_eq_of_semiconjBy","line":617,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconjBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconjBy\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_semiconjBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Semiconj/Defs.html#SemiconjBy\">SemiconjBy</a> <span class=\"fn\">f</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g₂</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L613-L615","name":"CircleDeg1Lift.translationNumber_one","line":613,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L608-L611","name":"CircleDeg1Lift.translationNumber_eq_of_dist_bounded","line":608,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_dist_bounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_dist_bounded\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_dist_bounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">0</span>)</span> <span class=\"fn\">((<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L596-L606","name":"CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux","line":596,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translationNumber_of_dist_bounded_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L591-L594","name":"CircleDeg1Lift.dist_map_zero_translationNumber_le","line":591,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_translationNumber_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_translationNumber_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_zero_translationNumber_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L588-L589","name":"CircleDeg1Lift.tendsto_translationNumber_aux","line":588,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_aux\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translationNumber_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">transnumAuxSeq</a></span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L577-L586","name":"CircleDeg1Lift.transnumAuxSeq_dist_lt","line":577,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_dist_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_dist_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq_dist_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">transnumAuxSeq</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">transnumAuxSeq</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L575-L575","name":"CircleDeg1Lift.transnumAuxSeq_zero","line":575,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">transnumAuxSeq</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L571-L573","name":"CircleDeg1Lift.translationNumber_eq_of_tendsto₀'","line":571,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_tendsto₀'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ'</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">τ'</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L565-L569","name":"CircleDeg1Lift.translationNumber_eq_of_tendsto₀","line":565,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_tendsto₀</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ'</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">τ'</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L561-L563","name":"CircleDeg1Lift.translationNumber_eq_of_tendsto_aux","line":561,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto_aux\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_tendsto_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">τ'</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">transnumAuxSeq</a></span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">τ'</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">translationNumber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L558-L559","name":"CircleDeg1Lift.transnumAuxSeq_def","line":558,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_def\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">transnumAuxSeq</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L546-L550","name":"CircleDeg1Lift.translationNumber","line":546,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber","doc":"The translation number of a `CircleDeg1Lift`, $τ(f)=\\lim_{n→∞}\\frac{f^n(x)-x}{n}$. We use\nan auxiliary sequence `\\frac{f^{2^n}(0)}{2^n}` to define `τ(f)` because some proofs are simpler\nthis way. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L542-L544","name":"CircleDeg1Lift.transnumAuxSeq","line":542,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq","doc":"An auxiliary sequence used to define the translation number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L531-L534","name":"CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero","line":531,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mul_floor_map_zero_le_floor_iterate_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L527-L529","name":"CircleDeg1Lift.lt_iterate_pos_iff","line":527,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_iterate_pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_iterate_pos_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_iterate_pos_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L523-L525","name":"CircleDeg1Lift.le_iterate_pos_iff","line":523,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_pos_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_iterate_pos_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L518-L521","name":"CircleDeg1Lift.iterate_pos_eq_iff","line":518,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_eq_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_pos_eq_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L513-L516","name":"CircleDeg1Lift.iterate_pos_lt_iff","line":513,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_lt_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_pos_lt_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L508-L511","name":"CircleDeg1Lift.iterate_pos_le_iff","line":508,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_le_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_pos_le_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L504-L506","name":"CircleDeg1Lift.iterate_eq_of_map_eq_add_int","line":504,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_eq_of_map_eq_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_eq_of_map_eq_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_eq_of_map_eq_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L499-L502","name":"CircleDeg1Lift.le_iterate_of_add_int_le_map","line":499,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_of_add_int_le_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_of_add_int_le_map\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_iterate_of_add_int_le_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L494-L497","name":"CircleDeg1Lift.iterate_le_of_map_le_add_int","line":494,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_le_of_map_le_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_le_of_map_le_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_le_of_map_le_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L480-L481","name":"CircleDeg1Lift.continuous_iff_surjective","line":480,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_iff_surjective\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">continuous_iff_surjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L475-L478","name":"CircleDeg1Lift.tendsto_atTop","line":475,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atTop\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_atTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L470-L473","name":"CircleDeg1Lift.tendsto_atBot","line":470,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atBot\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_atBot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L462-L464","name":"CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy","line":462,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_zero_lt_of_semiconjBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Semiconj/Defs.html#SemiconjBy\">SemiconjBy</a> <span class=\"fn\">f</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">g₁</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">g₂</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L452-L460","name":"CircleDeg1Lift.dist_map_zero_lt_of_semiconj","line":452,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconj\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_zero_lt_of_semiconj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">g₁</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">g₂</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L448-L450","name":"CircleDeg1Lift.dist_map_map_zero_lt","line":448,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_map_zero_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_map_zero_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_map_zero_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> (<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>) <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L442-L446","name":"CircleDeg1Lift.lt_map_map_zero","line":442,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L437-L440","name":"CircleDeg1Lift.le_ceil_map_map_zero","line":437,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_ceil_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_ceil_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_ceil_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>) <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L432-L435","name":"CircleDeg1Lift.le_floor_map_map_zero","line":432,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_floor_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_floor_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_floor_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L429-L430","name":"CircleDeg1Lift.le_map_map_zero","line":429,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L424-L427","name":"CircleDeg1Lift.le_map_of_map_zero","line":424,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_of_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_of_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_map_of_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L418-L422","name":"CircleDeg1Lift.map_map_zero_lt","line":418,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_map_zero_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L413-L416","name":"CircleDeg1Lift.ceil_map_map_zero_le","line":413,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ceil_map_map_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ceil_map_map_zero_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">ceil_map_map_zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L408-L411","name":"CircleDeg1Lift.floor_map_map_zero_le","line":408,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_map_map_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_map_map_zero_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">floor_map_map_zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L405-L406","name":"CircleDeg1Lift.map_map_zero_le","line":405,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_map_zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L400-L403","name":"CircleDeg1Lift.map_le_of_map_zero","line":400,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_le_of_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_le_of_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_le_of_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L388-L388","name":"CircleDeg1Lift.pow_monotone","line":388,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_monotone\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">pow_monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>) =&gt; <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L385-L386","name":"CircleDeg1Lift.pow_mono","line":385,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">pow_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L382-L383","name":"CircleDeg1Lift.iterate_mono","line":382,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">(⇑<span class=\"fn\">g</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L379-L380","name":"CircleDeg1Lift.iterate_monotone","line":379,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_monotone\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>) =&gt; <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L375-L377","name":"CircleDeg1Lift.inf_apply","line":375,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.inf_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.inf_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">inf_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">g</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L371-L373","name":"CircleDeg1Lift.sup_apply","line":371,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.sup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.sup_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">sup_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">g</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L349-L369","name":"CircleDeg1Lift.instLattice","line":349,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instLattice","doc":"Monotone circle maps form a lattice with respect to the pointwise order "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instLattice\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instLattice</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L340-L342","name":"CircleDeg1Lift.map_fract_sub_fract_eq","line":340,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_fract_sub_fract_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_fract_sub_fract_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_fract_sub_fract_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L338-L338","name":"CircleDeg1Lift.map_int_of_map_zero","line":338,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_of_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_of_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_int_of_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L334-L336","name":"CircleDeg1Lift.map_sub_nat","line":334,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_sub_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L330-L332","name":"CircleDeg1Lift.map_nat_add","line":330,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_nat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_nat_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_nat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L326-L328","name":"CircleDeg1Lift.map_add_nat","line":326,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L322-L324","name":"CircleDeg1Lift.map_sub_int","line":322,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_sub_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L318-L320","name":"CircleDeg1Lift.map_add_int","line":318,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L314-L316","name":"CircleDeg1Lift.map_int_add","line":314,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_int_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L310-L312","name":"CircleDeg1Lift.commute_sub_int","line":310,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_sub_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L307-L308","name":"CircleDeg1Lift.commute_int_add","line":307,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_int_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_int_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_int_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L303-L305","name":"CircleDeg1Lift.commute_add_int","line":303,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L299-L301","name":"CircleDeg1Lift.commute_sub_nat","line":299,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_sub_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L296-L297","name":"CircleDeg1Lift.commute_add_nat","line":296,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_add_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L293-L294","name":"CircleDeg1Lift.commute_nat_add","line":293,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_nat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_nat_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_nat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L279-L282","name":"CircleDeg1Lift.translate_iterate","line":279,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_iterate\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(⇑<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">x</span>)</span>)</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>))</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L274-L277","name":"CircleDeg1Lift.translate_pow","line":274,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L269-L272","name":"CircleDeg1Lift.translate_zpow","line":269,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_zpow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L265-L267","name":"CircleDeg1Lift.translate_inv_apply","line":265,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_inv_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_inv_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">x</span>)</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L261-L263","name":"CircleDeg1Lift.translate_apply","line":261,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\">translate</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">x</span>)</span>)</span></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L251-L259","name":"CircleDeg1Lift.translate","line":251,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate","doc":"The map `y ↦ x + y` as a `CircleDeg1Lift`. More precisely, we define a homomorphism from\n`Multiplicative ℝ` to `CircleDeg1Liftˣ`, so the translation by `x` is\n`translation (Multiplicative.ofAdd x)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L243-L244","name":"CircleDeg1Lift.commute_iff_commute","line":243,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_iff_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_iff_commute\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_iff_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L239-L241","name":"CircleDeg1Lift.semiconjBy_iff_semiconj","line":239,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconjBy_iff_semiconj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconjBy_iff_semiconj\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconjBy_iff_semiconj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Semiconj/Defs.html#SemiconjBy\">SemiconjBy</a> <span class=\"fn\">f</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L233-L237","name":"CircleDeg1Lift.coe_pow","line":233,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L219-L231","name":"CircleDeg1Lift.isUnit_iff_bijective","line":219,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.isUnit_iff_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.isUnit_iff_bijective\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">isUnit_iff_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L215-L217","name":"CircleDeg1Lift.coe_toOrderIso_inv","line":215,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_inv\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderIso_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso\">toOrderIso</a> <span class=\"fn\">f</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L210-L213","name":"CircleDeg1Lift.coe_toOrderIso_symm","line":210,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_symm\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderIso_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso\">toOrderIso</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L206-L208","name":"CircleDeg1Lift.coe_toOrderIso","line":206,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso\">toOrderIso</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L195-L204","name":"CircleDeg1Lift.toOrderIso","line":195,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso","doc":"If a lift of a circle map is bijective, then it is an order automorphism of the line. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">toOrderIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L191-L193","name":"CircleDeg1Lift.units_apply_inv_apply","line":191,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_apply_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_apply_inv_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">units_apply_inv_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L187-L189","name":"CircleDeg1Lift.units_inv_apply_apply","line":187,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_inv_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_inv_apply_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">units_inv_apply_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L184-L185","name":"CircleDeg1Lift.unitsHasCoeToFun","line":184,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.unitsHasCoeToFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.unitsHasCoeToFun\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">unitsHasCoeToFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L180-L182","name":"CircleDeg1Lift.coe_one","line":180,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L177-L178","name":"CircleDeg1Lift.mul_apply","line":177,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L173-L175","name":"CircleDeg1Lift.coe_mul","line":173,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mul\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L171-L171","name":"CircleDeg1Lift.instInhabited","line":171,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instInhabited\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L162-L169","name":"CircleDeg1Lift.instMonoid","line":162,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instMonoid\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L158-L158","name":"CircleDeg1Lift.ext_iff","line":158,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L158-L160","name":"CircleDeg1Lift.ext","line":158,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L155-L156","name":"CircleDeg1Lift.map_one_add","line":155,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_one_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_one_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_one_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L151-L153","name":"CircleDeg1Lift.map_add_one","line":151,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L148-L149","name":"CircleDeg1Lift.strictMono_iff_injective","line":148,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.strictMono_iff_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.strictMono_iff_injective\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">strictMono_iff_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L146-L146","name":"CircleDeg1Lift.mono","line":146,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L144-L144","name":"CircleDeg1Lift.monotone","line":144,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.monotone\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L142-L142","name":"CircleDeg1Lift.coe_toOrderHom","line":142,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderHom\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderHom\">toOrderHom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L138-L138","name":"CircleDeg1Lift.coe_mk","line":138,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mk\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">{ <span class=\"fn\">toOrderHom</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_add_one'</span> := <span class=\"fn\">h</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L135-L136","name":"CircleDeg1Lift.instOrderHomClassReal","line":135,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instOrderHomClassReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instOrderHomClassReal\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instOrderHomClassReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L131-L133","name":"CircleDeg1Lift.instFunLikeReal","line":131,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instFunLikeReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instFunLikeReal\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instFunLikeReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L127-L127","name":"CircleDeg1Lift.map_add_one'","line":127,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_one'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L126-L126","name":"CircleDeg1Lift.mk","line":126,"kind":"ctor","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mk\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toOrderHom</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_add_one'</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toOrderHom</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toOrderHom</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L126-L127","name":"CircleDeg1Lift.toOrderHom","line":126,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderHom\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">toOrderHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L125-L127","name":"CircleDeg1Lift","line":125,"kind":"structure","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift","doc":"A lift of a monotone degree one map `S¹ → S¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\"><span class=\"name\">CircleDeg1Lift</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}