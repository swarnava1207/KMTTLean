{"name":"Mathlib.CategoryTheory.Comma.StructuredArrow.Functor","instances":[],"imports":["Init","Mathlib.CategoryTheory.Comma.StructuredArrow.Basic","Mathlib.CategoryTheory.Grothendieck"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L107-L107","name":"CategoryTheory.CostructuredArrow.preFunctor_app","line":107,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.preFunctor_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.preFunctor_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">preFunctor_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.preFunctor\">preFunctor</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.pre\">pre</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L104-L110","name":"CategoryTheory.CostructuredArrow.preFunctor","line":104,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.preFunctor","doc":"The functor `CostructuredArrow.pre` induces a natural transformation\n`CostructuredArrow.functor (S ⋙ T) ⟶ CostructuredArrow.functor T` for `S : C ⥤ D` and\n`T : D ⥤ E`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.preFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">preFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">T</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L99-L99","name":"CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj_inv_app","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">mapCompιCompGrothendieckProj_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow\">CostructuredArrow</a> <span class=\"fn\">L</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj\">mapCompιCompGrothendieckProj</a> <span class=\"fn\">L</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L99-L99","name":"CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj_hom_app","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">mapCompιCompGrothendieckProj_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow\">CostructuredArrow</a> <span class=\"fn\">L</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj\">mapCompιCompGrothendieckProj</a> <span class=\"fn\">L</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L97-L102","name":"CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj","line":97,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj","doc":"Functors between costructured arrow categories induced by morphisms in the base category\ncomposed with fibers of `grothendieckProj L` are isomorphic to the projection `proj L X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.mapCompιCompGrothendieckProj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">mapCompιCompGrothendieckProj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.map\">map</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.ι\">Grothendieck.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj\">grothendieckProj</a> <span class=\"fn\">L</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.proj\">proj</a> <span class=\"fn\">L</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L92-L92","name":"CategoryTheory.CostructuredArrow.ιCompGrothendieckProj_inv_app","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">ιCompGrothendieckProj_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj\">ιCompGrothendieckProj</a> <span class=\"fn\">L</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L92-L92","name":"CategoryTheory.CostructuredArrow.ιCompGrothendieckProj_hom_app","line":92,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">ιCompGrothendieckProj_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">D</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj\">ιCompGrothendieckProj</a> <span class=\"fn\">L</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L91-L95","name":"CategoryTheory.CostructuredArrow.ιCompGrothendieckProj","line":91,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj","doc":"Fibers of `grothendieckProj L` are isomorphic to the projection `proj L X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckProj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">ιCompGrothendieckProj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.ι\">Grothendieck.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj\">grothendieckProj</a> <span class=\"fn\">L</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.proj\">proj</a> <span class=\"fn\">L</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L87-L87","name":"CategoryTheory.CostructuredArrow.grothendieckProj_map","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckProj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj\">grothendieckProj</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.Hom.fiber\">fiber</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L87-L87","name":"CategoryTheory.CostructuredArrow.grothendieckProj_obj","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckProj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj\">grothendieckProj</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.fiber\">fiber</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L85-L89","name":"CategoryTheory.CostructuredArrow.grothendieckProj","line":85,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj","doc":"The functor projecting out the domain of arrows from the Grothendieck construction on\ncostructured arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckProj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckProj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L78-L78","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_unitIso","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_unitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorEquivalence_unitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence\">grothendieckPrecompFunctorEquivalence</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">NatIso.ofComponents</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L78-L78","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_counitIso","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_counitIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorEquivalence_counitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence\">grothendieckPrecompFunctorEquivalence</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">NatIso.ofComponents</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\">commaToGrothendieckPrecompFunctor</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span>)</span></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L78-L78","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_inverse","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_inverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorEquivalence_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence\">grothendieckPrecompFunctorEquivalence</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\">commaToGrothendieckPrecompFunctor</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L78-L78","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_functor","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorEquivalence_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence\">grothendieckPrecompFunctorEquivalence</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L75-L83","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence","line":75,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence","doc":"For `L : C ⥤ D`, taking the Grothendieck construction of `CostructuredArrow.functor L`\nprecomposed with another functor `R : E ⥤ D` results in a category which is equivalent to\nthe comma category `Comma L R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorEquivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L68-L68","name":"CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_map_base","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_map_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_map_base\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">commaToGrothendieckPrecompFunctor_map_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\">commaToGrothendieckPrecompFunctor</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.Hom.base\">base</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L68-L68","name":"CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_obj_fiber","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_obj_fiber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_obj_fiber\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">commaToGrothendieckPrecompFunctor_obj_fiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\">commaToGrothendieckPrecompFunctor</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.fiber\">fiber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.mk\">mk</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L68-L68","name":"CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_obj_base","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_obj_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_obj_base\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">commaToGrothendieckPrecompFunctor_obj_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\">commaToGrothendieckPrecompFunctor</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.base\">base</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L68-L68","name":"CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_map_fiber","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_map_fiber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor_map_fiber\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">commaToGrothendieckPrecompFunctor_map_fiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\">commaToGrothendieckPrecompFunctor</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.Hom.fiber\">fiber</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.homMk\">homMk</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L66-L73","name":"CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor","doc":"The inverse functor used to establish the equivalence `grothendieckPrecompFunctorEquivalence`\nbetween the Grothendieck construction on `CostructuredArrow.functor` and the comma category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.commaToGrothendieckPrecompFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">commaToGrothendieckPrecompFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L60-L60","name":"CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst_inv_app","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">ιCompGrothendieckPrecompFunctorToCommaCompFst_inv_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst\">ιCompGrothendieckPrecompFunctorToCommaCompFst</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L60-L60","name":"CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst_hom_app","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">ιCompGrothendieckPrecompFunctorToCommaCompFst_hom_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst\">ιCompGrothendieckPrecompFunctorToCommaCompFst</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L58-L64","name":"CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst","line":58,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst","doc":"Fibers of `grothendieckPrecompFunctorToComma L R`, composed with `Comma.fst L R`, are isomorphic\nto the projection `proj L (R.obj X)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.ιCompGrothendieckPrecompFunctorToCommaCompFst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">ιCompGrothendieckPrecompFunctorToCommaCompFst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.ι\">Grothendieck.ι</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.fst\">Comma.fst</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.proj\">proj</a> <span class=\"fn\">L</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L53-L53","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_map_left","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_map_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_map_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorToComma_map_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.Hom.fiber\">fiber</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L53-L53","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_hom","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorToComma_obj_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.fiber\">fiber</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L53-L53","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_right","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorToComma_obj_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.right\">right</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.base\">base</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L53-L53","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_left","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_obj_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorToComma_obj_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.fiber\">fiber</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.left\">left</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L53-L53","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_map_right","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_map_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma_map_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorToComma_map_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\">grothendieckPrecompFunctorToComma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck.Hom.base\">base</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L51-L56","name":"CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma","line":51,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma","doc":"The functor used to establish the equivalence `grothendieckPrecompFunctorEquivalence` between\nthe Grothendieck construction on `CostructuredArrow.functor` and the comma category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.grothendieckPrecompFunctorToComma\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">grothendieckPrecompFunctorToComma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u₃}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₃, u₃}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Grothendieck.html#CategoryTheory.Grothendieck\">Grothendieck</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">L</span>)</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma\">Comma</a> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L41-L41","name":"CategoryTheory.CostructuredArrow.functor_map","line":41,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">functor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow.map\">map</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L41-L41","name":"CategoryTheory.CostructuredArrow.functor_obj","line":41,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">functor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\">functor</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">Cat.of</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.CostructuredArrow\">CostructuredArrow</a> <span class=\"fn\">T</span> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L39-L46","name":"CategoryTheory.CostructuredArrow.functor","line":39,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor","doc":"The costructured arrow category `CostructuredArrow T d` depends on the chosen codomain `d : D`\nin a functorial way, inducing a functor `D ⥤ Cat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.CostructuredArrow.functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CostructuredArrow</span>.<span class=\"name\">functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L28-L28","name":"CategoryTheory.StructuredArrow.functor_map","line":28,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">StructuredArrow</span>.<span class=\"name\">functor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor\">functor</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.StructuredArrow.map\">map</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L28-L28","name":"CategoryTheory.StructuredArrow.functor_obj","line":28,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">StructuredArrow</span>.<span class=\"name\">functor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor\">functor</a> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">Cat.of</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Basic.html#CategoryTheory.StructuredArrow\">StructuredArrow</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">d</span>)</span> <span class=\"fn\">T</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.lean#L26-L33","name":"CategoryTheory.StructuredArrow.functor","line":26,"kind":"def","docLink":"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor","doc":"The structured arrow category `StructuredArrow d T` depends on the chosen domain `d : D` in a\nfunctorial way, inducing a functor `Dᵒᵖ ⥤ Cat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Comma/StructuredArrow/Functor.html#CategoryTheory.StructuredArrow.functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">StructuredArrow</span>.<span class=\"name\">functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">Cat</a></span></div></div>"}]}