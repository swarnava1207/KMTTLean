{"name":"Mathlib.Algebra.Category.MonCat.Adjunctions","instances":[{"typeNames":["MonCat","Semigrp"],"name":"MonCat.hasForgetToSemigroup","className":"CategoryTheory.HasForget₂"},{"typeNames":["AddMonCat","AddSemigrp"],"name":"AddMonCat.hasForgetToAddSemigroup","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget"],"name":"MonCat.instIsRightAdjointForget","className":"CategoryTheory.Functor.IsRightAdjoint"},{"typeNames":["AddCommMonCat.free"],"name":"AddCommMonCat.instIsLeftAdjointFree","className":"CategoryTheory.Functor.IsLeftAdjoint"},{"typeNames":["CategoryTheory.forget"],"name":"AddCommMonCat.instIsRightAdjointForget","className":"CategoryTheory.Functor.IsRightAdjoint"},{"typeNames":["CategoryTheory.forget"],"name":"CommMonCat.instIsRightAdjointForget","className":"CategoryTheory.Functor.IsRightAdjoint"}],"imports":["Init","Mathlib.Algebra.Category.MonCat.Basic","Mathlib.Algebra.Category.Semigrp.Basic","Mathlib.Algebra.FreeMonoid.Basic","Mathlib.Algebra.Group.WithOne.Basic","Mathlib.Data.Finsupp.Basic","Mathlib.Data.Finsupp.SMulWithZero","Mathlib.CategoryTheory.Adjunction.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L105-L106","name":"CommMonCat.instIsRightAdjointForget","line":105,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#CommMonCat.instIsRightAdjointForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#CommMonCat.instIsRightAdjointForget\"><span class=\"name\">CommMonCat</span>.<span class=\"name\">instIsRightAdjointForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#CommMonCat\">CommMonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Functor.IsRightAdjoint\">IsRightAdjoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L99-L99","name":"AddCommMonCat.instIsRightAdjointForget","line":99,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.instIsRightAdjointForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.instIsRightAdjointForget\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">instIsRightAdjointForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Functor.IsRightAdjoint\">IsRightAdjoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L97-L97","name":"AddCommMonCat.instIsLeftAdjointFree","line":97,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.instIsLeftAdjointFree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.instIsLeftAdjointFree\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">instIsLeftAdjointFree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free\">free</a>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Functor.IsLeftAdjoint\">IsLeftAdjoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L89-L95","name":"AddCommMonCat.adj","line":89,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.adj","doc":"The free-forgetful adjunction for commutative monoids. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.adj\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free\">free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L83-L83","name":"AddCommMonCat.free_map","line":83,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free_map\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">free_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free\">free</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Basic.html#Finsupp.mapDomain.addMonoidHom\">Finsupp.mapDomain.addMonoidHom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L83-L83","name":"AddCommMonCat.free_obj_coe","line":83,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free_obj_coe\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">free_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free\">free</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L81-L87","name":"AddCommMonCat.free","line":81,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free","doc":"The free functor `Type u ⥤ AddCommMonCat`\nsending a type `X` to the free commutative monoid on `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddCommMonCat.free\"><span class=\"name\">AddCommMonCat</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(Type</a> u) <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddCommMonCat\">AddCommMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L74-L75","name":"MonCat.instIsRightAdjointForget","line":74,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.instIsRightAdjointForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.instIsRightAdjointForget\"><span class=\"name\">MonCat</span>.<span class=\"name\">instIsRightAdjointForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Functor.IsRightAdjoint\">IsRightAdjoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L67-L67","name":"AddMonCat.adj","line":67,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adj","doc":"The free-forgetful adjunction for additive monoids."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adj\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.free\">free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L66-L72","name":"MonCat.adj","line":66,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adj","doc":"The free-forgetful adjunction for monoids. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adj\"><span class=\"name\">MonCat</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.free\">free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L59-L59","name":"AddMonCat.free","line":59,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.free","doc":"The free functor `Type u ⥤ AddMonCat` sending a type `X` to the free monoid on `X`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.free\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(Type</a> u) <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L58-L64","name":"MonCat.free","line":58,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.free","doc":"The free functor `Type u ⥤ MonCat` sending a type `X` to the free monoid on `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.free\"><span class=\"name\">MonCat</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(Type</a> u) <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L48-L48","name":"AddMonCat.adjoinZeroAdj","line":48,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj","doc":"The `adjoinZero`-forgetful adjunction from `AddSemigrp` to `AddMonCat`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZeroAdj\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZeroAdj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">adjoinZero</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L47-L56","name":"MonCat.adjoinOneAdj","line":47,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOneAdj","doc":"The `adjoinOne`-forgetful adjunction from `Semigrp` to `MonCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOneAdj\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOneAdj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\">adjoinOne</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L41-L41","name":"AddMonCat.hasForgetToAddSemigroup","line":41,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.hasForgetToAddSemigroup\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">hasForgetToAddSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L41-L45","name":"MonCat.hasForgetToSemigroup","line":41,"kind":"instance","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.hasForgetToSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.hasForgetToSemigroup\"><span class=\"name\">MonCat</span>.<span class=\"name\">hasForgetToSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L34-L34","name":"AddMonCat.adjoinZero_obj_coe","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_obj_coe\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">adjoinZero</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithZero\">WithZero</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L34-L34","name":"AddMonCat.adjoinZero_map","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero_map\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\">adjoinZero</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithZero.map\">WithZero.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp.Hom.hom\">AddSemigrp.Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L34-L34","name":"MonCat.adjoinOne_obj_coe","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_obj_coe\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOne_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\">adjoinOne</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithOne\">WithOne</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L34-L34","name":"MonCat.adjoinOne_map","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne_map\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOne_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\">adjoinOne</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/WithOne/Basic.html#WithOne.map\">WithOne.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp.Hom.hom\">Semigrp.Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L34-L34","name":"AddMonCat.adjoinZero","line":34,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero","doc":"The functor of adjoining a neutral element `zero` to a semigroup"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#AddMonCat.adjoinZero\"><span class=\"name\">AddMonCat</span>.<span class=\"name\">adjoinZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#AddSemigrp\">AddSemigrp</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#AddMonCat\">AddMonCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/MonCat/Adjunctions.lean#L33-L39","name":"MonCat.adjoinOne","line":33,"kind":"def","docLink":"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne","doc":"The functor of adjoining a neutral element `one` to a semigroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/MonCat/Adjunctions.html#MonCat.adjoinOne\"><span class=\"name\">MonCat</span>.<span class=\"name\">adjoinOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Semigrp/Basic.html#Semigrp\">Semigrp</a> <a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat\">MonCat</a></span></div></div>"}]}