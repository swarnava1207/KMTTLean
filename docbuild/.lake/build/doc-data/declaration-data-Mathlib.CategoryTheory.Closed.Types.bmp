{"name":"Mathlib.CategoryTheory.Closed.Types","instances":[{"typeNames":["CategoryTheory.MonoidalCategory.tensorLeft"],"name":"CategoryTheory.instIsLeftAdjointTensorLeft","className":"CategoryTheory.Functor.IsLeftAdjoint"},{"typeNames":["_builtin_typeu"],"name":"CategoryTheory.instCartesianClosedType","className":"CategoryTheory.MonoidalClosed"},{"typeNames":["CategoryTheory.Functor"],"name":"CategoryTheory.instCartesianClosedFunctorType","className":"CategoryTheory.MonoidalClosed"},{"typeNames":["CategoryTheory.Functor"],"name":"CategoryTheory.instCartesianClosedFunctorType_1","className":"CategoryTheory.MonoidalClosed"},{"typeNames":["CategoryTheory.Functor"],"name":"CategoryTheory.instCartesianClosedFunctorTypeOfEssentiallySmall","className":"CategoryTheory.MonoidalClosed"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Presheaf","Mathlib.CategoryTheory.Closed.Cartesian","Mathlib.CategoryTheory.Monoidal.Types.Basic","Mathlib.CategoryTheory.ChosenFiniteProducts.FunctorCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L72-L76","name":"CategoryTheory.instCartesianClosedFunctorTypeOfEssentiallySmall","line":72,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedFunctorTypeOfEssentiallySmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedFunctorTypeOfEssentiallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCartesianClosedFunctorTypeOfEssentiallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">EssentiallySmall.{v₁, v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Cartesian.html#CategoryTheory.CartesianClosed\">CartesianClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(Type</a> v₁))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L67-L68","name":"CategoryTheory.instCartesianClosedFunctorType_1","line":67,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedFunctorType_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedFunctorType_1\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCartesianClosedFunctorType_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Cartesian.html#CategoryTheory.CartesianClosed\">CartesianClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(Type</a> (max u₁ v₁)))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L55-L63","name":"CategoryTheory.cartesianClosedFunctorToTypes","line":55,"kind":"def","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.cartesianClosedFunctorToTypes","doc":"This is not a good instance because of the universe levels. Below is the instance where the\ntarget category is `Type (max u₁ v₁)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.cartesianClosedFunctorToTypes\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">cartesianClosedFunctorToTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Cartesian.html#CategoryTheory.CartesianClosed\">CartesianClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(Type</a> (max u₁ v₁ u₂)))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L45-L51","name":"CategoryTheory.instCartesianClosedFunctorType","line":45,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedFunctorType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedFunctorType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCartesianClosedFunctorType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> v₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Cartesian.html#CategoryTheory.CartesianClosed\">CartesianClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <a href=\"./foundational_types.html\">(Type</a> v₁))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L42-L43","name":"CategoryTheory.instCartesianClosedType","line":42,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instCartesianClosedType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCartesianClosedType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Closed/Cartesian.html#CategoryTheory.CartesianClosed\">CartesianClosed</a> <a href=\"./foundational_types.html\">(Type</a> v₁)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L39-L40","name":"CategoryTheory.instIsLeftAdjointTensorLeft","line":39,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instIsLeftAdjointTensorLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.instIsLeftAdjointTensorLeft\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instIsLeftAdjointTensorLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory.tensorLeft\">MonoidalCategory.tensorLeft</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Functor.IsLeftAdjoint\">IsLeftAdjoint</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Closed/Types.lean#L32-L37","name":"CategoryTheory.Types.tensorProductAdjunction","line":32,"kind":"def","docLink":"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.Types.tensorProductAdjunction","doc":"The adjunction `tensorLeft.obj X ⊣ coyoneda.obj (Opposite.op X)`\nfor any `X : Type v₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Closed/Types.html#CategoryTheory.Types.tensorProductAdjunction\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Types</span>.<span class=\"name\">tensorProductAdjunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory.tensorLeft\">MonoidalCategory.tensorLeft</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.coyoneda\">coyoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span>)</span></span></div></div>"}]}