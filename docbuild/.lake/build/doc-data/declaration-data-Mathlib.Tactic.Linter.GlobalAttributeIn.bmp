{"name":"Mathlib.Tactic.Linter.GlobalAttributeIn","instances":[],"imports":["Init","Lean.Elab.Command","Mathlib.Tactic.Linter.Header"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/GlobalAttributeIn.lean#L111-L127","name":"Mathlib.Linter.globalAttributeInLinter.globalAttributeIn","line":111,"kind":"def","docLink":"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.globalAttributeInLinter.globalAttributeIn","doc":"The `globalAttributeInLinter` linter flags any global attributes generated by an\n`attribute [...] in` declaration. (This includes the `instance`, `simp` and `ext` attributes.)\n\nDespite the `in`, these define *global* instances, which can be rather misleading.\nInstead, remove the `in` or mark them with `local`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.globalAttributeInLinter.globalAttributeIn\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">globalAttributeInLinter</span>.<span class=\"name\">globalAttributeIn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/GlobalAttributeIn.lean#L96-L109","name":"Mathlib.Linter.globalAttributeInLinter.getGlobalAttributesIn?","line":96,"kind":"def","docLink":"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.globalAttributeInLinter.getGlobalAttributesIn?","doc":"`getGlobalAttributesIn? cmd` assumes that `cmd` represents a `attribute [...] id in ...` command.\nIf this is the case, then it returns `(id, #[non-local nor scoped attributes])`.\nOtherwise, it returns `default`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.globalAttributeInLinter.getGlobalAttributesIn?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">globalAttributeInLinter</span>.<span class=\"name\">getGlobalAttributesIn?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`attr</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/GlobalAttributeIn.lean#L92-L94","name":"Mathlib.Linter.globalAttributeInLinter.getLinterGlobalAttributeIn","line":92,"kind":"def","docLink":"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.globalAttributeInLinter.getLinterGlobalAttributeIn","doc":"Gets the value of the `linter.globalAttributeIn` option. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.globalAttributeInLinter.getLinterGlobalAttributeIn\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">globalAttributeInLinter</span>.<span class=\"name\">getLinterGlobalAttributeIn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/GlobalAttributeIn.lean#L83-L88","name":"Mathlib.Linter.linter.globalAttributeIn","line":83,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.linter.globalAttributeIn","doc":"Lint on any occurrence of `attribute [...] name in` which is not `local` or `scoped`:\nthese are a footgun, as the attribute is applied *globally* (despite the `in`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/GlobalAttributeIn.html#Mathlib.Linter.linter.globalAttributeIn\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">globalAttributeIn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}