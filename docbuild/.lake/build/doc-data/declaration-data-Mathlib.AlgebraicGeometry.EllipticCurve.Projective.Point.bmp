{"name":"Mathlib.AlgebraicGeometry.EllipticCurve.Projective.Point","instances":[{"typeNames":["WeierstrassCurve.Projective.Point"],"name":"WeierstrassCurve.Projective.Point.instZeroOfNontrivial","className":"Zero"},{"typeNames":["WeierstrassCurve.Projective.Point"],"name":"WeierstrassCurve.Projective.Point.instNeg","className":"Neg"},{"typeNames":["WeierstrassCurve.Projective.Point"],"name":"WeierstrassCurve.Projective.Point.instAdd","className":"Add"},{"typeNames":["WeierstrassCurve.Projective.Point"],"name":"WeierstrassCurve.Projective.Point.instAddCommGroup","className":"AddCommGroup"}],"imports":["Init","Mathlib.AlgebraicGeometry.EllipticCurve.Group","Mathlib.AlgebraicGeometry.EllipticCurve.Projective.Formula"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L613-L616","name":"WeierstrassCurve.Affine.Point.toProjective","line":613,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Affine.Point.toProjective","doc":"An abbreviation for `WeierstrassCurve.Projective.Point.fromAffine` for dot notation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Affine.Point.toProjective\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Affine</span>.<span class=\"name\">Point</span>.<span class=\"name\">toProjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">WeierstrassCurve.toProjective</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L603-L609","name":"WeierstrassCurve.Projective.baseChange_add","line":603,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.baseChange_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.baseChange_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>) (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">Q</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L598-L601","name":"WeierstrassCurve.Projective.baseChange_neg","line":598,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.baseChange_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.baseChange_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L591-L596","name":"WeierstrassCurve.Projective.map_add","line":591,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.map_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.map_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>) (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">Q</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L585-L589","name":"WeierstrassCurve.Projective.map_neg","line":585,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.map_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.map_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L569-L579","name":"WeierstrassCurve.Projective.Point.instAddCommGroup","line":569,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instAddCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instAddCommGroup\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L552-L552","name":"WeierstrassCurve.Projective.Point.toAffineAddEquiv_symm_apply","line":552,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv_symm_apply\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineAddEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv\">toAffineAddEquiv</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine\">fromAffine</a> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L552-L552","name":"WeierstrassCurve.Projective.Point.toAffineAddEquiv_apply","line":552,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv_apply\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineAddEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv\">toAffineAddEquiv</a> <span class=\"fn\">W</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L550-L567","name":"WeierstrassCurve.Projective.Point.toAffineAddEquiv","line":550,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv","doc":"The addition-preserving equivalence between the type of nonsingular projective points on a\nWeierstrass curve `W` and the type of nonsingular points `W⟮F⟯` in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineAddEquiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L544-L547","name":"WeierstrassCurve.Projective.Point.toAffineLift_add","line":544,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Q</span>).<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L540-L542","name":"WeierstrassCurve.Projective.Point.toAffineLift_neg","line":540,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">P</span>).<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L536-L538","name":"WeierstrassCurve.Projective.Point.toAffineLift_some","line":536,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">h</span> }</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L532-L534","name":"WeierstrassCurve.Projective.Point.toAffineLift_of_Z_ne_zero","line":532,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">hP</span> }</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L529-L530","name":"WeierstrassCurve.Projective.Point.toAffineLift_zero","line":529,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L525-L527","name":"WeierstrassCurve.Projective.Point.toAffineLift_of_Z_eq_zero","line":525,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">hP</span> }</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L521-L523","name":"WeierstrassCurve.Projective.Point.toAffineLift_eq","line":521,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">hP</span> }</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\">toAffineLift</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L513-L519","name":"WeierstrassCurve.Projective.Point.toAffineLift","line":513,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift","doc":"The natural map from a nonsingular projective point on a Weierstrass curve `W` to its\ncorresponding nonsingular point in affine coordinates.\n\nIf `hP` is the nonsingular condition underlying a nonsingular projective point `P` on `W`, then\n`toAffineLift ⟨hP⟩` is definitionally equivalent to `toAffine W P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffineLift\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffineLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L485-L511","name":"WeierstrassCurve.Projective.Point.toAffine_add","line":485,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L464-L471","name":"WeierstrassCurve.Projective.Point.toAffine_neg","line":464,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L460-L462","name":"WeierstrassCurve.Projective.Point.toAffine_of_equiv","line":460,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L450-L458","name":"WeierstrassCurve.Projective.Point.toAffine_smul","line":450,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_smul\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L446-L448","name":"WeierstrassCurve.Projective.Point.toAffine_some","line":446,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L442-L444","name":"WeierstrassCurve.Projective.Point.toAffine_of_Z_ne_zero","line":442,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L439-L440","name":"WeierstrassCurve.Projective.Point.toAffine_zero","line":439,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L436-L437","name":"WeierstrassCurve.Projective.Point.toAffine_of_Z_eq_zero","line":436,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L433-L434","name":"WeierstrassCurve.Projective.Point.toAffine_of_singular","line":433,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_singular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine_of_singular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine_of_singular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\">toAffine</a> <span class=\"fn\">W</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L428-L431","name":"WeierstrassCurve.Projective.Point.toAffine","line":428,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine","doc":"The natural map from a nonsingular projective point representative on a Weierstrass curve to its\ncorresponding nonsingular point in affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.toAffine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L421-L422","name":"WeierstrassCurve.Projective.Point.add_point","line":421,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add_point","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add_point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Q</span>).<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span> <span class=\"fn\"><span class=\"fn\">Q</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L418-L419","name":"WeierstrassCurve.Projective.Point.add_def","line":418,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add\">add</a></span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L415-L416","name":"WeierstrassCurve.Projective.Point.instAdd","line":415,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instAdd\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L409-L413","name":"WeierstrassCurve.Projective.Point.add","line":409,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add","doc":"The addition of two nonsingular projective points on a Weierstrass curve `W`.\n\nGiven two nonsingular projective points `P` and `Q` on `W`, use `P + Q` instead of `add P Q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L406-L407","name":"WeierstrassCurve.Projective.Point.neg_point","line":406,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg_point","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg_point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">P</span>).<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap\">negMap</a></span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L403-L404","name":"WeierstrassCurve.Projective.Point.neg_def","line":403,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg\">neg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L400-L401","name":"WeierstrassCurve.Projective.Point.instNeg","line":400,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instNeg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L394-L398","name":"WeierstrassCurve.Projective.Point.neg","line":394,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg","doc":"The negation of a nonsingular projective point on a Weierstrass curve `W`.\n\nGiven a nonsingular projective point `P` on `W`, use `-P` instead of `neg P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L392-L392","name":"WeierstrassCurve.Projective.Point.fromAffine_ne_zero","line":392,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_ne_zero","doc":"**Alias** of `WeierstrassCurve.Projective.Point.fromAffine_some_ne_zero`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">fromAffine_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine\">fromAffine</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L388-L390","name":"WeierstrassCurve.Projective.Point.fromAffine_some_ne_zero","line":388,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_some_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_some_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">fromAffine_some_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine\">fromAffine</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L384-L386","name":"WeierstrassCurve.Projective.Point.fromAffine_some","line":384,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">fromAffine_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine\">fromAffine</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point.some\">Affine.Point.some</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L381-L382","name":"WeierstrassCurve.Projective.Point.fromAffine_zero","line":381,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">fromAffine_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine\">fromAffine</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L375-L379","name":"WeierstrassCurve.Projective.Point.fromAffine","line":375,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine","doc":"The natural map from a nonsingular point on a Weierstrass curve in affine coordinates to its\ncorresponding nonsingular projective point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.fromAffine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">fromAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">Projective.toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Point\">Point</a></span> → <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L372-L373","name":"WeierstrassCurve.Projective.Point.mk_ne_zero","line":372,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.mk_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.mk_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">mk_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">h</span> }</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L369-L370","name":"WeierstrassCurve.Projective.Point.zero_point","line":369,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.zero_point","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.zero_point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L366-L367","name":"WeierstrassCurve.Projective.Point.zero_def","line":366,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.zero_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L363-L364","name":"WeierstrassCurve.Projective.Point.instZeroOfNontrivial","line":363,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instZeroOfNontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.instZeroOfNontrivial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">instZeroOfNontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L360-L361","name":"WeierstrassCurve.Projective.Point.mk_point","line":360,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.mk_point","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.mk_point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">mk_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">point</span> := <span class=\"fn\">P</span>, <span class=\"fn\">nonsingular</span> := <span class=\"fn\">h</span> }</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L356-L356","name":"WeierstrassCurve.Projective.Point.nonsingular","line":356,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.nonsingular","doc":"The nonsingular condition underlying a nonsingular projective point on `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L354-L354","name":"WeierstrassCurve.Projective.Point.point","line":354,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point","doc":"The projective point class underlying a nonsingular projective point on `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L352-L352","name":"WeierstrassCurve.Projective.Point.mk","line":352,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.mk\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">point</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonsingular</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">point</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L351-L351","name":"WeierstrassCurve.Projective.Point.ext","line":351,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.ext\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">point</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L351-L351","name":"WeierstrassCurve.Projective.Point.ext_iff","line":351,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.ext_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\">Point</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point.point\">point</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L350-L356","name":"WeierstrassCurve.Projective.Point","line":350,"kind":"structure","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point","doc":"A nonsingular projective point on a Weierstrass curve `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.Point\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> r</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L342-L345","name":"WeierstrassCurve.Projective.nonsingularLift_addMap","line":342,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingularLift_addMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingularLift_addMap\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingularLift_addMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L330-L340","name":"WeierstrassCurve.Projective.addMap_of_Z_ne_zero","line":330,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addMap_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.negY\">negY</a></span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">Q</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>))</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>))</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>       <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L321-L328","name":"WeierstrassCurve.Projective.addMap_of_Y_eq","line":321,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addMap_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy'</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.negY\">negY</a></span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">Q</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L310-L319","name":"WeierstrassCurve.Projective.addMap_of_Z_eq_zero_right","line":310,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Z_eq_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Z_eq_zero_right\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addMap_of_Z_eq_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\">P</span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">Q</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L299-L308","name":"WeierstrassCurve.Projective.addMap_of_Z_eq_zero_left","line":299,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Z_eq_zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_of_Z_eq_zero_left\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addMap_of_Z_eq_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L296-L297","name":"WeierstrassCurve.Projective.addMap_eq","line":296,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addMap_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\">addMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">Q</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L289-L294","name":"WeierstrassCurve.Projective.addMap","line":289,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap","doc":"The addition of two projective point classes on a Weierstrass curve `W`.\n\nIf `P` and `Q` are two projective point representatives on `W`, then `W.addMap ⟦P⟧ ⟦Q⟧` is\ndefinitionally equivalent to `W.add P Q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addMap\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L263-L286","name":"WeierstrassCurve.Projective.nonsingular_add","line":263,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingular_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingular_add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L245-L251","name":"WeierstrassCurve.Projective.add_of_X_ne","line":245,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_X_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_X_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_X_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addZ\">addZ</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a>     <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>))</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>))</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>       <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L235-L243","name":"WeierstrassCurve.Projective.add_of_Y_ne'","line":235,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Y_ne'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Y_ne'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_Y_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.negY\">negY</a></span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblZ\">dblZ</a></span> <span class=\"fn\">P</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a>     <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addX\">addX</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>))</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.addY\">addY</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.slope\">slope</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>))</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>       <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L230-L233","name":"WeierstrassCurve.Projective.add_of_Y_ne","line":230,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addU\">addU</a> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L225-L228","name":"WeierstrassCurve.Projective.add_of_Y_eq","line":225,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy'</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.negY\">negY</a></span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblU\">dblU</a></span> <span class=\"fn\">P</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L221-L223","name":"WeierstrassCurve.Projective.add_of_Z_eq_zero_right","line":221,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Z_eq_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Z_eq_zero_right\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_Z_eq_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a>(<span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L217-L219","name":"WeierstrassCurve.Projective.add_of_Z_eq_zero_left","line":217,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Z_eq_zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Z_eq_zero_left\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_Z_eq_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L213-L215","name":"WeierstrassCurve.Projective.add_of_Z_eq_zero","line":213,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L208-L211","name":"WeierstrassCurve.Projective.add_equiv","line":208,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">P' </span><span class=\"fn\">Q </span><span class=\"fn\">Q'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">P'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\">Q</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P'</span> <span class=\"fn\">Q'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L202-L206","name":"WeierstrassCurve.Projective.add_smul_equiv","line":202,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_smul_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_smul_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_smul_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) (<span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Q</span>)</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L198-L200","name":"WeierstrassCurve.Projective.add_smul_of_not_equiv","line":198,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_smul_of_not_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_smul_of_not_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_smul_of_not_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) (<span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Q</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">v</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L195-L196","name":"WeierstrassCurve.Projective.add_of_not_equiv","line":195,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_not_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_not_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_not_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addXYZ\">addXYZ</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L192-L193","name":"WeierstrassCurve.Projective.add_of_eq","line":192,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblXYZ\">dblXYZ</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L189-L190","name":"WeierstrassCurve.Projective.add_self","line":189,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_self\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblXYZ\">dblXYZ</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L185-L187","name":"WeierstrassCurve.Projective.add_smul_of_equiv","line":185,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_smul_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_smul_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_smul_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) (<span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Q</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L182-L183","name":"WeierstrassCurve.Projective.add_of_equiv","line":182,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\">add</a></span> <span class=\"fn\">P</span> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblXYZ\">dblXYZ</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L178-L180","name":"WeierstrassCurve.Projective.add","line":178,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add","doc":"The addition of two projective point representatives on a Weierstrass curve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.add\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L169-L172","name":"WeierstrassCurve.Projective.nonsingularLift_negMap","line":169,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingularLift_negMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingularLift_negMap\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingularLift_negMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap\">negMap</a></span> <span class=\"fn\">P</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L165-L167","name":"WeierstrassCurve.Projective.negMap_of_Z_ne_zero","line":165,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">negMap_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap\">negMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L161-L163","name":"WeierstrassCurve.Projective.negMap_of_Z_eq_zero","line":161,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">negMap_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap\">negMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L158-L159","name":"WeierstrassCurve.Projective.negMap_eq","line":158,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">negMap_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap\">negMap</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L151-L156","name":"WeierstrassCurve.Projective.negMap","line":151,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap","doc":"The negation of a projective point class on a Weierstrass curve `W`.\n\nIf `P` is a projective point representative on `W`, then `W.negMap ⟦P⟧` is definitionally equivalent\nto `W.neg P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negMap\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">negMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L146-L148","name":"WeierstrassCurve.Projective.addXYZ_neg","line":146,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addXYZ_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addXYZ_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addXYZ_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addXYZ\">addXYZ</a></span> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblZ\">dblZ</a></span> <span class=\"fn\">P</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L143-L144","name":"WeierstrassCurve.Projective.addY_neg","line":143,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addY_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addY_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addY_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addY\">addY</a></span> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblZ\">dblZ</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L139-L141","name":"WeierstrassCurve.Projective.negAddY_neg","line":139,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negAddY_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.negAddY_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">negAddY_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.negAddY\">negAddY</a></span> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.dblZ\">dblZ</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L135-L137","name":"WeierstrassCurve.Projective.addX_neg","line":135,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addX_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addX_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addX_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addX\">addX</a></span> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L131-L133","name":"WeierstrassCurve.Projective.addZ_neg","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addZ_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.addZ_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">addZ_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.addZ\">addZ</a></span> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L124-L129","name":"WeierstrassCurve.Projective.nonsingular_neg","line":124,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingular_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.nonsingular_neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L114-L117","name":"WeierstrassCurve.Projective.neg_of_Z_ne_zero","line":114,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.negY\">negY</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L109-L112","name":"WeierstrassCurve.Projective.neg_of_Z_eq_zero","line":109,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L105-L107","name":"WeierstrassCurve.Projective.neg_equiv","line":105,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L102-L103","name":"WeierstrassCurve.Projective.neg_smul_equiv","line":102,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_smul_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_smul_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_smul_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L99-L100","name":"WeierstrassCurve.Projective.neg_smul","line":99,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_smul\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L96-L97","name":"WeierstrassCurve.Projective.neg_Z","line":96,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_Z","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_Z\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_Z</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L93-L94","name":"WeierstrassCurve.Projective.neg_Y","line":93,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_Y","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_Y\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_Y</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Formula.html#WeierstrassCurve.Projective.negY\">negY</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L90-L91","name":"WeierstrassCurve.Projective.neg_X","line":90,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg_X\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\">neg</a></span> <span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.lean#L86-L88","name":"WeierstrassCurve.Projective.neg","line":86,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg","doc":"The negation of a projective point representative on a Weierstrass curve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Point.html#WeierstrassCurve.Projective.neg\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span></div></div>"}]}