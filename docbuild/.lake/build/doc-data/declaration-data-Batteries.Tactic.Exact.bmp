{"name":"Batteries.Tactic.Exact","instances":[],"imports":["Init","Lean.Meta.Tactic.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/c509e875522185203ad651695f27ab05a0109158/Batteries/Tactic/Exact.lean#L12-L19","name":"Lean.MVarId.assignIfDefeq","line":12,"kind":"def","docLink":"./Batteries/Tactic/Exact.html#Lean.MVarId.assignIfDefeq","doc":"`MetaM` version of `Lean.Elab.Tactic.evalExact`: add `mvarId := x` to the metavariable assignment.\nThis method wraps `Lean.MVarId.assign`, checking whether `mvarId` is already assigned, and whether\nthe expression has the right type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Tactic/Exact.html#Lean.MVarId.assignIfDefeq\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">assignIfDefeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}