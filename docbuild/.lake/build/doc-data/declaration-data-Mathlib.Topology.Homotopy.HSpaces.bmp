{"name":"Mathlib.Topology.Homotopy.HSpaces","instances":[{"typeNames":["Prod"],"name":"HSpace.prod","className":"HSpace"},{"typeNames":[],"name":"IsTopologicalGroup.hSpace","className":"HSpace"},{"typeNames":[],"name":"IsTopologicalAddGroup.hSpace","className":"HSpace"},{"typeNames":["Path"],"name":"Path.instHSpace","className":"HSpace"}],"imports":["Init","Mathlib.Topology.CompactOpen","Mathlib.Topology.Homotopy.Basic","Mathlib.Topology.Path"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L232-L249","name":"Path.instHSpace","line":232,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.instHSpace","doc":"The loop space at x carries a structure of an H-space. Note that the field `eHmul`\n(resp. `hmulE`) neither implies nor is implied by `Path.Homotopy.reflTrans`\n(resp. `Path.Homotopy.transRefl`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.instHSpace\"><span class=\"name\">Path</span>.<span class=\"name\">instHSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L229-L230","name":"Path.delayReflLeft_one","line":229,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_one\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflLeft_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\">delayReflLeft</a> <span class=\"fn\">1</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L226-L227","name":"Path.delayReflLeft_zero","line":226,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_zero\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\">delayReflLeft</a> <span class=\"fn\">0</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Path.html#Path.refl\">refl</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L221-L224","name":"Path.continuous_delayReflLeft","line":221,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflLeft\"><span class=\"name\">Path</span>.<span class=\"name\">continuous_delayReflLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\">delayReflLeft</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L216-L219","name":"Path.delayReflLeft","line":216,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft","doc":"This is the function on p. 475 of [serre1951], defining a homotopy from a path `γ` to the\nproduct path `e ∧ γ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L212-L214","name":"Path.delayReflRight_one","line":212,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_one\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflRight_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\">delayReflRight</a> <span class=\"fn\">1</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L203-L210","name":"Path.delayReflRight_zero","line":203,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_zero\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\">delayReflRight</a> <span class=\"fn\">0</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Path.html#Path.refl\">refl</a> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L198-L201","name":"Path.continuous_delayReflRight","line":198,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflRight\"><span class=\"name\">Path</span>.<span class=\"name\">continuous_delayReflRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\">delayReflRight</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L188-L196","name":"Path.delayReflRight","line":188,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight","doc":"This is the function analogous to the one on p. 475 of [serre1951], defining a homotopy from\nthe product path `γ ∧ e` to `γ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L177-L178","name":"unitInterval.qRight_one_right","line":177,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_right\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_one_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">qRight</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">t</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L166-L175","name":"unitInterval.qRight_zero_right","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_right\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">qRight</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">t</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L158-L164","name":"unitInterval.qRight_one_left","line":158,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_left\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_one_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">qRight</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">θ</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L155-L156","name":"unitInterval.qRight_zero_left","line":155,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_left\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_zero_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">qRight</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">θ</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L150-L153","name":"unitInterval.continuous_qRight","line":150,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.continuous_qRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.continuous_qRight\"><span class=\"name\">unitInterval</span>.<span class=\"name\">continuous_qRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">qRight</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L145-L148","name":"unitInterval.qRight","line":145,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight","doc":"`qRight` is analogous to the function `Q` defined on p. 475 of [serre1951] that helps proving\ncontinuity of `delayReflRight`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L129-L131","name":"IsTopologicalGroup.one_eq_hSpace_e","line":129,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalGroup.one_eq_hSpace_e","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalGroup.one_eq_hSpace_e\"><span class=\"name\">IsTopologicalGroup</span>.<span class=\"name\">one_eq_hSpace_e</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">HSpace.e</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L124-L124","name":"IsTopologicalAddGroup.hSpace","line":124,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalAddGroup.hSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalAddGroup.hSpace\"><span class=\"name\">IsTopologicalAddGroup</span>.<span class=\"name\">hSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L124-L127","name":"IsTopologicalGroup.hSpace","line":124,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalGroup.hSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalGroup.hSpace\"><span class=\"name\">IsTopologicalGroup</span>.<span class=\"name\">hSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L112-L116","name":"IsTopologicalAddGroup.toHSpace","line":112,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalAddGroup.toHSpace","doc":"The definition `toHSpace` is not an instance because it comes together with a\nmultiplicative version which would lead to a diamond since a topological field would inherit\ntwo `HSpace` structures, one from the `MulOneClass` and one from the `AddZeroClass`.\nIn the case of an additive group, we make `IsTopologicalAddGroup.hSpace` an instance."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalAddGroup.toHSpace\"><span class=\"name\">IsTopologicalAddGroup</span>.<span class=\"name\">toHSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid/Defs.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L108-L122","name":"IsTopologicalGroup.toHSpace","line":108,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalGroup.toHSpace","doc":"The definition `toHSpace` is not an instance because its additive version would\nlead to a diamond since a topological field would inherit two `HSpace` structures, one from the\n`MulOneClass` and one from the `AddZeroClass`. In the case of a group, we make\n`IsTopologicalGroup.hSpace` an instance.\" "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#IsTopologicalGroup.toHSpace\"><span class=\"name\">IsTopologicalGroup</span>.<span class=\"name\">toHSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid/Defs.html#ContinuousMul\">ContinuousMul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L75-L103","name":"HSpace.prod","line":75,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.prod\"><span class=\"name\">HSpace</span>.<span class=\"name\">prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> (<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L70-L71","name":"HSpaces.«term_⋀_»","line":70,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpaces.«term_⋀_»","doc":"The binary operation `hmul` on an `H`-space "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpaces.«term_⋀_»\"><span class=\"name\">HSpaces</span>.<span class=\"name\">«term_⋀_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L67-L67","name":"HSpace.hmulE","line":67,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmulE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmulE\"><span class=\"name\">HSpace</span>.<span class=\"name\">hmulE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul\">hmul</a>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk\">prodMk</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel\">HomotopyRel</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L65-L65","name":"HSpace.eHmul","line":65,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.eHmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.eHmul\"><span class=\"name\">HSpace</span>.<span class=\"name\">eHmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul\">hmul</a>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk\">prodMk</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel\">HomotopyRel</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L64-L64","name":"HSpace.hmul_e_e","line":64,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul_e_e","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul_e_e\"><span class=\"name\">HSpace</span>.<span class=\"name\">hmul_e_e</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul\">hmul</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\">e</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L63-L63","name":"HSpace.e","line":63,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\"><span class=\"name\">HSpace</span>.<span class=\"name\">e</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L62-L62","name":"HSpace.hmul","line":62,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul\"><span class=\"name\">HSpace</span>.<span class=\"name\">hmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L61-L61","name":"HSpace.mk","line":61,"kind":"ctor","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.mk\"><span class=\"name\">HSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmul</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmul_e_e</span> : <span class=\"fn\"><span class=\"fn\">hmul</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">e</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">e</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">e</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eHmul</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hmul</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk\">prodMk</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel\">HomotopyRel</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmulE</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hmul</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk\">prodMk</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <span class=\"fn\">e</span>)</span>)</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.HomotopyRel\">HomotopyRel</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span>)</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">e</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/HSpaces.lean#L58-L68","name":"HSpace","line":58,"kind":"class","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace","doc":"A topological space `X` is an H-space if it behaves like a (potentially non-associative)\ntopological group, but where the axioms for a group only hold up to homotopy.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\"><span class=\"name\">HSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}