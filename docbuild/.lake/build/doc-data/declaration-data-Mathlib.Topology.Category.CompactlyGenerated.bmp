{"name":"Mathlib.Topology.Category.CompactlyGenerated","instances":[{"typeNames":["CompactlyGenerated"],"name":"CompactlyGenerated.instInhabited","className":"Inhabited"},{"typeNames":["CompactlyGenerated","_builtin_typeu"],"name":"CompactlyGenerated.instCoeSortType","className":"CoeSort"},{"typeNames":["CompactlyGenerated"],"name":"CompactlyGenerated.instCategory","className":"CategoryTheory.Category"},{"typeNames":["CompactlyGenerated"],"name":"CompactlyGenerated.instConcreteCategoryContinuousMapCarrierToTop","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CompactlyGenerated.compactlyGeneratedToTop"],"name":"CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop","className":"CategoryTheory.Functor.Full"},{"typeNames":["CompactlyGenerated.compactlyGeneratedToTop"],"name":"CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop","className":"CategoryTheory.Functor.Faithful"}],"imports":["Init","Mathlib.Topology.Compactness.CompactlyGeneratedSpace","Mathlib.CategoryTheory.Elementwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L104-L104","name":"CompactlyGenerated.isoEquivHomeo_apply","line":104,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoEquivHomeo_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo\">isoEquivHomeo</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\">homeoOfIso</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L104-L104","name":"CompactlyGenerated.isoEquivHomeo_symm_apply","line":104,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_symm_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoEquivHomeo_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo\">isoEquivHomeo</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\">isoOfHomeo</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L102-L113","name":"CompactlyGenerated.isoEquivHomeo","line":102,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo","doc":"The equivalence between isomorphisms in `CompactlyGenerated` and homeomorphisms\nof topological spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoEquivHomeo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L93-L93","name":"CompactlyGenerated.homeoOfIso_apply","line":93,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">homeoOfIso_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\">homeoOfIso</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L93-L93","name":"CompactlyGenerated.homeoOfIso_symm_apply","line":93,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_symm_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">homeoOfIso_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\">homeoOfIso</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L92-L100","name":"CompactlyGenerated.homeoOfIso","line":92,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso","doc":"Construct a homeomorphism from an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">homeoOfIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L81-L81","name":"CompactlyGenerated.isoOfHomeo_hom","line":81,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_hom\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoOfHomeo_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\">isoOfHomeo</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.ofHom\">ofHom</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">f</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L81-L81","name":"CompactlyGenerated.isoOfHomeo_inv","line":81,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_inv\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoOfHomeo_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\">isoOfHomeo</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.ofHom\">ofHom</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L80-L90","name":"CompactlyGenerated.isoOfHomeo","line":80,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo","doc":"Construct an isomorphism from a homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoOfHomeo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L78-L78","name":"CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop","line":78,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instFaithfulTopCatCompactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">compactlyGeneratedToTop</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L76-L76","name":"CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop","line":76,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instFullTopCatCompactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">compactlyGeneratedToTop</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L72-L74","name":"CompactlyGenerated.fullyFaithfulCompactlyGeneratedToTop","line":72,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.fullyFaithfulCompactlyGeneratedToTop","doc":"`compactlyGeneratedToTop` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.fullyFaithfulCompactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">fullyFaithfulCompactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">compactlyGeneratedToTop</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L68-L68","name":"CompactlyGenerated.compactlyGeneratedToTop_obj","line":68,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_obj\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">compactlyGeneratedToTop_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">compactlyGeneratedToTop</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L68-L68","name":"CompactlyGenerated.compactlyGeneratedToTop_map","line":68,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_map\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">compactlyGeneratedToTop_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">compactlyGeneratedToTop</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L67-L70","name":"CompactlyGenerated.compactlyGeneratedToTop","line":67,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop","doc":"The fully faithful embedding of `CompactlyGenerated` in `TopCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">compactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L62-L63","name":"CompactlyGenerated.ofHom","line":62,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.ofHom","doc":"Typecheck a `ContinuousMap` as a morphism in `CompactlyGenerated`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.ofHom\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyGeneratedSpace.html#UCompactlyGeneratedSpace\">UCompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyGeneratedSpace.html#UCompactlyGeneratedSpace\">UCompactlyGeneratedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L53-L56","name":"CompactlyGenerated.of","line":53,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.of","doc":"Constructor for objects of the category `CompactlyGenerated`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.of\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyGeneratedSpace.html#UCompactlyGeneratedSpace\">UCompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L48-L49","name":"CompactlyGenerated.instConcreteCategoryContinuousMapCarrierToTop","line":48,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instConcreteCategoryContinuousMapCarrierToTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instConcreteCategoryContinuousMapCarrierToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instConcreteCategoryContinuousMapCarrierToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>) =&gt; <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L45-L46","name":"CompactlyGenerated.instCategory","line":45,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCategory\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w, w + 1}</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L40-L41","name":"CompactlyGenerated.instCoeSortType","line":40,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCoeSortType\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L37-L38","name":"CompactlyGenerated.instInhabited","line":37,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instInhabited\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L33-L33","name":"CompactlyGenerated.is_compactly_generated","line":33,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.is_compactly_generated","doc":"The underlying topological space is compactly generated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.is_compactly_generated\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">is_compactly_generated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyGeneratedSpace.html#UCompactlyGeneratedSpace\">UCompactlyGeneratedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L31-L31","name":"CompactlyGenerated.toTop","line":31,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop","doc":"The underlying topological space of an object of `CompactlyGenerated`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">toTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L29-L29","name":"CompactlyGenerated.mk","line":29,"kind":"ctor","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.mk\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toTop</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">is_compactly_generated</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyGeneratedSpace.html#UCompactlyGeneratedSpace\">UCompactlyGeneratedSpace</a> <span class=\"fn\">↑<span class=\"fn\">toTop</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/CompactlyGenerated.lean#L27-L33","name":"CompactlyGenerated","line":27,"kind":"structure","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated","doc":"`CompactlyGenerated.{u, w}` is the type of `u`-compactly generated `w`-small topological spaces.\nThis should always be used with explicit universe parameters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\"><span class=\"name\">CompactlyGenerated</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (w + 1)</div></div>"}]}