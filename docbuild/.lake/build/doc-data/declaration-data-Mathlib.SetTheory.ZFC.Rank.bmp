{"name":"Mathlib.SetTheory.ZFC.Rank","instances":[],"imports":["Init","Mathlib.Logic.UnivLE","Mathlib.SetTheory.Ordinal.Rank","Mathlib.SetTheory.ZFC.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L204-L213","name":"ZFSet.rank_eq_wfRank","line":204,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_eq_wfRank","doc":"`ZFSet.rank` is equal to the `IsWellFounded.rank` over `∈`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_eq_wfRank\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_eq_wfRank</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{u + 1, u}</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Rank.html#IsWellFounded.rank\">IsWellFounded.rank</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L197-L202","name":"ZFSet.rank_range","line":197,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_range\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u_1}</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.range\">range</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L188-L195","name":"ZFSet.le_succ_rank_sUnion","line":188,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.le_succ_rank_sUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.le_succ_rank_sUnion\"><span class=\"name\">ZFSet</span>.<span class=\"name\">le_succ_rank_sUnion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L180-L186","name":"ZFSet.rank_sUnion_le","line":180,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_sUnion_le","doc":"For the rank of `⋃₀ x`, we only have `rank (⋃₀ x) ≤ rank x ≤ rank (⋃₀ x) + 1`.\n\nThis inequality is split into `rank_sUnion_le` and `le_succ_rank_sUnion`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_sUnion_le\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_sUnion_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L176-L178","name":"ZFSet.rank_powerset","line":176,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_powerset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_powerset\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_powerset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet.powerset\">powerset</a></span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L168-L174","name":"ZFSet.rank_union","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_union\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_union</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">y</span>).<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L165-L166","name":"ZFSet.rank_pair","line":165,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_pair\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_pair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Core.html#Insert.insert\">}</a>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L161-L163","name":"ZFSet.rank_singleton","line":161,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_singleton\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_singleton</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L157-L159","name":"ZFSet.rank_insert","line":157,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_insert\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L154-L155","name":"ZFSet.rank_empty","line":154,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_empty\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L151-L152","name":"ZFSet.rank_mono","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_mono\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L147-L149","name":"ZFSet.lt_rank_iff","line":147,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.lt_rank_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.lt_rank_iff\"><span class=\"name\">ZFSet</span>.<span class=\"name\">lt_rank_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">y</span> ∈ <span class=\"fn\">x</span>, <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L142-L145","name":"ZFSet.rank_le_iff","line":142,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_le_iff\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>⦄, <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L139-L140","name":"ZFSet.rank_lt_of_mem","line":139,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_lt_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank_lt_of_mem\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank_lt_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L135-L137","name":"ZFSet.rank","line":135,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank","doc":"The ordinal rank of a ZFC set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#ZFSet.rank\"><span class=\"name\">ZFSet</span>.<span class=\"name\">rank</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/Basic.html#ZFSet\">ZFSet.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L116-L125","name":"PSet.rank_eq_wfRank","line":116,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_eq_wfRank","doc":"`PSet.rank` is equal to the `IsWellFounded.rank` over `∈`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_eq_wfRank\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_eq_wfRank</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{u + 1, u}</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Rank.html#IsWellFounded.rank\">IsWellFounded.rank</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L106-L114","name":"PSet.le_succ_rank_sUnion","line":106,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.le_succ_rank_sUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.le_succ_rank_sUnion\"><span class=\"name\">PSet</span>.<span class=\"name\">le_succ_rank_sUnion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L98-L104","name":"PSet.rank_sUnion_le","line":98,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_sUnion_le","doc":"For the rank of `⋃₀ x`, we only have `rank (⋃₀ x) ≤ rank x ≤ rank (⋃₀ x) + 1`.\n\nThis inequality is split into `rank_sUnion_le` and `le_succ_rank_sUnion`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_sUnion_le\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_sUnion_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.sUnion\">⋃₀</a> <span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L88-L96","name":"PSet.rank_powerset","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_powerset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_powerset\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_powerset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.powerset\">powerset</a></span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L85-L86","name":"PSet.rank_pair","line":85,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_pair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_pair\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_pair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Core.html#Insert.insert\">}</a>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L81-L83","name":"PSet.rank_singleton","line":81,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_singleton\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_singleton</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L70-L79","name":"PSet.rank_insert","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_insert\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L67-L68","name":"PSet.rank_empty","line":67,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_empty\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L64-L65","name":"PSet.rank_mono","line":64,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_mono\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L58-L60","name":"PSet.lt_rank_iff","line":58,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.lt_rank_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.lt_rank_iff\"><span class=\"name\">PSet</span>.<span class=\"name\">lt_rank_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">y</span> ∈ <span class=\"fn\">x</span>, <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L52-L56","name":"PSet.rank_le_iff","line":52,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_le_iff\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>⦄, <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L47-L50","name":"PSet.rank_lt_of_mem","line":47,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_lt_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_lt_of_mem\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_lt_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L35-L45","name":"PSet.rank_congr","line":35,"kind":"theorem","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank_congr\"><span class=\"name\">PSet</span>.<span class=\"name\">rank_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\">rank</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/ZFC/Rank.lean#L31-L33","name":"PSet.rank","line":31,"kind":"def","docLink":"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank","doc":"The ordinal rank of a pre-set "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/ZFC/Rank.html#PSet.rank\"><span class=\"name\">PSet</span>.<span class=\"name\">rank</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/ZFC/PSet.html#PSet\">PSet.{u}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"}]}