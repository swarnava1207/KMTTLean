{"name":"Mathlib.Data.Nat.Squarefree","instances":[{"typeNames":["Squarefree"],"name":"Nat.instDecidablePredSquarefree","className":"Decidable"}],"imports":["Init","Mathlib.Algebra.Squarefree.Basic","Mathlib.Data.Nat.Factorization.PrimePow","Mathlib.RingTheory.UniqueFactorizationDomain.Nat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L392-L397","name":"Nat.prod_primeFactors_sdiff_of_squarefree","line":392,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_sdiff_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_sdiff_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_primeFactors_sdiff_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">a</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">t</span>, <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">∏ <span class=\"fn\">a</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L387-L390","name":"Nat.prod_primeFactors_invOn_squarefree","line":387,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_invOn_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_invOn_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_primeFactors_invOn_squarefree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.InvOn\">Set.InvOn</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorization/Defs.html#Nat.factorization\">factorization</a></span>.<a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp.support\">support</a></span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">p</span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>\n  <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">n</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L375-L385","name":"Nat.primeFactors_div_gcd","line":375,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_div_gcd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_div_gcd\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_div_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">n</span></span>).<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L367-L373","name":"Nat.primeFactors_prod","line":367,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.primeFactors_prod\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L363-L365","name":"Nat.prod_primeFactors_of_squarefree","line":363,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.prod_primeFactors_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_primeFactors_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span>, <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L357-L361","name":"Nat.coprime_div_gcd_of_squarefree","line":357,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.coprime_div_gcd_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.coprime_div_gcd_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">coprime_div_gcd_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">n</span></span>).<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L352-L355","name":"Nat.squarefree_mul_iff","line":352,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_mul_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_mul_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_mul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L349-L350","name":"Nat.coprime_of_squarefree_mul","line":349,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.coprime_of_squarefree_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.coprime_of_squarefree_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">coprime_of_squarefree_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L340-L347","name":"Nat.squarefree_mul","line":340,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_mul","doc":"`Squarefree` is multiplicative. Note that the → direction does not require `hmn`\nand generalizes to arbitrary commutative monoids. See `Squarefree.of_mul_left` and\n`Squarefree.of_mul_right` above for auxiliary lemmas. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmn</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L334-L338","name":"Nat.sq_mul_squarefree","line":334,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.sq_mul_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.sq_mul_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">sq_mul_squarefree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L329-L332","name":"Nat.sq_mul_squarefree_of_pos'","line":329,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.sq_mul_squarefree_of_pos'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.sq_mul_squarefree_of_pos'\"><span class=\"name\">Nat</span>.<span class=\"name\">sq_mul_squarefree_of_pos'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L302-L327","name":"Nat.sq_mul_squarefree_of_pos","line":302,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.sq_mul_squarefree_of_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.sq_mul_squarefree_of_pos\"><span class=\"name\">Nat</span>.<span class=\"name\">sq_mul_squarefree_of_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L294-L300","name":"Nat.sum_divisors_filter_squarefree","line":294,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.sum_divisors_filter_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.sum_divisors_filter_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisors_filter_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">d</span> ∈ <span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">d</span></span>}</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/NormalizedFactors.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Dedup.html#Multiset.toFinset\">toFinset</a></span>.<a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powerset\">powerset</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Multiset/Defs.html#Multiset.prod\">prod</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L244-L292","name":"Nat.divisors_filter_squarefree","line":244,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.divisors_filter_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.divisors_filter_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_filter_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">d</span></span>}</span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/MapFold.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Multiset/Defs.html#Multiset.prod\">prod</a></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/NormalizedFactors.html#UniqueFactorizationMonoid.normalizedFactors\">UniqueFactorizationMonoid.normalizedFactors</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Dedup.html#Multiset.toFinset\">toFinset</a></span>.<a href=\"./Mathlib/Data/Finset/Powerset.html#Finset.powerset\">powerset</a></span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L237-L240","name":"Nat.divisors_filter_squarefree_of_squarefree","line":237,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.divisors_filter_squarefree_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.divisors_filter_squarefree_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_filter_squarefree_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">d</span></span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L234-L235","name":"Nat.squarefree_two","line":234,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_two\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L231-L232","name":"Nat.instDecidablePredSquarefree","line":231,"kind":"instance","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.instDecidablePredSquarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.instDecidablePredSquarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">instDecidablePredSquarefree</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L222-L229","name":"Nat.squarefree_iff_minSqFac","line":222,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_minSqFac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_minSqFac\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_iff_minSqFac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac\">minSqFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L214-L220","name":"Nat.minSqFac_le_of_dvd","line":214,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_le_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_le_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFac_le_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac\">minSqFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m2</span> : <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L209-L212","name":"Nat.minSqFac_dvd","line":209,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFac_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac\">minSqFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L204-L207","name":"Nat.minSqFac_prime","line":204,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFac_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac\">minSqFac</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L185-L202","name":"Nat.minSqFac_has_prop","line":185,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_has_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac_has_prop\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFac_has_prop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.MinSqFacProp\">MinSqFacProp</a></span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac\">minSqFac</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L147-L183","name":"Nat.minSqFacAux_has_prop","line":147,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacAux_has_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacAux_has_prop\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFacAux_has_prop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ih</span> : <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> → <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.MinSqFacProp\">MinSqFacProp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacAux\">minSqFacAux</a></span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L132-L145","name":"Nat.minSqFacProp_div","line":132,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacProp_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacProp_div\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFacProp_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pk</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dk</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dkk</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.MinSqFacProp\">MinSqFacProp</a></span> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.MinSqFacProp\">MinSqFacProp</a></span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L125-L130","name":"Nat.MinSqFacProp","line":125,"kind":"def","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.MinSqFacProp","doc":"The correctness property of the return value of `minSqFac`.\n* If `none`, then `n` is squarefree;\n* If `some d`, then `d` is a minimal square factor of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.MinSqFacProp\"><span class=\"name\">Nat</span>.<span class=\"name\">MinSqFacProp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L117-L123","name":"Nat.minSqFac","line":117,"kind":"def","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac","doc":"Returns the smallest prime factor `p` of `n` such that `p^2 ∣ n`, or `none` if there is no\nsuch `p` (that is, `n` is squarefree). See also `Nat.squarefree_iff_minSqFac`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFac\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L101-L115","name":"Nat.minSqFacAux","line":101,"kind":"def","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacAux","doc":"Assuming that `n` has no factors less than `k`, returns the smallest prime `p` such that\n`p^2 ∣ n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.minSqFacAux\"><span class=\"name\">Nat</span>.<span class=\"name\">minSqFacAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L94-L99","name":"Nat.squarefree_and_prime_pow_iff_prime","line":94,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_and_prime_pow_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_and_prime_pow_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_and_prime_pow_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L83-L92","name":"Nat.squarefree_pow_iff","line":83,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_pow_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_pow_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_pow_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L71-L81","name":"Nat.Squarefree.ext_iff","line":71,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.Squarefree.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.Squarefree.ext_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">Squarefree</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span> → (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L67-L69","name":"Nat.squarefree_iff_factorization_le_one","line":67,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_factorization_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_factorization_le_one\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_iff_factorization_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorization/Defs.html#Nat.factorization\">factorization</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L60-L65","name":"Nat.squarefree_of_factorization_le_one","line":60,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_of_factorization_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_of_factorization_le_one\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_of_factorization_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorization/Defs.html#Nat.factorization\">factorization</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L56-L58","name":"Nat.factorization_eq_one_of_squarefree","line":56,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.factorization_eq_one_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.factorization_eq_one_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">factorization_eq_one_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hpn</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorization/Defs.html#Nat.factorization\">factorization</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L43-L54","name":"Squarefree.natFactorization_le_one","line":43,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Squarefree.natFactorization_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Squarefree.natFactorization_le_one\"><span class=\"name\">Squarefree</span>.<span class=\"name\">natFactorization_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorization/Defs.html#Nat.factorization\">factorization</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L40-L41","name":"Nat.squarefree_iff_prime_squarefree","line":40,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_prime_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_prime_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_iff_prime_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">x</span></span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L34-L35","name":"Squarefree.nodup_primeFactorsList","line":34,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Squarefree.nodup_primeFactorsList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Squarefree.nodup_primeFactorsList\"><span class=\"name\">Squarefree</span>.<span class=\"name\">nodup_primeFactorsList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factors.html#Nat.primeFactorsList\">primeFactorsList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/Squarefree.lean#L27-L30","name":"Nat.squarefree_iff_nodup_primeFactorsList","line":27,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_nodup_primeFactorsList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Squarefree.html#Nat.squarefree_iff_nodup_primeFactorsList\"><span class=\"name\">Nat</span>.<span class=\"name\">squarefree_iff_nodup_primeFactorsList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h0</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factors.html#Nat.primeFactorsList\">primeFactorsList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>"}]}