{"name":"Mathlib.Tactic.WithoutCDot","instances":[],"imports":["Init","Lean.Elab.SyntheticMVars","Mathlib.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/WithoutCDot.lean#L40-L52","name":"Lean.Elab.Term.elabWithoutCDot","line":40,"kind":"def","docLink":"./Mathlib/Tactic/WithoutCDot.html#Lean.Elab.Term.elabWithoutCDot","doc":"A set of parentheses, supporting type ascriptions, which does not process `路`.\n\nPrimarily, this is useful when quoting user-provided syntax inside parentheses, as it prevents `路`s\nfrom the caller being interpreted in the context of `()`s from the macro. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/WithoutCDot.html#Lean.Elab.Term.elabWithoutCDot\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabWithoutCDot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/WithoutCDot.lean#L29-L32","name":"Lean.Elab.Term.withoutCDotImpl","line":29,"kind":"def","docLink":"./Mathlib/Tactic/WithoutCDot.html#Lean.Elab.Term.withoutCDotImpl","doc":"Implementation detail of `withoutCDot` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/WithoutCDot.html#Lean.Elab.Term.withoutCDotImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">withoutCDotImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/WithoutCDot.lean#L21-L27","name":"Lean.Elab.Term.withoutCDot","line":21,"kind":"def","docLink":"./Mathlib/Tactic/WithoutCDot.html#Lean.Elab.Term.withoutCDot","doc":"A set of parentheses, supporting type ascriptions, which does not process `路`.\n\nPrimarily, this is useful when quoting user-provided syntax inside parentheses, as it prevents `路`s\nfrom the caller being interpreted in the context of `()`s from the macro. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/WithoutCDot.html#Lean.Elab.Term.withoutCDot\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">withoutCDot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser.Parser</a></div></div>"}]}