{"name":"Mathlib.RingTheory.Derivation.Lie","instances":[{"typeNames":["Derivation","Derivation"],"name":"Derivation.instBracket","className":"Bracket"},{"typeNames":["Derivation"],"name":"Derivation.instLieRing","className":"LieRing"},{"typeNames":["Derivation"],"name":"Derivation.instLieAlgebra","className":"LieAlgebra"}],"imports":["Init","Mathlib.Algebra.Lie.OfAssociative","Mathlib.RingTheory.Derivation.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Derivation/Lie.lean#L49-L52","name":"Derivation.instLieAlgebra","line":49,"kind":"instance","docLink":"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.instLieAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.instLieAlgebra\"><span class=\"name\">Derivation</span>.<span class=\"name\">instLieAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieAlgebra\">LieAlgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Derivation/Basic.html#Derivation\">Derivation</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Derivation/Lie.lean#L43-L47","name":"Derivation.instLieRing","line":43,"kind":"instance","docLink":"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.instLieRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.instLieRing\"><span class=\"name\">Derivation</span>.<span class=\"name\">instLieRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Lie/Basic.html#LieRing\">LieRing</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Derivation/Basic.html#Derivation\">Derivation</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Derivation/Lie.lean#L40-L41","name":"Derivation.commutator_apply","line":40,"kind":"theorem","docLink":"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.commutator_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.commutator_apply\"><span class=\"name\">Derivation</span>.<span class=\"name\">commutator_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D1 </span><span class=\"fn\">D2</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Derivation/Basic.html#Derivation\">Derivation</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">D1</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">D2</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">D1</span> <span class=\"fn\">(<span class=\"fn\">D2</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">D2</span> <span class=\"fn\">(<span class=\"fn\">D1</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Derivation/Lie.lean#L36-L38","name":"Derivation.commutator_coe_linear_map","line":36,"kind":"theorem","docLink":"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.commutator_coe_linear_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.commutator_coe_linear_map\"><span class=\"name\">Derivation</span>.<span class=\"name\">commutator_coe_linear_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D1 </span><span class=\"fn\">D2</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Derivation/Basic.html#Derivation\">Derivation</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">D1</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">D2</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">↑<span class=\"fn\">D1</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">↑<span class=\"fn\">D2</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Derivation/Lie.lean#L28-L34","name":"Derivation.instBracket","line":28,"kind":"instance","docLink":"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.instBracket","doc":"The commutator of derivations is again a derivation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Derivation/Lie.html#Derivation.instBracket\"><span class=\"name\">Derivation</span>.<span class=\"name\">instBracket</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket\">Bracket</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Derivation/Basic.html#Derivation\">Derivation</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Derivation/Basic.html#Derivation\">Derivation</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span> <span class=\"fn\">A</span>)</span></span></div></div>"}]}