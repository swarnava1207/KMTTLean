{"name":"Mathlib.MeasureTheory.Measure.Lebesgue.Complex","instances":[],"imports":["Init","Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","Mathlib.MeasureTheory.Constructions.BorelSpace.Complex"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L57-L58","name":"Complex.volume_preserving_equiv_real_prod","line":57,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.volume_preserving_equiv_real_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.volume_preserving_equiv_real_prod\"><span class=\"name\">Complex</span>.<span class=\"name\">volume_preserving_equiv_real_prod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Ergodic/MeasurePreserving.html#MeasureTheory.MeasurePreserving\">MeasureTheory.MeasurePreserving</a> <span class=\"fn\">(⇑<a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd\">measurableEquivRealProd</a>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L49-L55","name":"Complex.volume_preserving_equiv_pi","line":49,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.volume_preserving_equiv_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.volume_preserving_equiv_pi\"><span class=\"name\">Complex</span>.<span class=\"name\">volume_preserving_equiv_pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Ergodic/MeasurePreserving.html#MeasureTheory.MeasurePreserving\">MeasureTheory.MeasurePreserving</a> <span class=\"fn\">(⇑<a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi\">measurableEquivPi</a>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L45-L47","name":"Complex.measurableEquivRealProd_symm_apply","line":45,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd_symm_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">measurableEquivRealProd_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd\">measurableEquivRealProd</a>.<a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Embedding.html#MeasurableEquiv.symm\">symm</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\">p</span>.1</span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\">p</span>.2</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L42-L43","name":"Complex.measurableEquivRealProd_apply","line":42,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">measurableEquivRealProd_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd\">measurableEquivRealProd</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L38-L40","name":"Complex.measurableEquivRealProd","line":38,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd","doc":"Measurable equivalence between `ℂ` and `ℝ × ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivRealProd\"><span class=\"name\">Complex</span>.<span class=\"name\">measurableEquivRealProd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Embedding.html#MeasurableEquiv\">≃ᵐ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L34-L36","name":"Complex.measurableEquivPi_symm_apply","line":34,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi_symm_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">measurableEquivPi_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi\">measurableEquivPi</a>.<a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Embedding.html#MeasurableEquiv.symm\">symm</a></span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">I</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L30-L32","name":"Complex.measurableEquivPi_apply","line":30,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">measurableEquivPi_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi\">measurableEquivPi</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Lebesgue/Complex.lean#L26-L28","name":"Complex.measurableEquivPi","line":26,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi","doc":"Measurable equivalence between `ℂ` and `ℝ² = Fin 2 → ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Lebesgue/Complex.html#Complex.measurableEquivPi\"><span class=\"name\">Complex</span>.<span class=\"name\">measurableEquivPi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Embedding.html#MeasurableEquiv\">≃ᵐ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></div></div>"}]}