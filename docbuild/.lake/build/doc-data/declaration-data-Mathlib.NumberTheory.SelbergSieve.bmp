{"name":"Mathlib.NumberTheory.SelbergSieve","instances":[],"imports":["Init","Mathlib.Analysis.Normed.Ring.Basic","Mathlib.NumberTheory.ArithmeticFunction"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L226-L240","name":"SelbergSieve.siftedSum_le_mainSum_errSum_of_upperMoebius","line":226,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum_le_mainSum_errSum_of_upperMoebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum_le_mainSum_errSum_of_upperMoebius\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">siftedSum_le_mainSum_errSum_of_upperMoebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">muPlus</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.IsUpperMoebius\">IsUpperMoebius</a> <span class=\"fn\">muPlus</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum\">siftedSum</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.totalMass\">BoundingSieve.totalMass</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.mainSum\">mainSum</a> <span class=\"fn\">muPlus</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.errSum\">errSum</a> <span class=\"fn\">muPlus</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L205-L224","name":"SelbergSieve.siftedSum_le_sum_of_upperMoebius","line":205,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum_le_sum_of_upperMoebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum_le_sum_of_upperMoebius\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">siftedSum_le_sum_of_upperMoebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">muPlus</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.IsUpperMoebius\">IsUpperMoebius</a> <span class=\"fn\">muPlus</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum\">siftedSum</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑ <span class=\"fn\">d</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">muPlus</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.multSum\">multSum</a> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L200-L203","name":"SelbergSieve.IsUpperMoebius","line":200,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.IsUpperMoebius","doc":"A sequence of coefficients $\\mu^{+}$ is upper Moebius if $\\mu * \\zeta ≤ \\mu^{+} * \\zeta$. These\ncoefficients then yield an upper bound on the sifted sum. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.IsUpperMoebius\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">IsUpperMoebius</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">muPlus</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L194-L197","name":"SelbergSieve.siftedsum_eq_sum_support_mul_ite","line":194,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedsum_eq_sum_support_mul_ite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedsum_eq_sum_support_mul_ite\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">siftedsum_eq_sum_support_mul_ite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum\">siftedSum</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">d</span> ∈ <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.support\">BoundingSieve.support</a>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.weights\">BoundingSieve.weights</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L190-L192","name":"SelbergSieve.multSum_eq_main_err","line":190,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.multSum_eq_main_err","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.multSum_eq_main_err\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">multSum_eq_main_err</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.multSum\">multSum</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">BoundingSieve.nu</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.totalMass\">BoundingSieve.totalMass</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.rem\">rem</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L187-L188","name":"SelbergSieve.errSum","line":187,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.errSum","doc":"`errSum μ⁺` is the error term in the upper bound on `sifted_sum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.errSum\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">errSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">muPlus</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L184-L185","name":"SelbergSieve.mainSum","line":184,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.mainSum","doc":"`X * mainSum μ⁺` is the main term in the upper bound on `sifted_sum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.mainSum\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">mainSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">muPlus</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L181-L182","name":"SelbergSieve.siftedSum","line":181,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum","doc":"The weight of all the elements that are not a multiple of any of our finite set of primes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.siftedSum\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">siftedSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L178-L179","name":"SelbergSieve.Notation.termR","line":178,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termR","doc":"The remainder term in the approximation A_d = ν (d) X + R_d. This is the degree to which `nu`\nfails to approximate the proportion of the weight that is a multiple of `d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termR\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termR</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L178-L179","name":"SelbergSieve.Notation.termR.«delab_app.SelbergSieve.rem»","line":178,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termR.«delab_app.SelbergSieve.rem»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termR.«delab_app.SelbergSieve.rem»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termR</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">SelbergSieve</span>.<span class=\"name\">rem»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L173-L176","name":"SelbergSieve.rem","line":173,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.rem","doc":"The remainder term in the approximation A_d = ν (d) X + R_d. This is the degree to which `nu`\nfails to approximate the proportion of the weight that is a multiple of `d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.rem\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">rem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L170-L171","name":"SelbergSieve.Notation.term𝒜","line":170,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.term𝒜","doc":"The weight of all the elements that are a multiple of `d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.term𝒜\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">term𝒜</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L170-L171","name":"SelbergSieve.Notation.term𝒜.«delab_app.SelbergSieve.multSum»","line":170,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.term𝒜.«delab_app.SelbergSieve.multSum»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.term𝒜.«delab_app.SelbergSieve.multSum»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">term𝒜</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">SelbergSieve</span>.<span class=\"name\">multSum»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L166-L168","name":"SelbergSieve.multSum","line":166,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.multSum","doc":"The weight of all the elements that are a multiple of `d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.multSum\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">multSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L150-L164","name":"SelbergSieve.nu_lt_one_of_dvd_prodPrimes","line":150,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.nu_lt_one_of_dvd_prodPrimes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.nu_lt_one_of_dvd_prodPrimes\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">nu_lt_one_of_dvd_prodPrimes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdP</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd_ne_one</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">BoundingSieve.nu</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L146-L148","name":"SelbergSieve.nu_ne_zero","line":146,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.nu_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.nu_ne_zero\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">nu_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">BoundingSieve.nu</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L136-L144","name":"SelbergSieve.nu_pos_of_dvd_prodPrimes","line":136,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.nu_pos_of_dvd_prodPrimes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.nu_pos_of_dvd_prodPrimes\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">nu_pos_of_dvd_prodPrimes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">BoundingSieve.nu</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L132-L134","name":"SelbergSieve.prod_primeFactors_nu","line":132,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.prod_primeFactors_nu","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.prod_primeFactors_nu\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">prod_primeFactors_nu</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">BoundingSieve.nu</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">BoundingSieve.nu</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L126-L128","name":"SelbergSieve.squarefree_of_mem_divisors_prodPrimes","line":126,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.squarefree_of_mem_divisors_prodPrimes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.squarefree_of_mem_divisors_prodPrimes\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">squarefree_of_mem_divisors_prodPrimes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L123-L124","name":"SelbergSieve.squarefree_of_dvd_prodPrimes","line":123,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.squarefree_of_dvd_prodPrimes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.squarefree_of_dvd_prodPrimes\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">squarefree_of_dvd_prodPrimes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L120-L121","name":"SelbergSieve.prodPrimes_ne_zero","line":120,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.prodPrimes_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.prodPrimes_ne_zero\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">prodPrimes_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">BoundingSieve.prodPrimes</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L110-L110","name":"SelbergSieve.Notation.one_le_y","line":110,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.one_le_y","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.one_le_y\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">one_le_y</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">s</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve\">SelbergSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.level\">level</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L107-L108","name":"SelbergSieve.Notation.termY.«delab_app.SelbergSieve.level»","line":107,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termY.«delab_app.SelbergSieve.level»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termY.«delab_app.SelbergSieve.level»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termY</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">SelbergSieve</span>.<span class=\"name\">level»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L107-L108","name":"SelbergSieve.Notation.termY","line":107,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termY","doc":"The `level` of the sieve controls how many terms we include in the inclusion-exclusion type\nsum. A higher level will yield a tighter bound for the main term, but will also increase the\nsize of the error term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termY\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termY</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L105-L106","name":"SelbergSieve.Notation.termA_1.«delab_app.BoundingSieve.support»","line":105,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA_1.«delab_app.BoundingSieve.support»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA_1.«delab_app.BoundingSieve.support»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termA_1</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">BoundingSieve</span>.<span class=\"name\">support»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L105-L106","name":"SelbergSieve.Notation.termA_1","line":105,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA_1","doc":"The set of natural numbers that is to be sifted. The fundamental lemma yields an upper bound\non the size of this set after the multiples of small primes have been removed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA_1\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termA_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L103-L104","name":"SelbergSieve.Notation.termX","line":103,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termX","doc":"An approximation to `∑ i in support, weights i`, i.e. the size of the unsifted set. A bad\napproximation will yield a weak statement in the final theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termX\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termX</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L103-L104","name":"SelbergSieve.Notation.termX.«delab_app.BoundingSieve.totalMass»","line":103,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termX.«delab_app.BoundingSieve.totalMass»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termX.«delab_app.BoundingSieve.totalMass»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termX</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">BoundingSieve</span>.<span class=\"name\">totalMass»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L101-L102","name":"SelbergSieve.Notation.termA","line":101,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA","doc":"A sequence representing how much each element of `support` should be weighted. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termA</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L101-L102","name":"SelbergSieve.Notation.termA.«delab_app.BoundingSieve.weights»","line":101,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA.«delab_app.BoundingSieve.weights»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termA.«delab_app.BoundingSieve.weights»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termA</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">BoundingSieve</span>.<span class=\"name\">weights»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L99-L100","name":"SelbergSieve.Notation.termP","line":99,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termP","doc":"The finite set of prime numbers whose multiples are to be sifted from `support`. We work with\ntheir product because it lets us treat `nu` as a multiplicative arithmetic function. It also\nplays well with Moebius inversion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termP\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termP</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L99-L100","name":"SelbergSieve.Notation.termP.«delab_app.BoundingSieve.prodPrimes»","line":99,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termP.«delab_app.BoundingSieve.prodPrimes»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termP.«delab_app.BoundingSieve.prodPrimes»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termP</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">BoundingSieve</span>.<span class=\"name\">prodPrimes»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L97-L98","name":"SelbergSieve.Notation.termν.«delab_app.BoundingSieve.nu»","line":97,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termν.«delab_app.BoundingSieve.nu»","doc":"Pretty printer defined by `notation3` command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termν.«delab_app.BoundingSieve.nu»\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termν</span>.<span class=\"name\">«delab_app</span>.<span class=\"name\">BoundingSieve</span>.<span class=\"name\">nu»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Delaborator/Basic.html#Lean.PrettyPrinter.Delaborator.Delab\">Lean.PrettyPrinter.Delaborator.Delab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L97-L98","name":"SelbergSieve.Notation.termν","line":97,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termν","doc":"`nu d` is an approximation to the proportion of elements of `support` that are a multiple of\n`d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.Notation.termν\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">Notation</span>.<span class=\"name\">termν</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L88-L88","name":"SelbergSieve.one_le_level","line":88,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.one_le_level","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.one_le_level\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">one_le_level</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve\">SelbergSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.level\">level</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L87-L87","name":"SelbergSieve.level","line":87,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.level","doc":"The `level` of the sieve controls how many terms we include in the inclusion-exclusion type\nsum. A higher level will yield a tighter bound for the main term, but will also increase the\nsize of the error term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.level\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">level</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve\">SelbergSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L83-L83","name":"SelbergSieve.mk","line":83,"kind":"ctor","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.mk\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toBoundingSieve</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">level</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one_le_level</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">level</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve\">SelbergSieve</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L83-L88","name":"SelbergSieve.toBoundingSieve","line":83,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.toBoundingSieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve.toBoundingSieve\"><span class=\"name\">SelbergSieve</span>.<span class=\"name\">toBoundingSieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve\">SelbergSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L81-L88","name":"SelbergSieve","line":81,"kind":"class","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve","doc":"The Selberg upper bound sieve in particular introduces a parameter called the `level` which\ngives the user control over the size of the error term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#SelbergSieve\"><span class=\"name\">SelbergSieve</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L79-L79","name":"BoundingSieve.nu_lt_one_of_prime","line":79,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu_lt_one_of_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu_lt_one_of_prime\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">nu_lt_one_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">prodPrimes</a> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">nu</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L78-L78","name":"BoundingSieve.nu_pos_of_prime","line":78,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu_pos_of_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu_pos_of_prime\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">nu_pos_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">prodPrimes</a> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">nu</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L77-L77","name":"BoundingSieve.nu_mult","line":77,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu_mult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu_mult\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">nu_mult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\">nu</a>.<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">IsMultiplicative</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L76-L76","name":"BoundingSieve.nu","line":76,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu","doc":"`nu d` is an approximation to the proportion of elements of `support` that are a multiple of\n`d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.nu\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">nu</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L73-L73","name":"BoundingSieve.totalMass","line":73,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.totalMass","doc":"An approximation to `∑ i in support, weights i`, i.e. the size of the unsifted set. A bad\napproximation will yield a weak statement in the final theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.totalMass\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">totalMass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L70-L70","name":"BoundingSieve.weights_nonneg","line":70,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.weights_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.weights_nonneg\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">weights_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.weights\">weights</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L69-L69","name":"BoundingSieve.weights","line":69,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.weights","doc":"A sequence representing how much each element of `support` should be weighted. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.weights\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">weights</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L67-L67","name":"BoundingSieve.prodPrimes_squarefree","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes_squarefree\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">prodPrimes_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\">prodPrimes</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L66-L66","name":"BoundingSieve.prodPrimes","line":66,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes","doc":"The finite set of prime numbers whose multiples are to be sifted from `support`. We work with\ntheir product because it lets us treat `nu` as a multiplicative arithmetic function. It also\nplays well with Moebius inversion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.prodPrimes\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">prodPrimes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L62-L62","name":"BoundingSieve.support","line":62,"kind":"def","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.support","doc":"The set of natural numbers that is to be sifted. The fundamental lemma yields an upper bound\non the size of this set after the multiples of small primes have been removed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.support\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L59-L59","name":"BoundingSieve.mk","line":59,"kind":"ctor","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve.mk\"><span class=\"name\">BoundingSieve</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">support</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prodPrimes</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prodPrimes_squarefree</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree/Basic.html#Squarefree\">Squarefree</a> <span class=\"fn\">prodPrimes</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weights</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">weights_nonneg</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">weights</span> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">totalMass</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nu</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nu_mult</span> : <span class=\"fn\"><span class=\"fn\">nu</span>.<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">IsMultiplicative</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nu_pos_of_prime</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">prodPrimes</span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">nu</span> <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nu_lt_one_of_prime</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">prodPrimes</span> → <span class=\"fn\"><span class=\"fn\">nu</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\">BoundingSieve</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/SelbergSieve.lean#L50-L79","name":"BoundingSieve","line":50,"kind":"class","docLink":"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve","doc":"We set up a sieve problem as follows. Take a finite set of natural numbers `A`, whose elements\nare weighted by a sequence `a n`. Also take a finite set of primes `P`, represented by a squarefree\nnatural number. These are the primes that we will sift from our set `A`. Suppose we can approximate\n`∑ n ∈ {k ∈ A | d ∣ k}, a n = ν d * X + R d`, where `X` is an approximation to the total size of `A`\nand `ν` is a multiplicative arithmetic function such that `0 < ν p < 1` for all primes `p ∣ P`.\n\nThen a sieve-type theorem will give us an upper (or lower) bound on the size of the sifted sum\n`∑ n ∈ {k ∈ support | k.Coprime P}, a n`, obtained by removing any elements of `A` that are a\nmultiple of a prime in `P`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/SelbergSieve.html#BoundingSieve\"><span class=\"name\">BoundingSieve</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}